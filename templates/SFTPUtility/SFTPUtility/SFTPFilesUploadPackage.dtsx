<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="9/30/2016 11:18:41 AM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="NWEMEH-20256P"
  DTS:CreatorName="KANSAS\QadminDN"
  DTS:DTSID="{BE9EF9F8-824A-4381-AD87-02609D35195A}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="11.0.6020.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="SFTPFilesUploadPackage"
  DTS:PackageType="5"
  DTS:ProtectionLevel="0"
  DTS:VersionBuild="65"
  DTS:VersionGUID="{FC031019-E4E3-409D-BDC5-3E661DCF3353}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Outgoing Files Conn Mgr]"
      DTS:CreationName="FILE"
      DTS:DTSID="{B55A6097-EE4B-43BC-A337-8A4D001814C7}"
      DTS:ObjectName="Outgoing Files Conn Mgr">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Project::pLocalRemoteUploadPath]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:FileUsageType="2"
          DTS:ConnectionString="\\kansas.us\qfs\IS\Selective Access\VC Data\VCDataProcessings\OutBoundFiles\" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="OLEDB_ETLAudit"
      DTS:CreationName="DTS.LogProviderSQLServer.3"
      DTS:DelayValidation="True"
      DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
      DTS:DTSID="{C9CC8157-C831-4166-A4DA-15A8DC287BE9}"
      DTS:ObjectName="BIxPress Log Provider">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{9CBFA8E0-959A-4AB1-9987-316B29C8576B}"
      DTS:ObjectName="pFileTypeExtension">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">.txt</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{2BA0F781-06CF-4A06-A84F-42C203D3BE66}"
      DTS:ObjectName="pJobInstanceParentID">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{735AA873-82BC-4354-B680-9A195BC73092}"
      DTS:ObjectName="pLocalRemotePath">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">\\kansas.us\qfs\IS\Selective Access\VC Data\VCDataProcessings\OutBoundFiles\</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{607AC40C-E178-4BD9-985C-A3EA72F270A0}"
      DTS:ObjectName="pSFTPRemotePath">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">/Home/quidelsftp/Inbound/</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
      DTS:DTSID="{C2E74AC7-0426-4985-A3BA-29FB9390016D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOpsNF_AlertList">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
      DTS:DTSID="{62764ED6-96EF-46D4-AD1C-9AFA38617E05}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOpsNF_AlertList_All">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
      DTS:DTSID="{1B7BBF05-538F-4EA8-8C18-4D5D65FB2C17}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOpsNF_From">
      <DTS:VariableValue
        DTS:DataType="8">ETLNotifications@quidel.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
      DTS:DTSID="{10DC50AF-3A03-40F1-B59A-A88C70E5464F}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOpsNF_Notification_Counter">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
      DTS:DTSID="{6962A143-6564-4E9A-AF9A-0CD82F0E825A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOpsNF_OtherConfigSettings">
      <DTS:VariableValue
        DTS:DataType="8">PRIORITY_MODE=DELAYED;EMAIL_FORMAT=HTML;SMTP_UID=;SMTP_PWD=;SMTP_PORT=25;SMTP_USESSL=False;NOTIFY_ONERROR=True;NOTIFY_ONWARNING=False;NOTIFY_ONSUCCESS=False;NOTIFY_ONCOMPLETE=False;SMS_EMAILLIST=8582485354@vzwpix.com;MAX_NOTIFICATIONS=10;ENABLE_TIME_THRESHOLD=False;ENABLE_ROWCOUNT_THRESHOLD=False;SMS_MAXLENGTH=140;FILTERED_ALERTS=;CC_EMAILLIST=;BCC_EMAILLIST=;NOTIFY_USING_EMAIL=True;NOTIFY_USING_SMS=True;NOTIFY_USING_EVENTLOG=False;NOTIFY_USING_LOGFILE=False;LOG_FOLDER_PATH=C:\SSIS\Log;USE_CUSTOM_EMAIL_TEMPLATE=False;CUSTOM_EMAIL_TEMPLATE_FILEPATH=C:\SSIS\Config\NF_EmailTemplate.htm;DELETE_LOG_OLDER_THAN_DAYS=5</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
      DTS:DTSID="{5BCAB951-1DE8-4A48-BD7E-0B62CE0055A3}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOpsNF_SMTPServerName">
      <DTS:VariableValue
        DTS:DataType="8">relay.quidel.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
      DTS:DTSID="{75E02E3C-1C17-4A93-9914-CC94DF34555B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOpsNF_To">
      <DTS:VariableValue
        DTS:DataType="8">BISupport@quidel.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOps : DON'T CHANGE PREFIX. This variable (introduced in v3.2) controls execution of all event handlers for BIxPress Auditing Framework. Set this variable to True or -1 if you want to disable auditing framework related code inside all eventhandlers. You may also have to set Package.LoggingMode=2 along with this variable if you want to disable framework completely."
      DTS:DTSID="{4E1CB68D-CDF4-4AF0-A637-E3851A3880E9}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOps_DisableBIxAuditing">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
      DTS:DTSID="{3CD62CFF-618C-473B-ACE1-EC85669CCDA5}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOps_GroupNames">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0663E337-501D-4853-8439-8C3D27E000E4}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vCurJobID"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8B0B3BE2-102A-4148-9F5E-95BEA9520D85}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vCurJobInstanceID"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E936A2E1-888A-4F84-862B-02673B79C075}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vCurUserID"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{05D01888-D263-4B27-A200-1004BB7BF431}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vDeletedRowCount"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{83EB2BCF-42C0-4F9E-843C-8303A5F5C08D}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vDeletedTotalRowCount"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{243E185D-13AE-482C-8B1F-AFF481074B85}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vDeleteFlatFiles"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{68D819D6-6F76-4FAB-AE87-A710C9DE6FF6}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vEnvironmentTEXT"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8A1299EC-803E-4035-A307-0ECA8C511730}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vFileCreatedDate"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="7">9/30/2016 2:03:01 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F65A1A31-83DE-49F8-8515-568E477FD1C3}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vFileLastModifiedDate"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="7">9/30/2016 2:03:10 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5DA96ECC-5A4A-4241-8FEA-92E411FF3903}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vInsertedTotalRowCount"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A8DEA328-8046-443A-AECB-C181EF4460A4}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vLastRecordsProcessedDate"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="7">11/10/2016 2:22:00 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8B16B788-0CAB-4774-A00A-789CCBC224D9}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::pLocalRemotePath]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vLocalRemotePath">
      <DTS:VariableValue
        DTS:DataType="8">\\kansas.us\qfs\IS\Selective Access\VC Data\VCDataProcessings\OutBoundFiles\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C1FEAC25-C8CE-40BF-82B6-FBC181D9979C}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="(DT_STR, 4, 1252) DATEPART(&quot;yyyy&quot;, @[System::StartTime]) + &quot;-&quot; +&#xA;&#xA;RIGHT(&quot;00&quot; + (DT_STR, 2, 1252) DATEPART(&quot;mm&quot;, @[System::StartTime]), 2) + &quot;-&quot; +&#xA;&#xA;RIGHT(&quot;00&quot; + (DT_STR, 2, 1252) DATEPART(&quot;dd&quot;, @[System::StartTime]), 2) + &quot; &quot; +&#xA;&#xA;RIGHT(&quot;00&quot; + (DT_STR, 2, 1252) DATEPART(&quot;hh&quot;, @[System::StartTime]), 2) + &quot;:&quot; +&#xA;&#xA;RIGHT(&quot;00&quot; + (DT_STR, 2, 1252) DATEPART(&quot;mi&quot;, @[System::StartTime]), 2) + &quot;:&quot; +&#xA;RIGHT(&quot;00&quot; + (DT_STR, 2, 1252) DATEPART(&quot;ss&quot;, @[System::StartTime]), 2) + &quot;.&quot; +&#xA;RIGHT(&quot;000&quot; + (DT_STR, 3, 1252) DATEPART(&quot;ms&quot;, @[System::StartTime]), 3)"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vPackageStartDate">
      <DTS:VariableValue
        DTS:DataType="8">2017-03-13 08:54:51.000</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9CA5A518-9285-4F35-BEB5-CCE8D77951E9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vProcessingFullPathName"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{74D3ABBA-8B3B-4DEC-AF04-C130BD2B1838}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vRejectedTotalRowCount"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{878C1D19-CB07-4AED-84E0-490DBCA0A266}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vUpdatedTotalRowCount"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">7,22,PipelineInitialization,18,OnPipelineRowsSent,24,OnPipelinePrePrimeOutput,25,OnPipelinePostPrimeOutput,24,OnPipelinePreEndOfRowset,25,OnPipelinePostEndOfRowset,7,OnError</DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">0</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">0</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePostEndOfRowset"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">0</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">0</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePostPrimeOutput"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">0</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">0</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePreEndOfRowset"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">0</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">0</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePrePrimeOutput"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">0</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">0</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelineRowsSent"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">0</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">0</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="PipelineInitialization"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">0</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">0</DTS:Property>
    </DTS:Property>
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{C9CC8157-C831-4166-A4DA-15A8DC287BE9}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Completion (Audit)"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{30d49737-fc51-4c9b-98ee-2c4ffcace8f2}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Completion (Audit)">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Completion (Audit)\Mark Job As Complete in Job"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{15637aa4-6be5-4b05-b221-e5a7e3d4c0d2}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Mark Job As Complete in Job"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{36A82C7A-442F-484F-9273-3C80014FC15A}"
              SQLTask:BypassPrepare="False"
              SQLTask:SqlStatementSource="UPDATE [Audit].[Job] &#xA;SET  LastRunStartDate = ?,&#xA;  LastRunEndDate = GETDATE(), &#xA;  ExpectedRunTimeNUMBER = DATEDIFF(MS, ?, GETDATE()),&#xA;  JobLastStatus = 'Pass' &#xA; WHERE JobID = ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::vPackageStartDate"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="133"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::vPackageStartDate"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="133"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::vCurJobID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Completion (Audit)\Mark Job as Complete in JobInstance"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{5db9a9ef-d11f-4889-813d-3788fff4a359}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Mark Job as Complete in JobInstance"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{36A82C7A-442F-484F-9273-3C80014FC15A}"
              SQLTask:SqlStatementSource="EXEC [Audit].[logJobInstance] &#xA;@JobInstanceID = ?,&#xA;@RowCreatedNumber = ?, &#xA;@RowUpdatedNumber = ?, &#xA;@RowDeletedNumber = ?, &#xA;@RowRejectedNumber=?, &#xA;@JobSuccessIND = 'S',&#xA;@JobCompleteDTS = 'Today';" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::vCurJobInstanceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::vInsertedTotalRowCount"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::vUpdatedTotalRowCount"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::vDeletedTotalRowCount"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="User::vRejectedTotalRowCount"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Data Process From Quidel to Value Centric (SFTP Data Upload)"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{739F23A9-C2AE-4F58-9C33-3ACCE1E472D9}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Data Process From Quidel to Value Centric (SFTP Data Upload)">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Data Process From Quidel to Value Centric (SFTP Data Upload)\Clean up Directory After Data Processing"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{EC3DCB62-6DFE-473A-8640-158CF43AE361}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="Clean up Directory After Data Processing">
          <DTS:ForEachEnumerator
            DTS:CreationName="DTS.ForEachFileEnumerator.3"
            DTS:DTSID="{DDC9E445-8B27-480D-B849-F583C0BAB459}"
            DTS:ObjectName="{DDC9E445-8B27-480D-B849-F583C0BAB459}">
            <DTS:PropertyExpression
              DTS:Name="Directory">@[$Project::pLocalRemoteUploadPath]</DTS:PropertyExpression>
            <DTS:ObjectData>
              <ForEachFileEnumeratorProperties>
                <FEFEProperty
                  Folder="\\kansas.us\qfs\IS\Selective Access\VC Data\VCDataProcessings\OutBoundFiles\" />
                <FEFEProperty
                  FileSpec="*.*" />
                <FEFEProperty
                  FileNameRetrievalType="0" />
                <FEFEProperty
                  Recurse="0" />
              </ForEachFileEnumeratorProperties>
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Data Process From Quidel to Value Centric (SFTP Data Upload)\Clean up Directory After Data Processing\Delete Flat Files from Directory"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:DelayValidation="True"
              DTS:Description="File System Task"
              DTS:DTSID="{3C3EABE5-D35E-4B51-8830-676F81B7D155}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Delete Flat Files from Directory"
              DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <FileSystemData
                  TaskOperationType="DeleteFile"
                  TaskSourcePath="User::vDeleteFlatFiles"
                  TaskIsSourceVariable="True" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{3663B786-A6B8-467B-91D4-490D1160F12E}"
              DTS:ObjectName="{3663B786-A6B8-467B-91D4-490D1160F12E}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::vDeleteFlatFiles" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Data Process From Quidel to Value Centric (SFTP Data Upload)\Send Quidel Account Files to Value Centric"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{B4D03E51-87FD-4289-A040-A170FADB4A3C}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Send Quidel Account Files to Value Centric">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Data Process From Quidel to Value Centric (SFTP Data Upload)\Send Quidel Account Files to Value Centric\TF File Properties Task"
              DTS:CreationName="PW.TaskFactory.FilePropertiesTask.FileProperties, PW.TaskFactory110, Version=1.0.0.0, Culture=neutral, PublicKeyToken=47acf905d0337c39"
              DTS:DelayValidation="True"
              DTS:Description="TF File Properties Task"
              DTS:DTSID="{0fd32877-7aad-45d7-b67f-089fec385707}"
              DTS:ExecutableType="PW.TaskFactory.FilePropertiesTask.FileProperties, PW.TaskFactory110, Version=1.0.0.0, Culture=neutral, PublicKeyToken=47acf905d0337c39"
              DTS:LocaleID="-1"
              DTS:ObjectName="TF File Properties Task"
              DTS:TaskContact="File Properties Task;Pragmatic Works, Inc; Task Factory (c) 2009 - 2016 Pragmatic Works, Inc; http://www.pragmaticworks.com;support@pragmaticworks.com"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <FileProperties
                  File_FileName=""
                  File_Extension=""
                  File_CreationTime="vFileCreatedDate"
                  File_CreationTimeUtc=""
                  File_LastAccessTimeUtc=""
                  File_LastAccessTime=""
                  File_LastWriteTime="vFileLastModifiedDate"
                  File_LastWriteTimeUtc=""
                  File_FileInUse=""
                  File_Hidden=""
                  File_Readonly=""
                  File_Encrypted=""
                  File_Compressed=""
                  File_Archived=""
                  File_Exists=""
                  File_Content=""
                  File_Size=""
                  StopExecutionOnError="False"
                  SelectedSourceType="Variable"
                  SelectedVariableOrConnectionManager="vProcessingFullPathName" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Data Process From Quidel to Value Centric (SFTP Data Upload)\Send Quidel Account Files to Value Centric\Upload FlatFiles To Value Centric Server"
              DTS:CreationName="PW.TaskFactory.SFTPTask.SFTPTask, PW.TaskFactory110, Version=1.0.0.0, Culture=neutral, PublicKeyToken=47acf905d0337c39"
              DTS:Description="TF Secure FTP Task"
              DTS:DTSID="{752a3516-1a00-487b-a8f9-76902cc6a267}"
              DTS:ExecutableType="PW.TaskFactory.SFTPTask.SFTPTask, PW.TaskFactory110, Version=1.0.0.0, Culture=neutral, PublicKeyToken=47acf905d0337c39"
              DTS:LocaleID="-1"
              DTS:ObjectName="Upload FlatFiles To Value Centric Server"
              DTS:TaskContact="Secure FTP Task;Pragmatic Works, Inc; Task Factory (c) 2009 - 2016 Pragmatic Works, Inc; http://www.pragmaticworks.com;support@pragmaticworks.com"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SFTPTask
                  IncludeSubdirectories="False"
                  TaskAction="Upload_directory_to_server"
                  StopPackageOnFailure="True"
                  LocalPathStoredInVariable="True"
                  LogFileLocation=""
                  LocalFileVariableName="$Project::pLocalRemoteUploadPath"
                  FileFilter=""
                  LocalFileFilter=""
                  ResultVariable=""
                  LocalConnectionManagerName="Outgoing Files Conn Mgr"
                  OverwriteLocalFile="False"
                  RemotePathContainsFileName="False"
                  RemoteFTPConnectionName="{BAFC7D68-543E-4766-8418-3691E9157693}"
                  RemotePathStoredInVariable="True"
                  RemoteDirectoryOrFile="$Project::pSFTPRemoteUploadPath"
                  OverwriteRemoteFile="True"
                  ShowDebugInfo="False"
                  SSHMaxPacketSize="0" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Data Process From Quidel to Value Centric (SFTP Data Upload)\Send Quidel Account Files to Value Centric.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{621C10F8-4CF0-42BC-A95A-68F8452A2046}"
              DTS:From="Package\Data Process From Quidel to Value Centric (SFTP Data Upload)\Send Quidel Account Files to Value Centric\TF File Properties Task"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Data Process From Quidel to Value Centric (SFTP Data Upload)\Send Quidel Account Files to Value Centric\Upload FlatFiles To Value Centric Server" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Data Process From Quidel to Value Centric (SFTP Data Upload).PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{D973A456-4B8C-40FE-8281-92DE8F707B90}"
          DTS:From="Package\Data Process From Quidel to Value Centric (SFTP Data Upload)\Send Quidel Account Files to Value Centric"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Data Process From Quidel to Value Centric (SFTP Data Upload)\Clean up Directory After Data Processing" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Initialization"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:DelayValidation="True"
      DTS:Description="Sequence Container"
      DTS:DTSID="{ef924a26-6d58-4762-a292-7d808ba85538}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Initialization">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Initialization\Validate Connection Managers"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Script Task"
          DTS:DTSID="{fffea361-6e73-4bb0-baaf-4fea4126bdcc}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Validate Connection Managers"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_ad4bbfc4937841b99fea9ede93a90f69"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_c89fd17772d4447397f9073850b4717a")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Microsoft")]
[assembly: AssemblyProduct("ST_c89fd17772d4447397f9073850b4717a")]
[assembly: AssemblyCopyright("Copyright @ Microsoft 2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c89fd17772d4447397f9073850b4717a.Properties.Settings.get_Default():ST_c89fd17772d4447397f9073850b4717a.Properties.Sett" +
    "ings")]

namespace ST_c89fd17772d4447397f9073850b4717a.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Runtime.InteropServices;
#endregion

namespace ST_336c1c62f21c4b339ee44e942844ebb7
{

    // SET COM to FALSE 
    [ComVisible(false)]
    public class BaseClass
    {
        /// <summary>
        /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
        /// or parent of this class.
        /// </summary>
        [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
        [ComVisible(false)]
        public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
        {
            #region Help:  Using Integration Services variables and parameters in a script
            /* To use a variable in this script, first ensure that the variable has been added to 
             * either the list contained in the ReadOnlyVariables property or the list contained in 
             * the ReadWriteVariables property of this script task, according to whether or not your
             * code needs to write to the variable.  To add the variable, save this script, close this instance of
             * Visual Studio, and update the ReadOnlyVariables and 
             * ReadWriteVariables properties in the Script Transformation Editor window.
             * To use a parameter in this script, follow the same steps. Parameters are always read-only.
             * 
             * Example of reading from a variable:
             *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
             * 
             * Example of writing to a variable:
             *  Dts.Variables["User::myStringVariable"].Value = "new value";
             * 
             * Example of reading from a package parameter:
             *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
             *  
             * Example of reading from a project parameter:
             *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
             * 
             * Example of reading from a sensitive project parameter:
             *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
             * */

            #endregion

            #region Help:  Firing Integration Services events from a script
            /* This script task can fire events for logging purposes.
             * 
             * Example of firing an error event:
             *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
             * 
             * Example of firing an information event:
             *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
             * 
             * Example of firing a warning event:
             *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
             * */
            #endregion

            #region Help:  Using Integration Services connection managers in a script
            /* Some types of connection managers can be used in this script task.  See the topic 
             * "Working with Connection Managers Programatically" for details.
             * 
             * Example of using an ADO.Net connection manager:
             *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
             *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
             *  //Use the connection in some code here, then release the connection
             *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
             *
             * Example of using a File connection manager
             *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
             *  string filePath = (string)rawConnection;
             *  //Use the connection in some code here, then release the connection
             *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
             * */
            #endregion


            /// <summary>
            /// This method is called when this script task executes in the control flow.
            /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
            /// To open Help, press F1.
            /// </summary>
            public void Main()
            {
                // Connection Manager Validaion Version 1.1  Date: 28/09/2016 4:30PM PST
                // Code Development By; Darlington C. Nwemeh 
                // Purpose: To Validate ALL Connection Manager beforehand of Package Execution and to Step OFF Errors from Excel Connections if warranted. 
                //Copyrights (c) 2016 Quidel Corporation


                bool failure = false;
                bool fireAgain = true;
                foreach (var ConnMgr in Dts.Connections)
                {
                    if (ConnMgr.DelayValidation != true)
                    {
                        Dts.Events.FireInformation(1, "", String.Format("ConnectionManager='{0}', ConnectionString='{1}'", ConnMgr.Name, ConnMgr.ConnectionString), "", 0, ref fireAgain);

                        try
                        {
                            ConnMgr.AcquireConnection(null);
                            Dts.Events.FireInformation(1, "", String.Format("Connection acquired successfully on '{0}'", ConnMgr.Name), "", 0, ref fireAgain);
                        }
                        catch (Exception ex)
                        {
                            Dts.Events.FireError(-1, "", String.Format("Failed to acquire connection to '{0}'. Error Message='{1}'", ConnMgr.Name, ex.Message), "", 0);
                            failure = true;
                        }
                    }
                }

                if (failure)
                    Dts.TaskResult = (int)ScriptResults.Failure;
                else
                    Dts.TaskResult = (int)ScriptResults.Success;
            }

            #region ScriptResults declaration
            /// <summary>
            /// This enum provides a convenient shorthand within the scope of this class for setting the
            /// result of the script.
            /// 
            /// This code was generated automatically.
            /// </summary>
            enum ScriptResults
            {
                Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
                Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
            };
            #endregion

        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_c89fd17772d4447397f9073850b4717a</msb:CodeName>
		<msb:DisplayName>ST_c89fd17772d4447397f9073850b4717a</msb:DisplayName>
		<msb:ProjectId>{111133EE-1033-4C5F-9E40-842621016D1B}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_ad4bbfc4937841b99fea9ede93a90f69.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="ST_ad4bbfc4937841b99fea9ede93a90f69.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{4736F36B-C423-4DDA-85E9-3DE5DE48E751}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_c89fd17772d4447397f9073850b4717a</RootNamespace><AssemblyName>ST_ad4bbfc4937841b99fea9ede93a90f69</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c89fd17772d4447397f9073850b4717a.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c89fd17772d4447397f9073850b4717a.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c89fd17772d4447397f9073850b4717a.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_c89fd17772d4447397f9073850b4717a.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_c89fd17772d4447397f9073850b4717a.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_c89fd17772d4447397f9073850b4717a.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKCu7lcAAAAAAAAAAOAAAiELAQsAABQAAAAIAAAAAAAA/jEA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAKgxAABTAAAAAEAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAABBIAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADg
MQAAAAAAAEgAAAACAAUAoCIAAAgPAAABAAAAAAAAAOghAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqHgIoDgAACioAGzAHAPsAAAACAAARFgoXCwIoFwAACm8YAAAKbxkAAAoT
BDi3AAAAEQRvGgAACgwIbxsAAAo6pAAAAAIoFwAACm8cAAAKF3JzAABwcnUAAHAIbx0AAAoIbx4A
AAooHwAACnJzAABwFhIBbyAAAAoIFG8hAAAKJgIoFwAACm8cAAAKF3JzAABwctUAAHAIbx0AAAoo
IgAACnJzAABwFhIBbyAAAAreOA0CKBcAAApvHAAAChVycwAAcHIpAQBwCG8dAAAKCW8jAAAKKB8A
AApycwAAcBZvJAAACiYXCt4AEQRvJQAACjo9////BiwNAigXAAAKF28mAAAKKgIoFwAAChZvJgAA
CioAARAAAAAAYgA4mgA4IgAAAR4CKCcAAAoqAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJl
c291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVy
ZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJj
ZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAAAAAM
AAAAdjQuMC4zMDMxOQAAAAAFAGwAAABQBAAAI34AALwEAADoBgAAI1N0cmluZ3MAAAAApAsAAKAB
AAAjVVMARA0AABAAAAAjR1VJRAAAAFQNAAC0AQAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAAAPol
MwAWAAABAAAAIwAAAAYAAAAGAAAACgAAAAEAAAAnAAAAAgAAABEAAAACAAAAAgAAAAMAAAAEAAAA
AQAAAAQAAAABAAAAAgAAAAAACgABAAAAAAAGAMsAxAAKAOcA0gAOAEcBHgEGAGMBxAAGAHkBaAEG
AKoBlQEGAGECRwIGAIwCegIGAKMCegIGAMACegIGAN8CegIGAPgCegIGABEDegIGACwDegIGAEcD
egIGAGADegIGAJkDeQMGALkDeQMGAA4E+wMGACsExAAGADAExAAGAFQEegIKAIAEagQKAJkEagQG
AK4EeQMGAO8E0AQOAAMFHgEOACUFHgESAH4FXgUSAJoFXgUSAL0FXgUOAO8FHgEGACwGxAAGAFwG
xAASAHwGXgUAAAAAAQAAAAAAAQABAAAAEAAyADwABQABAAEAAAEQAGsAPAAJAAMABQABABAAdAB+
AAUABAAIAAIAEACiAAAADQAEAAkAAwEAAK0AAAARAAQACwARAIkBEwARALYBFwARAAACOQAGBikC
RwBWgDECSgBWgDkCSgBQIAAAAACDGMYBGwABAFggAAAAAJMIzAEfAAEAkSAAAAAAkwjgASQAAQCY
IAAAAACTCOwBKQABAKAgAAAAAJYIEAI9AAIAsyAAAAAAhhjGARsAAgCnIAAAAACRGMkEiQACALsg
AAAAAIYYxgEbAAIAxCAAAAAAhgAkAhsAAgDcIQAAAACGGMYBGwACAAAAAQBBAjkAxgFYAEEAxgFY
AEkAxgFYAFEAxgFYAFkAxgFYAGEAxgFYAGkAxgFYAHEAxgFYAHkAxgFYAIEAxgFYAIkAxgFdAJEA
xgEbAJkAxgEbAAkAxgEbAKEAQgRiAKEAXQRpACkAxgFuALkAxgF6AMkAxgEbABEAxgEbANEAxgGN
ANkAxgEbABkANwWYAOEAigWdAOkArwWiAPEAzwWnAPkA2wWsAOEAAwawAPkADga2APkAFwa2AAkB
Mwa6AAEBOgbBAPkASgbMAAkBMwbRABEBZga2AAEBcgbXABkBigasAOEAkwZdABkAxgEbAAgAFABO
AAgAGABTACkAkwCAAC4AEwA0AS4AGwCSAC4AYwCVAS4ACwDsAC4AMwA0AS4AWwCMAS4AKwBdAS4A
IwCSAC4AOwBsAS4AQwCSAEMAawBTAEkAkwCAAGEAmwBTAIMAqwCSAKMAqwCSAKMAswBTAHUA4AAC
AAEAAwADAAAAeQEvAAAA+AE0AAAAHAJCAAIAAgADAAIAAwAFAAEABAAFAAIABQAHAASAAAABAAAA
5ReQSQAAAAAAANcDAAAEAAAAAAAAAAAAAAABALsAAAAAAAQAAAAAAAAAAAAAAAEAxAAAAAAACwAA
AAAAAAAAAAAACgD/AAAAAAALAAAAAAAAAAAAAAAKAD8FAAAAAAAAAAABAAAAogYAAAUABAAGAAUA
AAAAPE1vZHVsZT4AU1RfYzg5ZmQxNzc3MmQ0NDQ3Mzk3ZjkwNzM4NTBiNDcxN2EuZGxsAFJlc291
cmNlcwBTVF9jODlmZDE3NzcyZDQ0NDczOTdmOTA3Mzg1MGI0NzE3YS5Qcm9wZXJ0aWVzAFNldHRp
bmdzAEJhc2VDbGFzcwBTVF8zMzZjMWM2MmYyMWM0YjMzOWVlNDRlOTQyODQ0ZWJiNwBTY3JpcHRN
YWluAFNjcmlwdFJlc3VsdHMAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJh
dGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRh
c2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBWU1RBUlRTY3JpcHRP
YmplY3RNb2RlbEJhc2UARW51bQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNv
dXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUA
LmN0b3IAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJl
AGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AE1haW4AdmFsdWVfXwBTdWNjZXNz
AEZhaWx1cmUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtB
dHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJs
eURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3Nl
bWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29w
eXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVy
ZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGls
ZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRp
YmlsaXR5QXR0cmlidXRlAFNUX2M4OWZkMTc3NzJkNDQ0NzM5N2Y5MDczODUwYjQ3MTdhAFN5c3Rl
bS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5
cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5D
b21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3Rh
dGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFN5c3RlbS5SdW50aW1lLkludGVy
b3BTZXJ2aWNlcwBDb21WaXNpYmxlQXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0
dHJpYnV0ZQBTY3JpcHRPYmplY3RNb2RlbABnZXRfRHRzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFu
YWdlZERUUwBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAENvbm5lY3Rpb25zAGdldF9D
b25uZWN0aW9ucwBDb25uZWN0aW9uRW51bWVyYXRvcgBHZXRFbnVtZXJhdG9yAENvbm5lY3Rpb25N
YW5hZ2VyAGdldF9DdXJyZW50AGdldF9EZWxheVZhbGlkYXRpb24ARXZlbnRzT2JqZWN0V3JhcHBl
cgBnZXRfRXZlbnRzAGdldF9OYW1lAGdldF9Db25uZWN0aW9uU3RyaW5nAFN0cmluZwBGb3JtYXQA
RmlyZUluZm9ybWF0aW9uAEFjcXVpcmVDb25uZWN0aW9uAEV4Y2VwdGlvbgBnZXRfTWVzc2FnZQBG
aXJlRXJyb3IARHRzRW51bWVyYXRvcgBNb3ZlTmV4dABzZXRfVGFza1Jlc3VsdABTVF9jODlmZDE3
NzcyZDQ0NDczOTdmOTA3Mzg1MGI0NzE3YS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMA
AAAAAHFTAFQAXwBjADgAOQBmAGQAMQA3ADcANwAyAGQANAA0ADQANwAzADkANwBmADkAMAA3ADMA
OAA1ADAAYgA0ADcAMQA3AGEALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBl
AHMAAAEAX0MAbwBuAG4AZQBjAHQAaQBvAG4ATQBhAG4AYQBnAGUAcgA9ACcAewAwAH0AJwAsACAA
QwBvAG4AbgBlAGMAdABpAG8AbgBTAHQAcgBpAG4AZwA9ACcAewAxAH0AJwABU0MAbwBuAG4AZQBj
AHQAaQBvAG4AIABhAGMAcQB1AGkAcgBlAGQAIABzAHUAYwBjAGUAcwBzAGYAdQBsAGwAeQAgAG8A
bgAgACcAewAwAH0AJwABdUYAYQBpAGwAZQBkACAAdABvACAAYQBjAHEAdQBpAHIAZQAgAGMAbwBu
AG4AZQBjAHQAaQBvAG4AIAB0AG8AIAAnAHsAMAB9ACcALgAgAEUAcgByAG8AcgAgAE0AZQBzAHMA
YQBnAGUAPQAnAHsAMQB9ACcAAQCCXCeXpZ8NQoexSrey7x4rAAi3elxWGTTgiQiJhF3NgIDMkQMG
EhUDBhIZAyAAAQQAABIVBAAAEhkFAAEBEhkECAASFQQIABIZAwYSDAQAABIMBAgAEgwCBggDBhEY
BAAAAAAEAQAAAAQgAQEOBCABAQgGAAESURFVBCAAElkGIAIBDhJZBAcBEhUFIAEBEWEIAQACAAAA
AAADAAABBCABAQIFAQAAAAAEIAAScQQgABJ1BCAAEnkEIAASfQMgAAIFIAASgIEDIAAOBgADDg4c
HAogBgEIDg4OCBACBCABHBwFAAIODhwIIAUCCA4ODggLBwUCAhJ9EoCJEnlHAQAaLk5FVEZyYW1l
d29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3Jr
IDQoAQAjU1RfYzg5ZmQxNzc3MmQ0NDQ3Mzk3ZjkwNzM4NTBiNDcxN2EAAA4BAAlNaWNyb3NvZnQA
AB8BABpDb3B5cmlnaHQgQCBNaWNyb3NvZnQgMjAxNgAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9u
RXhjZXB0aW9uVGhyb3dzAdAxAAAAAAAAAAAAAO4xAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADg
MQAAAAAAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAD4AwAAAAAAAAAAAAD4AzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAkEnlFwAAAQCQSeUXPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEWAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAANAMAAAEAMAAwADAA
MAAwADQAYgAwAAAANAAKAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAABNAGkAYwByAG8AcwBv
AGYAdAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwBjADgA
OQBmAGQAMQA3ADcANwAyAGQANAA0ADQANwAzADkANwBmADkAMAA3ADMAOAA1ADAAYgA0ADcAMQA3
AGEAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANgAxADEANwAuADEA
OAA4ADMAMgAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwBjADgAOQBm
AGQAMQA3ADcANwAyAGQANAA0ADQANwAzADkANwBmADkAMAA3ADMAOAA1ADAAYgA0ADcAMQA3AGEA
LgBkAGwAbAAAAFwAGwABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBp
AGcAaAB0ACAAQAAgAE0AaQBjAHIAbwBzAG8AZgB0ACAAMgAwADEANgAAAAAAeAAoAAEATwByAGkA
ZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAVABfAGMAOAA5AGYAZAAxADcANwA3ADIAZAA0
ADQANAA3ADMAOQA3AGYAOQAwADcAMwA4ADUAMABiADQANwAxADcAYQAuAGQAbABsAAAAaAAkAAEA
UAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQAXwBjADgAOQBmAGQAMQA3ADcANwAyAGQANAA0
ADQANwAzADkANwBmADkAMAA3ADMAOAA1ADAAYgA0ADcAMQA3AGEAAABEAA8AAQBQAHIAbwBkAHUA
YwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYAMQAxADcALgAxADgAOAAzADIAAAAAAEgADwAB
AEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYAMQAxADcALgAxADgA
OAAzADIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAADIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Initialization (Audit)"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{e23317e3-3100-494d-9b72-a4baf5d2715f}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Initialization (Audit)">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Initialization (Audit)\Execute cmd shell and retrieve environment variable information"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Script Task"
          DTS:DTSID="{08e3f981-de7f-4e96-ab00-b09f8e3dfcce}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute cmd shell and retrieve environment variable information"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_8ea4a9de9f514faa82a5725edf1df823"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadWriteVariables="User::vEnvironmentTEXT">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_85ad09a2ba584afbbc2c9e71dd29ae45")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Microsoft")]
[assembly: AssemblyProduct("ST_85ad09a2ba584afbbc2c9e71dd29ae45")]
[assembly: AssemblyCopyright("Copyright @ Microsoft 2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using System.IO;
using System.Diagnostics;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_1ac71edf38774ce3aaaabd70002d56d2
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // TODO: Add your code here
            string sCmdOutput = "";

            System.Diagnostics.Process process = new System.Diagnostics.Process();
            System.Diagnostics.ProcessStartInfo startInfo = new System.Diagnostics.ProcessStartInfo();

            startInfo.WindowStyle = System.Diagnostics.ProcessWindowStyle.Hidden;
            startInfo.RedirectStandardInput = true;
            startInfo.RedirectStandardOutput = true;
            startInfo.RedirectStandardError = true;
            startInfo.UseShellExecute = false;

            startInfo.FileName = "cmd.exe";
            startInfo.Arguments = @"/c set";
            process.StartInfo = startInfo;

            process.Start();

            StreamReader reader = process.StandardOutput;

            string line;
            while ((line = reader.ReadLine()) != null)
            {
                sCmdOutput = sCmdOutput + line + "|";
            }

            sCmdOutput = sCmdOutput.Substring(0, sCmdOutput.Length - 1);

            Dts.Variables["User::vEnvironmentTEXT"].Value = sCmdOutput;
            //MessageBox.Show(sCmdOutput);

            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_8ea4a9de9f514faa82a5725edf1df823.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{D4060731-5D6B-4076-8658-D7CD517BBA1F}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_85ad09a2ba584afbbc2c9e71dd29ae45</RootNamespace><AssemblyName>ST_8ea4a9de9f514faa82a5725edf1df823</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_85ad09a2ba584afbbc2c9e71dd29ae45</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_85ad09a2ba584afbbc2c9e71dd29ae45</msb:DisplayName>
		<msb:ProjectId>{530640B6-CCD4-47CD-A6DE-297942E224C8}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_8ea4a9de9f514faa82a5725edf1df823.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_85ad09a2ba584afbbc2c9e71dd29ae45.Properties.Settings.get_Default():ST_85ad09a2ba584afbbc2c9e71dd29ae45.Properties.Sett" +
    "ings")]

namespace ST_85ad09a2ba584afbbc2c9e71dd29ae45.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_85ad09a2ba584afbbc2c9e71dd29ae45.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_85ad09a2ba584afbbc2c9e71dd29ae45.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_85ad09a2ba584afbbc2c9e71dd29ae45.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_85ad09a2ba584afbbc2c9e71dd29ae45.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_85ad09a2ba584afbbc2c9e71dd29ae45.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_16bb6ea1ce424d6889dedc96d53d63b0.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAOugE1gAAAAAAAAAAOAAAiELAQsAABIAAAAIAAAAAAAAvjAA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAGgwAABTAAAAAEAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAxBAAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACg
MAAAAAAAAEgAAAACAAUAQCIAACgOAAABAAAAAAAAAIghAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABMwBACzAAAAAgAAEXJzAABwCnMWAAAKC3MXAAAKDAgXbxgAAAoIF28Z
AAAKCBdvGgAACggXbxsAAAoIFm8cAAAKCHJ1AABwbx0AAAoIcoUAAHBvHgAACgcIbx8AAAoHbyAA
AAomB28hAAAKDSsOBhEEcpMAAHAoIgAACgoJbyMAAAolEwQt5wYWBm8kAAAKF1lvJQAACgoCKCYA
AApvJwAACnKXAABwbygAAAoGbykAAAoCKCYAAAoWbyoAAAoqHgIoKwAACioAAAAAALQAAADOyu++
AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNp
b249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRl
MDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFE
ULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAA8BAAAI34AAKgEAAD4BgAA
I1N0cmluZ3MAAAAAoAsAAMgAAAAjVVMAaAwAABAAAAAjR1VJRAAAAHgMAACwAQAAI0Jsb2IAAAAA
AAAAAgAAAVcdogEJAwAAAPolMwAWAAABAAAAIwAAAAUAAAAGAAAACQAAAAEAAAArAAAAAgAAAA8A
AAACAAAAAgAAAAMAAAAEAAAAAQAAAAQAAAABAAAAAQAAAAAACgABAAAAAAAGAMEAugAKAN0AyAAO
AD0BFAEGAFkBugAGAG8BXgEGAKABiwEGAFcCPQIGAIICcAIGAJkCcAIGALYCcAIGANUCcAIGAO4C
cAIGAAcDcAIGACIDcAIGAD0DcAIGAFYDcAIGAI8DbwMGAK8DbwMGAAQE8QMGACEEugAGACYEugAG
AEoEcAIKAHYEYAQKAI8EYAQGAKQEbwMOAMYEFAEKAOgE8QMKAPAE8QMKAAEF8QMGAMAFtgUGAOAF
ugAGAO4FtgUOABcGFAESAHAGUAYSAIgGUAYAAAAAAQAAAAAAAQABAAAAEAAyADwABQABAAEAAAEQ
AGsAPAAJAAMABQABABAAdAB/AA0ABAAIAAMBAACjAAAAEQAEAAoAEQB/ARMAEQCsARcAEQD2ATkA
BgYfAkcAVoAnAkoAVoAvAkoAUCAAAAAAgxi8ARsAAQBYIAAAAACTCMIBHwABAJEgAAAAAJMI1gEk
AAEAmCAAAAAAkwjiASkAAQCgIAAAAACWCAYCPQACALMgAAAAAIYYvAEbAAIApyAAAAAAkRi/BIkA
AgC8IAAAAACGABoCGwACAHshAAAAAIYYvAEbAAIAAAABADcCOQC8AVgAQQC8AVgASQC8AVgAUQC8
AVgAWQC8AVgAYQC8AVgAaQC8AVgAcQC8AVgAeQC8AVgAgQC8AVgAiQC8AV0AkQC8ARsAmQC8ARsA
CQC8ARsAoQA4BGIAoQBTBGkAKQC8AW4AuQC8AXoAyQC8ARsAEQC8ARsA0QC8ARsA2QC8ARsA4QC8
ARsA4QAUBY0A4QAkBZMA4QA+BZMA4QBZBZMA4QBzBZMA4QCHBVgA4QCUBVgA2QCiBZgA2QCwBZ4A
2QDNBaIA+QDnBacAAQH5Ba4A+QACBrIA+QANBrYAGQApBrwACQF6BsIAEQGRBsgAGQGaBs8ACQGk
Bl0AGQC8ARsACAAUAE4ACAAYAFMAKQCTAIAALgAbAFABLgAjAFABLgBjAI4BLgALAN8ALgATACcB
LgAzACcBLgArAFYBLgA7AGUBLgBDAFABLgBbAIUBQwBrAFMASQCTAIAAYQCbAFMAgwCrAFMAdQDU
AAIAAQADAAMAAABvAS8AAADuATQAAAASAkIAAgACAAMAAgADAAUAAQAEAAUAAgAFAAcABIAAAAEA
AAABGLVNAAAAAAAAzQMAAAQAAAAAAAAAAAAAAAEAsQAAAAAABAAAAAAAAAAAAAAAAQC6AAAAAAAL
AAAAAAAAAAAAAAAKAPUAAAAAAAsAAAAAAAAAAAAAAAoAMQYAAAAAAAAAAAEAAACzBgAABQAEAAAA
ADxNb2R1bGU+AFNUXzE2YmI2ZWExY2U0MjRkNjg4OWRlZGM5NmQ1M2Q2M2IwLmRsbABSZXNvdXJj
ZXMAU1RfODVhZDA5YTJiYTU4NGFmYmJjMmM5ZTcxZGQyOWFlNDUuUHJvcGVydGllcwBTZXR0aW5n
cwBTY3JpcHRNYWluAFNUXzFhYzcxZWRmMzg3NzRjZTNhYWFhYmQ3MDAwMmQ1NmQyAFNjcmlwdFJl
c3VsdHMAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNh
dGlvblNldHRpbmdzQmFzZQBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0
LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJh
c2UARW51bQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0
ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUALmN0b3IAZ2V0X1Jl
c291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0
YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AE1haW4AdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAdmFs
dWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lz
dGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9u
QXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlB
dHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmli
dXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBB
c3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBD
b21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmli
dXRlAFNUXzE2YmI2ZWExY2U0MjRkNjg4OWRlZGM5NmQ1M2Q2M2IwAFN5c3RlbS5EaWFnbm9zdGlj
cwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0
VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2Rl
bABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJH
ZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0
ZQBQcm9jZXNzAFByb2Nlc3NTdGFydEluZm8AUHJvY2Vzc1dpbmRvd1N0eWxlAHNldF9XaW5kb3dT
dHlsZQBzZXRfUmVkaXJlY3RTdGFuZGFyZElucHV0AHNldF9SZWRpcmVjdFN0YW5kYXJkT3V0cHV0
AHNldF9SZWRpcmVjdFN0YW5kYXJkRXJyb3IAc2V0X1VzZVNoZWxsRXhlY3V0ZQBzZXRfRmlsZU5h
bWUAc2V0X0FyZ3VtZW50cwBzZXRfU3RhcnRJbmZvAFN0YXJ0AFN5c3RlbS5JTwBTdHJlYW1SZWFk
ZXIAZ2V0X1N0YW5kYXJkT3V0cHV0AFN0cmluZwBDb25jYXQAVGV4dFJlYWRlcgBSZWFkTGluZQBn
ZXRfTGVuZ3RoAFN1YnN0cmluZwBTY3JpcHRPYmplY3RNb2RlbABnZXRfRHRzAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFZhcmlh
YmxlcwBnZXRfVmFyaWFibGVzAFZhcmlhYmxlAGdldF9JdGVtAHNldF9WYWx1ZQBzZXRfVGFza1Jl
c3VsdABTVF84NWFkMDlhMmJhNTg0YWZiYmMyYzllNzFkZDI5YWU0NS5Qcm9wZXJ0aWVzLlJlc291
cmNlcy5yZXNvdXJjZXMAAAAAcVMAVABfADgANQBhAGQAMAA5AGEAMgBiAGEANQA4ADQAYQBmAGIA
YgBjADIAYwA5AGUANwAxAGQAZAAyADkAYQBlADQANQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBS
AGUAcwBvAHUAcgBjAGUAcwAAAQAPYwBtAGQALgBlAHgAZQAADS8AYwAgAHMAZQB0AAADfAAALVUA
cwBlAHIAOgA6AHYARQBuAHYAaQByAG8AbgBtAGUAbgB0AFQARQBYAFQAAAAAAOz/sSTU+gVGoLS9
4aBGAQoACLd6XFYZNOCJCImEXc2AgMyRAwYSFQMGEhkDIAABBAAAEhUEAAASGQUAAQESGQQIABIV
BAgAEhkDBhIMBAAAEgwECAASDAIGCAMGERQEAAAAAAQBAAAABCABAQ4EIAEBCAYAARJREVUEIAAS
WQYgAgEOElkEBwESFQUgAQERYQgBAAIAAAAAAAMAAAEFIAEBEXUEIAEBAgUgAQEScQMgAAIEIAAS
eQYAAw4ODg4DIAAOAyAACAUgAg4ICAUgABKAhQUgABKAiQYgARKAjRwEIAEBHAoHBQ4SbRJxEnkO
RwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAu
TkVUIEZyYW1ld29yayA0KAEAI1NUXzg1YWQwOWEyYmE1ODRhZmJiYzJjOWU3MWRkMjlhZTQ1AAAF
AQAAAAAOAQAJTWljcm9zb2Z0AAAfAQAaQ29weXJpZ2h0IEAgTWljcm9zb2Z0IDIwMTYAAAgBAAgA
AAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEAAACQMAAAAAAAAAAAAACuMAAAACAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAoDAAAAAAAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3Jl
ZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAA+AMAAAAAAAAAAAAA+AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABALVNARgAAAEAtU0BGD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBFgDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAADQDAAABADAAMAAw
ADAAMAA0AGIAMAAAADQACgABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAATQBpAGMAcgBvAHMA
bwBmAHQAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8AOAA1
AGEAZAAwADkAYQAyAGIAYQA1ADgANABhAGYAYgBiAGMAMgBjADkAZQA3ADEAZABkADIAOQBhAGUA
NAA1AAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAMQA0ADUALgAx
ADkAOAA5ADMAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AMQA2AGIA
YgA2AGUAYQAxAGMAZQA0ADIANABkADYAOAA4ADkAZABlAGQAYwA5ADYAZAA1ADMAZAA2ADMAYgAw
AC4AZABsAGwAAABcABsAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIA
aQBnAGgAdAAgAEAAIABNAGkAYwByAG8AcwBvAGYAdAAgADIAMAAxADYAAAAAAHgAKAABAE8AcgBp
AGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAFQAXwAxADYAYgBiADYAZQBhADEAYwBlADQA
MgA0AGQANgA4ADgAOQBkAGUAZABjADkANgBkADUAMwBkADYAMwBiADAALgBkAGwAbAAAAGgAJAAB
AFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBUAF8AOAA1AGEAZAAwADkAYQAyAGIAYQA1ADgA
NABhAGYAYgBiAGMAMgBjADkAZQA3ADEAZABkADIAOQBhAGUANAA1AAAARAAPAAEAUAByAG8AZAB1
AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADEANAA1AC4AMQA5ADgAOQAzAAAAAABIAA8A
AQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADEANAA1AC4AMQA5
ADgAOQAzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAMAwAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Initialization (Audit)\Log Environment"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{3836d38f-7167-4f62-aa73-01f9421c0254}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log Environment"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{36A82C7A-442F-484F-9273-3C80014FC15A}"
              SQLTask:SqlStatementSource="INSERT INTO Audit.Environment (&#xA;                RunningJobsText, &#xA;                EnvironmentText, &#xA;                JobInstanceID) VALUES &#xA;                (?, ?, ?)&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="255" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::vEnvironmentTEXT"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="8000" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::vCurJobInstanceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Initialization (Audit)\Populate ETLUser"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{d7c00494-8665-4eff-a562-33d06affa14d}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Populate ETLUser"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{36A82C7A-442F-484F-9273-3C80014FC15A}"
              SQLTask:SqlStatementSource="Exec [Audit].[LogETLUser] @UserNAME = ?, @UserEMAIL = ?, @UserID = ? OUTPUT" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::UserName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="256" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="$Project::pNotificationEmail"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="256" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::vCurUserID"
                SQLTask:ParameterDirection="Output"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Initialization (Audit)\Populate Joblog"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{74992513-2312-4137-b53b-ca78163dd599}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Populate Joblog"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{36A82C7A-442F-484F-9273-3C80014FC15A}"
              SQLTask:SqlStatementSource="EXEC [Audit].[LogJobOnBegin] &#xA;@JobName = ?,&#xA;@PackageID = ?,&#xA;@JobID = ? OUTPUT" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="255" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::PackageID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="72"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::vCurJobID"
                SQLTask:ParameterDirection="Output"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Initialization (Audit)\Populate new Job Instance"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{57e5fc33-0a2f-49ea-8a06-5b387187cda8}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Populate new Job Instance"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{36A82C7A-442F-484F-9273-3C80014FC15A}"
              SQLTask:SqlStatementSource="EXEC [Audit].[logJobInstance] &#xA;@JobID = ?, &#xA;@UserID = ?,&#xA;@JobInstanceParentID = ?,&#xA;@packageVersionID = ?,&#xA;@ExecutionID = ?,&#xA;@JobStartDTS = ?, &#xA;@currentJobInstanceID = ? OUTPUT" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::vCurJobID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::vCurUserID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="$Package::pJobInstanceParentID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="System::VersionGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="72"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="72"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="5"
                SQLTask:DtsVariableName="User::vPackageStartDate"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="133"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="6"
                SQLTask:DtsVariableName="User::vCurJobInstanceID"
                SQLTask:ParameterDirection="Output"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Initialization (Audit).PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{ef1ccafa-bbd9-4482-a6b1-bc2d0fca84c5}"
          DTS:From="Package\Initialization (Audit)\Populate ETLUser"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Initialization (Audit)\Populate Joblog" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Initialization (Audit).PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{11184a07-d9f3-4747-b715-2c95776ce626}"
          DTS:From="Package\Initialization (Audit)\Populate Joblog"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Initialization (Audit)\Populate new Job Instance" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Initialization (Audit).PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{85271b64-4df6-425e-bd43-9ebb3b504188}"
          DTS:EvalOp="3"
          DTS:Expression="@[$Project::pDebugMode]  == True"
          DTS:From="Package\Initialization (Audit)\Populate new Job Instance"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Initialization (Audit)\Execute cmd shell and retrieve environment variable information" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Initialization (Audit).PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{96b96979-6ad4-40c7-81a0-8da8448bd596}"
          DTS:From="Package\Initialization (Audit)\Execute cmd shell and retrieve environment variable information"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Initialization (Audit)\Log Environment" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{40DB2FD2-291F-4255-A664-C2C2B255CCCA}"
      DTS:From="Package\Initialization"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Initialization (Audit)" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{4DA56330-C1D6-4DE0-ACBC-26C43B828926}"
      DTS:From="Package\Initialization (Audit)"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Data Process From Quidel to Value Centric (SFTP Data Upload)" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{B5696CA1-1E86-4468-9906-86B9D99E0DD6}"
      DTS:From="Package\Data Process From Quidel to Value Centric (SFTP Data Upload)"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Completion (Audit)" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. SSISOps : DON'T CHANGE PREFIX. "
      DTS:DTSID="{DC41CAB6-09EE-46B7-92F7-1958EB439587}"
      DTS:EventID="-1073741823"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{DEC80343-694C-4233-9E0A-A37A51CE8590}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
          DTS:DTSID="{7EF72936-F8B9-4510-87B6-67336E7D1473}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOpsNF_CHECK">
          <DTS:VariableValue
            DTS:DataType="8">{BE9EF9F8-824A-4381-AD87-02609D35195A}</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\SSISOpsEhObj_OnError_Start"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{0F0A3755-5065-4F67-8FD0-42F5803EEA51}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_OnError_Start"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[User::varSSISOps_DisableBIxAuditing]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <ScriptProject
              Name="st_5b7d3d9fee2a414aaa10dca9868dee2c"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="VisualBasic">
              <ProjectItem
                Name="st_5b7d3d9fee2a414aaa10dca9868dee2c.vbproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{afdb9e96-763b-40c0-8b00-32d5ca034e44}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>st_5b7d3d9fee2a414aaa10dca9868dee2c</RootNamespace>
    <AssemblyName>st_5b7d3d9fee2a414aaa10dca9868dee2c</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />

        <Host Name="ScriptTask" IconIndex="">
        </Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="My Project\AssemblyInfo.vb"
                Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("st_5b7d3d9fee2a414aaa10dca9868dee2c")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("Microsoft")> 
<Assembly: AssemblyProduct("st_5b7d3d9fee2a414aaa10dca9868dee2c")> 
<Assembly: AssemblyCopyright("Copyright @ Microsoft 2017")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("54d1034f-1f18-439c-aca6-cc34226f1039")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.vb"
                Encoding="UTF8"><![CDATA[#Region "Imports"
Imports System
Imports System.Data
Imports System.Math
Imports System.Runtime.InteropServices
Imports Microsoft.SqlServer.Dts.Runtime
#End Region

'ScriptMain is the entry point class of the script.  Do not change the name, attributes,
'or parent of this class.
<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute()> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
    Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

    Public Sub Main()

        ' Begin BI xPress Code



        ' End BI xPress Code

        Dts.TaskResult = ScriptResults.Success
    End Sub

#Region "ScriptResults declaration"

    Enum ScriptResults
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    End Enum

# End Region

    Private Sub WriteVariable(ByVal variableName As String, ByVal variableValue As Object)
        Dim vars As Variables = Nothing
        Dim isUnlocked As Boolean = False

        Try
            Dts.VariableDispenser.LockForWrite(variableName)
            Dts.VariableDispenser.GetVariables(vars)

            Try
                vars(variableName).Value = variableValue
            Catch ex As Exception
                Throw
            Finally
                If vars IsNot Nothing Then
                    vars.Unlock()
                    isUnlocked = True
                End If
            End Try
        Catch ex As Exception
            Dts.VariableDispenser.Reset()

            Throw
        Finally
            If vars IsNot Nothing AndAlso Not isUnlocked Then
                vars.Unlock()
            End If
        End Try
    End Sub

    Private Function ReadVariable(ByVal variableName As String) As Object
        Dim vars As Variables = Nothing
        Dim isUnlocked As Boolean = False
        Dim result As Object

        Try
            Dts.VariableDispenser.LockForRead(variableName)
            Dts.VariableDispenser.GetVariables(vars)

            Try
                result = vars(variableName).Value
            Catch ex As Exception
                Throw
            Finally
                If vars IsNot Nothing Then
                    vars.Unlock()
                    isUnlocked = True
                End If
            End Try
        Catch ex As Exception
            Dts.VariableDispenser.Reset()

            Throw
        Finally
            If vars IsNot Nothing AndAlso Not isUnlocked Then
                vars.Unlock()
            End If
        End Try

        Return result
    End Function

End Class]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>st_5b7d3d9fee2a414aaa10dca9868dee2c</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>st_5b7d3d9fee2a414aaa10dca9868dee2c</msb:DisplayName>
		<msb:ProjectId>{0A1E39FB-C1B2-444A-8B71-8F31701967A5}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_5b7d3d9fee2a414aaa10dca9868dee2c.vbproj"/>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
              <BinaryItem
                Name="st_5b7d3d9fee2a414aaa10dca9868dee2c.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAI3AxlgAAAAAAAAAAOAAAiELAQsAABwAAAAIAAAAAAAAzjsA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAIAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAHw7AABPAAAAAEAAACAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA1BsAAAAgAAAAHAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAACAEAAAAQAAAAAYAAAAeAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACw
OwAAAAAAAEgAAAACAAUA8CQAAIwWAAABAAAAAAAAADgkAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKAEAAAoqHgIoBAAACiqmcwYAAAqAAQAABHMHAAAKgAIA
AARzCAAACoADAAAEcwkAAAqABAAABCoAABMwAQALAAAAAQAAEX4BAAAEbwoAAAoqABMwAQALAAAA
AgAAEX4CAAAEbwsAAAoqABMwAQALAAAAAwAAEX4DAAAEbwwAAAoqABMwAQALAAAABAAAEX4EAAAE
bw0AAAoqABMwAgANAAAABQAAEQIDKBEAAAooEgAACioAAAATMAEABwAAAAYAABECKBMAAAoqABMw
AQALAAAABwAAEdAFAAACKBQAAAoqABMwAQAHAAAACAAAEQIoFQAACioAEzABABAAAAAJAAARAowB
AAAbLQYoAQAAKyoCKhMwAgAQAAAACgAAEQMSAP4VAgAAGwaBAgAAGyoeAigXAAAKKhMwAgAoAAAA
CwAAEQJ7GQAACm8aAAAKCweMAwAAGy0SKAIAACsLAnsZAAAKB28bAAAKBypKAigXAAAKAnMcAAAK
fRkAAAoqAB4CKBcAAAoqEzACAC0AAAAMAAARfgYAAAQtIHIBAABw0AcAAAIoFAAACm8eAAAKcx8A
AAoLB4AGAAAEfgYAAAQqAAAAEzABAAYAAAANAAARfgcAAAQqAAAeAoAHAAAEKkJzFwAACigRAAAK
gAkAAAQqAAAAHgIoIAAACiobMAEAPwAAAA4AABF+CAAABC0yfgkAAAQoEQAACighAAAKfggAAAQt
HHMWAAAGgAgAAATeEH4JAAAEKBEAAAooIgAACtx+CAAABCoAARAAAAIAHQAMKQAQAAAAAB4CKCQA
AAoqNgJvJQAAChZvJgAACioAABswAgB5AAAADwAAERQLFgoCbyUAAApvJwAACgNvKAAACgJvJQAA
Cm8nAAAKEgFvKQAACgcDbyoAAAoEKBEAAApvKwAACt49JSgsAAAKDP4aBywIB28uAAAKFwrc3iYl
KCwAAAoNAm8lAAAKbycAAApvLwAACv4aBywJBi0GB28uAAAK3CoAAAABNAAAAAAnABQ7AAkdAAAB
AgAnAB1EAAwAAAAAAAAEAE5SABkdAAABAgAEAGdrAA0AAAAAGzACAHwAAAAQAAARFA0WCgJvJQAA
Cm8nAAAKA28wAAAKAm8lAAAKbycAAAoSA28pAAAKCQNvKgAACm8xAAAKKBEAAAoM3j8lKCwAAAoT
BP4aCSwICW8uAAAKFwrc3iclKCwAAAoTBQJvJQAACm8nAAAKby8AAAr+GgksCQYtBglvLgAACtwI
KgE0AAAAACcAFDsACh0AAAECACcAHkUADAAAAAAAAAQAT1MAGh0AAAECAAQAaW0ADQAAAAC0AAAA
zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBW
ZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYx
OTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBB
RFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAGAgAACN+AACECAAA
8AkAACNTdHJpbmdzAAAAAHQSAAA0AAAAI1VTAKgSAAAQAAAAI0dVSUQAAAC4EgAA1AMAACNCbG9i
AAAAAAAAAAIAAAFXHaIJCQ8AAAD6JTMAFgAAAQAAAC0AAAAKAAAADAAAABsAAAAHAAAAPgAAAAIA
AAA2AAAAEAAAAAQAAAAIAAAACQAAAAkAAAABAAAABQAAAAEAAAADAAAAAwAAAAIAAAAAAMYJAQAA
AAAACgBLASEBCgB/AWEBBgCPAYgBCgDnASEBBgBlAogBCgDnAr0CBgAdAwwDBgBKAzUDDgCxA5wD
EgAwBAcEBgCHBIgBDgC6BKQEDgDTBKQEDgAABegEBgAqBRcFCgBpBUIFCgCBBRMADgC2BZkFBgDr
BcsFBgAJBogBBgAtBogBCgBGBhMABgCKBmsGBgCwBp4GBgDXBsYGBgDqBhcFEgAHBwcEFgBvB08H
BgB5B4gBFgCDB08HFgDFB08HCgDXB0IFBgAeCIgBEgA0CAcEBgCOCMsFBgCuCMsFBgDmCMwIBgD/
CJ4GBgAcCWsGBgAqCZ4GBgBFCZ4GBgBgCZ4GBgB5CZ4GBgCSCZ4GBgCvCZ4GAAAAAAEAAAAAAAEA
AQAAAAAAKQA3AAUAAQABAAAAAABeADcACQABAAIAAAEQAGkANwANAAEAAwAFAQAAcwAAAA0ABQAI
AAUBAACBAAAADQAFAA8AAAAAAJwAqAANAAYAEQAAARAA2QDkACUACAAVAAEAAAAIAeQAKQAKABgA
AgEAABMBAAAtAAoAHAAxAKoBIAAxANMBLQAxAPUBOgAxABoCRwAhAPYCkAARAC0DnQARAFYDoQAR
AMkDvwARANEDwwAGBowE5ABWgJQE5wBWgJwE5wBQIAAAAAAGGFsBEwABAFggAAAAAAYYWwETAAEA
YCAAAAAAERiWARcAAQCMIAAAAAATCJ0BGwABAKQgAAAAABMIwwEoAAEAvCAAAAAAEwjsATUAAQDU
IAAAAAATCAoCQgABAOwgAAAAAEYCUAJjAAEACCEAAAAARgJZAmgAAgAcIQAAAACDAGoCbAACADQh
AAAAAEYCcgJxAAIASCEAAAAAEQB7AngAAgBkIQAAAAABAJkCgAADAIAhAAAAAAYYWwETAAQAiCEA
AAAAAwitAosABAC8IQAAAAAGGFsBEwAEANAhAAAAAAMYWwETAAQA2CEAAAAAFghiA6UABAAUIgAA
AAAWCHYDqgAEACgiAAAAABYIggOvAAQAMCIAAAAAERiWARcABQBEIgAAAAAGGFsBEwAFAEwiAAAA
ABYI3gPGAAUAqCIAAAAABhhbARMABQCwIgAAAAAGAEwEEwAFAMAiAAAAAAEAUQTZAAUAfCMAAAAA
AQB6BN8ABwAAAAEAVwIAAAEAkAIAAAEAkAIAAAEAjgMAAAEAXwQAAAIAbAQAAAEAXwQJAFsBEwBh
AFsB9QBxAFsBBAERAFsBEwB5AFsBEwAkAFsBEwAsAFsBEwA0AFsBEwA8AFsBEwAkAK0CiwAsAK0C
iwA0AK0CiwA8AK0CiwCBAFsBEwCJAFsBEwCRAFsBUwGZAPoFngEZAFACYwAZAFkCaAApABsGqwEZ
AHICcQCpADcGuwEZAFsBEwCxAFsBywFEAPYCkABMAN4DiwBMAGEGSAJMAFsBEwC5AFsBVwIpALkG
YgI5AFsBZwJJAFsBEwDJAN8GgwLJAOUGgwLRAFsBEwBRAFsBEwBRABkHjQLZACEHkgLZAJUHlwLx
AKsHUwHxALgHnALhAM4HowL5AGEGqQIBAeMHrgIBAfMHFwDhAAUIEwDxAAwIEwDxABIIUwH5AN4D
vgIJAVsBVwIRAVsBEwAZAVsBkgIhAVsBEwApAVsBUwExAVsBUwE5AVsBUwFBAVsBUwFJAVsBUwFR
AVsBUwFZAVsBUwFhAVsBUwFpAVsBUwEIACwA6wAIADAA8AApAIMAWAEuAOMBxAMuANsBmwMuANMB
ewMuAKsB1wIuALMB9gIuAMsBXAIuAPMBmwMuAKMBzgIuAOsBXAIuALsBPgMuAMMBSwMuAOsAXAIu
AJMBdQNAACsA8ABAABMA+wBDABMA+wBDABsACgFJAIMAdgFjABsACgFjABMA+wBpAIMAaQGAACsA
8ACDABsACgGDAHsA8ACDAHMA8ACJAIMAigGgACsA8ACjAMMA0wGjABMA+wDAACsA8ADDABMA+wDD
AOsAXALJABMAegLgACsA8ADpABMAegIAARMA+wAAASsA8AAJARsB8AAgARMA+wAgASsA8AAjAZsB
8AAjAZMBXAJAARMA+wBAASsA8ABgASsA8ABgARMA+wCAASsA8ACgASsA8ADAASsA8ADAARMA+wDg
ASsA8AAAAhMA+wAAAisA8AA/AUQBSQFOAaMBpwGyAbcBxgHGAU4CbgJ1AogCtALCAgQAAQAGAAUA
BwAGAAgACAAAAH8BTwAAADgCVAAAAOcBWQAAAEQCXgAAAAADmAAAAB0DtQAAAJQDugAAAI4DywAC
AAQAAwACAAUABQACAAYABwACAAcACQACAA8ACwACABIADQACABMADwABABQADwACABcAEQB1AHUA
iAAjASoBMQE4ATUCPAIEgAAAAQAAAAAAAAAAAAAAAADkAAAABAAAAAAAAAAAAAAAAQAKAAAAAAAK
AAAAAAAAAAAAAAAKABMAAAAAAAQAAAAAAAAAAAAAAAEAiAEAAAAACwAAAAAAAAAAAAAA0ADoAwAA
AAALAAAAAAAAAAAAAADQADAHAAAAAAAAAAABAAAAVggAAAUABAAGAAQACgAJAAAAEAAMAI4CAAAQ
ABkAjgIAAAAAGwCOAi0AwQEtAEMCAAAAPE1vZHVsZT4AbXNjb3JsaWIATWljcm9zb2Z0LlZpc3Vh
bEJhc2ljAE15QXBwbGljYXRpb24Ac3RfNWI3ZDNkOWZlZTJhNDE0YWFhMTBkY2E5ODY4ZGVlMmMu
TXkATXlDb21wdXRlcgBNeVByb2plY3QATXlXZWJTZXJ2aWNlcwBUaHJlYWRTYWZlT2JqZWN0UHJv
dmlkZXJgMQBNeVJlc291cmNlcwBzdF81YjdkM2Q5ZmVlMmE0MTRhYWExMGRjYTk4NjhkZWUyYy5N
eS5SZXNvdXJjZXMATXlTZXR0aW5ncwBzdF81YjdkM2Q5ZmVlMmE0MTRhYWExMGRjYTk4NjhkZWUy
YwBTY3JpcHRNYWluAFNjcmlwdFJlc3VsdHMATWljcm9zb2Z0LlZpc3VhbEJhc2ljLkFwcGxpY2F0
aW9uU2VydmljZXMAQXBwbGljYXRpb25CYXNlAC5jdG9yAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5E
ZXZpY2VzAENvbXB1dGVyAFN5c3RlbQBPYmplY3QALmNjdG9yAGdldF9Db21wdXRlcgBtX0NvbXB1
dGVyT2JqZWN0UHJvdmlkZXIAZ2V0X0FwcGxpY2F0aW9uAG1fQXBwT2JqZWN0UHJvdmlkZXIAVXNl
cgBnZXRfVXNlcgBtX1VzZXJPYmplY3RQcm92aWRlcgBnZXRfV2ViU2VydmljZXMAbV9NeVdlYlNl
cnZpY2VzT2JqZWN0UHJvdmlkZXIAQXBwbGljYXRpb24AV2ViU2VydmljZXMARXF1YWxzAG8AR2V0
SGFzaENvZGUAVHlwZQBHZXRUeXBlAFRvU3RyaW5nAENyZWF0ZV9fSW5zdGFuY2VfXwBUAGluc3Rh
bmNlAERpc3Bvc2VfX0luc3RhbmNlX18AZ2V0X0dldEluc3RhbmNlAE1pY3Jvc29mdC5WaXN1YWxC
YXNpYy5NeVNlcnZpY2VzLkludGVybmFsAENvbnRleHRWYWx1ZWAxAG1fQ29udGV4dABHZXRJbnN0
YW5jZQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgBfcmVzTWdyAFN5c3RlbS5HbG9i
YWxpemF0aW9uAEN1bHR1cmVJbmZvAF9yZXNDdWx0dXJlAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0
X0N1bHR1cmUAc2V0X0N1bHR1cmUAVmFsdWUAQ3VsdHVyZQBTeXN0ZW0uQ29uZmlndXJhdGlvbgBB
cHBsaWNhdGlvblNldHRpbmdzQmFzZQBtX1ZhbHVlAG1fU3luY09iamVjdABnZXRfVmFsdWUATWlj
cm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tz
LlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAE1haW4AV3JpdGVWYXJpYWJs
ZQB2YXJpYWJsZU5hbWUAdmFyaWFibGVWYWx1ZQBSZWFkVmFyaWFibGUARW51bQB2YWx1ZV9fAFN1
Y2Nlc3MARmFpbHVyZQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmli
dXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAFN5c3RlbS5Db2RlRG9tLkNvbXBpbGVyAEdlbmVyYXRl
ZENvZGVBdHRyaWJ1dGUAU3lzdGVtLkRpYWdub3N0aWNzAERlYnVnZ2VySGlkZGVuQXR0cmlidXRl
AE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5Db21waWxlclNlcnZpY2VzAFN0YW5kYXJkTW9kdWxlQXR0
cmlidXRlAEhpZGVNb2R1bGVOYW1lQXR0cmlidXRlAFN5c3RlbS5Db21wb25lbnRNb2RlbC5EZXNp
Z24ASGVscEtleXdvcmRBdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBS
dW50aW1lSGVscGVycwBHZXRPYmplY3RWYWx1ZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJv
bUhhbmRsZQBBY3RpdmF0b3IAQ3JlYXRlSW5zdGFuY2UATXlHcm91cENvbGxlY3Rpb25BdHRyaWJ1
dGUAc2V0X1ZhbHVlAFN5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcwBDb21WaXNpYmxlQXR0
cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uVGhy
ZWFkaW5nAE1vbml0b3IARW50ZXIARXhpdABEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFNj
cmlwdE9iamVjdE1vZGVsAGdldF9EdHMAc2V0X1Rhc2tSZXN1bHQATWljcm9zb2Z0LlNxbFNlcnZl
ci5NYW5hZ2VkRFRTAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVmFyaWFibGVzAEV4
Y2VwdGlvbgBWYXJpYWJsZURpc3BlbnNlcgBnZXRfVmFyaWFibGVEaXNwZW5zZXIATG9ja0Zvcldy
aXRlAEdldFZhcmlhYmxlcwBWYXJpYWJsZQBnZXRfSXRlbQBQcm9qZWN0RGF0YQBTZXRQcm9qZWN0
RXJyb3IAQ2xlYXJQcm9qZWN0RXJyb3IAVW5sb2NrAFJlc2V0AExvY2tGb3JSZWFkAENMU0NvbXBs
aWFudEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAc3RfNWI3ZDNk
OWZlZTJhNDE0YWFhMTBkY2E5ODY4ZGVlMmMuUmVzb3VyY2VzLnJlc291cmNlcwBDb21waWxhdGlv
blJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFN5c3Rl
bS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Rmls
ZVZlcnNpb25BdHRyaWJ1dGUAR3VpZEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0
ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNz
ZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1i
bHlUaXRsZUF0dHJpYnV0ZQBzdF81YjdkM2Q5ZmVlMmE0MTRhYWExMGRjYTk4NjhkZWUyYy5kbGwA
AAAAMU0AeQAuAFIAZQBzAG8AdQByAGMAZQBzAC4ATQB5AFIAZQBzAG8AdQByAGMAZQBzAAAAWIQK
roQZa0CK/8Vbltyo2AAIt3pcVhk04IkIsD9ffxHVCjoDIAABAwAAAQQAABIMBwYVEhgBEgwEAAAS
CAcGFRIYARIIBAAAEhEHBhUSGAESEQQAABIUBwYVEhgBEhQECAASDAQIABIIBAgAEhEECAASFAQg
AQIcAyAACAQgABIVAyAADgIeAAcQAQEeAB4ABzABAQEQHgACEwAEIAATAAcGFRIZARMABCgAEwAD
BhIdAwYSIQQAABIdBAAAEiEFAAEBEiEECAASHQQIABIhAwYSIAIGHAQAABIgBAgAEiAIiYRdzYCA
zJEFIAIBDhwEIAEcDgIGCAMGESgEAAAAAAQBAAAABSABARE1CAEAAQAAAAAABSACAQ4OGAEACk15
VGVtcGxhdGUIMTAuMC4wLjAAAAYVEhgBEgwGFRIYARIIBhUSGAESEQYVEhgBEhQEBwESDAQHARII
BAcBEhEEBwESFAQgAQEOEAEAC015LkNvbXB1dGVyAAAMAQAHTXkuVXNlcgAAEwEADk15LkFwcGxp
Y2F0aW9uAAATAQAOTXkuV2ViU2VydmljZXMAAAQAARwcAwcBAgMHAQgGAAESFRFRBAcBEhUDBwEO
BRABAB4ABAoBHgAEBwEeAAcgBAEODg4OYQEANFN5c3RlbS5XZWIuU2VydmljZXMuUHJvdG9jb2xz
LlNvYXBIdHRwQ2xpZW50UHJvdG9jb2wSQ3JlYXRlX19JbnN0YW5jZV9fE0Rpc3Bvc2VfX0luc3Rh
bmNlX18AAAAGFRIYARMABhUSGQETAAQKARMABSABARMACAcDEwATABMABCABAQIFAQAAAAAEIAAS
YQYgAgEOEmEGBwISHRIdBAcBEiEIAQACAAAAAAAEAAEBHAQHARIgBCAAEm0EIAEBCAQgABJ5BiAB
ARAScQUgARJ9HAQgAQEcBQABARJ1CQcEAhJxEnUSdQMgABwLBwYCHBwScRJ1EnUIAQAIAAAAAAAe
AQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12
NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0DAEABzEuMC4wLjAA
ACkBACQ1NGQxMDM0Zi0xZjE4LTQzOWMtYWNhNi1jYzM0MjI2ZjEwMzkAAAUBAAEAAB8BABpDb3B5
cmlnaHQgQCBNaWNyb3NvZnQgMjAxNwAAKAEAI3N0XzViN2QzZDlmZWUyYTQxNGFhYTEwZGNhOTg2
OGRlZTJjAAAOAQAJTWljcm9zb2Z0AAAApDsAAAAAAAAAAAAAvjsAAAAgAAAAAAAAAAAAAAAAAAAA
AAAAAAAAALA7AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAAMgDAAAAAAAAAAAAAMgDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsAQoAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAEAwAAAQAwADAAMAAwADAA
NABiADAAAAA0AAoAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAE0AaQBjAHIAbwBzAG8AZgB0
AAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAHMAdABfADUAYgA3AGQA
MwBkADkAZgBlAGUAMgBhADQAMQA0AGEAYQBhADEAMABkAGMAYQA5ADgANgA4AGQAZQBlADIAYwAA
ADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAHAAKAABAEkA
bgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAcwB0AF8ANQBiADcAZAAzAGQAOQBmAGUAZQAyAGEANAAx
ADQAYQBhAGEAMQAwAGQAYwBhADkAOAA2ADgAZABlAGUAMgBjAC4AZABsAGwAAABcABsAAQBMAGUA
ZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABNAGkAYwBy
AG8AcwBvAGYAdAAgADIAMAAxADcAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4A
YQBtAGUAAABzAHQAXwA1AGIANwBkADMAZAA5AGYAZQBlADIAYQA0ADEANABhAGEAYQAxADAAZABj
AGEAOQA4ADYAOABkAGUAZQAyAGMALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0A
ZQAAAAAAcwB0AF8ANQBiADcAZAAzAGQAOQBmAGUAZQAyAGEANAAxADQAYQBhAGEAMQAwAGQAYwBh
ADkAOAA2ADgAZABlAGUAMgBjAAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgAwAC4AMAAAADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAADQOwAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\SSISOpsEhObj_Package_OnError"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{03738F84-053A-4F4A-8F1A-CBE802CF3172}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_Package_OnError"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="OLEDB_ETLAudit"
              SQLTask:SqlStatementSource="EXEC [bix].[usp_SSISOps_Audit_OnAlert_61] @Scope='Package',@EventType='E',@ExecutionID=?,@SourceID=?,@SourceName=?,@SourceType='UNKNOWN',@MessageCode=?,@MessageDescription=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="System::SourceName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="System::ErrorCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="System::ErrorDescription"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\SSISOpsEhObj_Task_OnError"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{ED185EF7-47BA-4460-BF11-671BEE4C55E7}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_Task_OnError"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="OLEDB_ETLAudit"
              SQLTask:SqlStatementSource="EXEC [bix].[usp_SSISOps_Audit_OnAlert_61] @Scope='Task',@EventType='E',@ExecutionID=?,@SourceID=?,@SourceName=?,@SourceType='UNKNOWN',@MessageCode=?,@MessageDescription=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="System::SourceName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="System::ErrorCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="System::ErrorDescription"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\SSISOpsNFObj_UpdateAlertList"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{284F3A5E-B6C5-4C71-BB5D-8905CD5FE79B}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsNFObj_UpdateAlertList">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="st_2ef5ddeb00b34ea798820cd48a318dc8"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="VisualBasic">
              <ProjectItem
                Name="ScriptMain.vb"
                Encoding="UTF8"><![CDATA['/*
'Copyright © 2015 Pragmatic Works Inc.
'#####################################################################################################################
'LEGAL NOTICE
'#####################################################################################################################
'THE FOLLOWING SOURCE CODE IS PRODUCED BY PRAGMATIC WORKS INC.
'YOU MUST HAVE A VALID LICENSE OF "BI xPRESS" (PRODUCT OF PRAGMATIC WORKS) TO USE/MODIFY THE FOLLOWING SOURCE CODE.

'YOU CAN NOT PUBLISH ANY PORTION OF THIS SOURCE CODE WITHOUT WRITTEN PERMISSION OF PRAGMATIC WORKS INC.
'##################################################################################################################### 
'*/
#Region "Imports"
Imports System
Imports System.Data
Imports System.Math
Imports System.Runtime.InteropServices
Imports Microsoft.SqlServer.Dts.Runtime
Imports System.Net
Imports System.Net.Mail
Imports System.Collections
#End Region

'ScriptMain is the entry point class of the script.  Do not change the name, attributes,
'or parent of this class.
<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute()> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
    Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

    Public Sub Main()

        ' Begin BI xPress Code

        UpdateAlertList()

        ' End BI xPress Code

        Dts.TaskResult = ScriptResults.Success
    End Sub

#Region "ScriptResults declaration"

    Enum ScriptResults
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    End Enum

# End Region

    Private Const NotificationFrameworkAlertListVariableName As String = "User::varSSISOpsNF_AlertList"
    Private Const NotificationFrameworkAlertListAllVariableName As String = "User::varSSISOpsNF_AlertList_All"
    Private Const NotificationFrameworkCounter As String = "User::varSSISOpsNF_Notification_Counter"
    Private Const NotificationFrameworkSubComponentName As String = "BI xPress Notification Framework Send Alert"

    Private Sub UpdateAlertList()
        Dim oRuntimeSettings As System.Collections.Hashtable = GetRuntimeSettings()

        Dim sFilteredAlerts As String = "|" & oRuntimeSettings("FILTERED_ALERTS").ToString() & "|"

        Dim errorCodeValue As String = ReadVariable("System::ErrorCode").ToString()

        If sFilteredAlerts.IndexOf("|" & errorCodeValue.ToString() & "|") >= 0 Then
            Return
        End If

        ' Filter This
        Dim errorDescription As String = ReadVariable("System::ErrorDescription").ToString()
        Dim sourceName As String = ReadVariable("System::SourceName").ToString()
        Dim sourceId As String = ReadVariable("System::SourceID").ToString()

        Dim isErrorScope As Boolean = False

        Try
            If Dts.VariableDispenser.Contains("System::Cancel") Then
                isErrorScope = True
            Else
                isErrorScope = False
            End If
        Catch generatedExceptionName As Exception
            isErrorScope = False
        End Try

        Dim alertType As ScriptMain.AlertType = DirectCast(IIf(isErrorScope, alertType.ErrorAlert, alertType.WarningAlert), ScriptMain.AlertType)

        Dim errorCode As Integer

        If String.IsNullOrEmpty(errorCodeValue) OrElse Not Integer.TryParse(errorCodeValue, errorCode) Then
            errorCode = 0
        End If

        AddAlertInfo(errorDescription, errorCode, sourceName, sourceId, alertType)
    End Sub

    Private Sub AddAlertInfo(alertDescription As String, alertCode As Integer, sourceName As String, sourceId As String, alertType As ScriptMain.AlertType)
        If String.IsNullOrEmpty(alertDescription) Then
            alertDescription = "<NO ALERT DESCRIPTION GIVEN>"
        End If

        If String.IsNullOrEmpty(sourceName) Then
            sourceName = "<NO ALERT SOURCE NAME GIVEN>"
        End If

        Dim alertListBuilder As New System.Text.StringBuilder()
        Dim alertListAllBuilder As New System.Text.StringBuilder()

        Dim alertInfo As New ScriptMain.AlertInfo(alertDescription, alertCode, sourceName, sourceId, alertType)

        Dim xmlSerializer As New System.Xml.Serialization.XmlSerializer(GetType(ScriptMain.AlertInfo), New Type() {GetType(ScriptMain.AlertType)})

        ' Build a flat list of XML AlertInfo elements that don't have to be validated each time we add new node(s).  This will save on processing time but will increase code complexity in the OnPostExecute event handler.
        Using stringWriter As New System.IO.StringWriter()
            xmlSerializer.Serialize(stringWriter, alertInfo)

            Dim alertInfoDocument As New System.Xml.XmlDocument()

            alertInfoDocument.LoadXml(stringWriter.GetStringBuilder().ToString())

            For Each documentNode As System.Xml.XmlNode In alertInfoDocument.ChildNodes
                If TypeOf documentNode Is System.Xml.XmlDeclaration OrElse TypeOf documentNode Is System.Xml.XmlComment OrElse TypeOf documentNode Is System.Xml.XmlAttribute OrElse String.IsNullOrEmpty(documentNode.OuterXml) Then
                    Continue For
                End If

                Dim outerXml As String = documentNode.OuterXml

                outerXml = outerXml.Replace("xmlns:xsd=""http://www.w3.org/2001/XMLSchema""", String.Empty).Replace("xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""", String.Empty)

                alertListBuilder.Append(outerXml)
                alertListAllBuilder.Append(outerXml)
            Next
        End Using

        Dim updatedAlertList As String = TryCast(ReadVariable(NotificationFrameworkAlertListVariableName), String)
        Dim existingAlertList As String

        If Not String.IsNullOrEmpty(updatedAlertList) Then
            existingAlertList = updatedAlertList & alertListBuilder.ToString()
        Else
            existingAlertList = alertListBuilder.ToString()
        End If

        WriteVariable(NotificationFrameworkAlertListVariableName, existingAlertList)

        Dim updatedAlertListAll As String = TryCast(ReadVariable(NotificationFrameworkAlertListAllVariableName), String)
        Dim existingAlertListAll As String

        If Not String.IsNullOrEmpty(updatedAlertListAll) Then
            existingAlertListAll = updatedAlertListAll & alertListAllBuilder.ToString()
        Else
            existingAlertListAll = alertListAllBuilder.ToString()
        End If
        
        WriteVariable(NotificationFrameworkAlertListAllVariableName, existingAlertListAll)
    End Sub

    Private Sub SetSetting(SettingName As String, Value As Object, runtimeSettings As System.Collections.Hashtable)
        SettingName = SettingName.ToUpper(System.Globalization.CultureInfo.InvariantCulture).Trim()

        If Not runtimeSettings.ContainsKey(SettingName) Then
            Throw New Exception(SettingName & " setting doesn't exist in runtime setting list.")
        End If

        runtimeSettings(SettingName) = Value
    End Sub

    Private Function GetSetting(settingName As String, runtimeSettings As System.Collections.Hashtable) As Object
        settingName = settingName.ToUpper(System.Globalization.CultureInfo.InvariantCulture).Trim()

        If runtimeSettings.ContainsKey(settingName) Then
            Return runtimeSettings(settingName)
        End If

        ' If key not found then set default 
        Select Case settingName
            Case "MAX_NOTIFICATIONS"
                Return 1
            Case "ENABLE_ROWCOUNT_THRESHOLD"
                Return False
            Case "ENABLE_TIME_THRESHOLD"
                Return False
            Case "PRIORITY_MODE" ' DELAYED (After Package) or URGENT (After Task) 
                Return "URGENT"
            Case "EMAIL_FORMAT" ' TEXT or HTML 
                Return "TEXT"
            Case "SMTP_PORT" ' Default 25 
                Return 25
            Case "SMTP_USESSL" ' Default False
                Return False
            Case "SMTP_UID"
                Return ""
            Case "SMTP_PWD"
                Return ""
            Case "SMS_EMAILLIST" ' Must be pipe seperated e.g. 66633422@tmobile.net|11223445@tmobile.net .... 
                Return ""
            Case "FILTERED_ALERTS" ' Must be pipe seperated e.g. -2344556|-11223445 .... 
                Return ""
            Case "NOTIFY_ONERROR"
                Return True
            Case "NOTIFY_ONWARNING"
                Return False
            Case "NOTIFY_ONSUCCESS"
                Return False
            Case "NOTIFY_ONCOMPLETE"
                Return False
            Case "SMS_MAXLENGTH"
                Return 160
            Case "NF_CHECK"
                Return ""
            Case "CC_EMAILLIST"
                Return ""
            Case "BCC_EMAILLIST"
                Return ""
            Case "NOTIFY_USING_EMAIL"
                Return True
            Case "NOTIFY_USING_SMS"
                Return True
            Case "NOTIFY_USING_EVENTLOG"
                Return False
            Case "NOTIFY_USING_LOGFILE"
                Return False
            Case "LOG_FOLDER_PATH"
                Return "C:\SSIS\Log"
            Case "DELETE_LOG_OLDER_THAN_DAYS"
                Return 5
            Case "USE_CUSTOM_EMAIL_TEMPLATE"
                Return False
            Case "CUSTOM_EMAIL_TEMPLATE_FILEPATH"
                Return "C:\SSIS\Config\NF_EmailTemplate.htm"
            Case Else
                Return Nothing
        End Select
    End Function

    <Serializable()> _
    Public Enum AlertType
        ErrorAlert = 1
        WarningAlert = 2
        TimeThresholdAlert = 3
        RowCountThresholdAlert = 4
    End Enum

    ' NOTE : Do not use double quotes {"} and semicolon {;} in the value field. E.g. MAX_NOTIFICATIONS=3;PRIORITY_MODE=URGENT;SMTP_UID=emailuser;SMTP_PWD=xx;@@4e; 
    ' In above example SMTP_PWD=xx;@@4e this will cause problem in parsing because password is using {;}. System will consider password xx instead of xx;@@4e. 
    Public Function GetRuntimeSettings() As System.Collections.Hashtable
        Dim otherConfigSettingsVariableValue As Object = ReadVariable("User::varSSISOpsNF_OtherConfigSettings")
        Dim otherConfigSettings As String

        If otherConfigSettingsVariableValue IsNot Nothing Then
            otherConfigSettings = otherConfigSettingsVariableValue.ToString()
        Else
            otherConfigSettings = Nothing
        End If

        Dim runtimeSettings As New System.Collections.Hashtable()

        ' Set Default values
        runtimeSettings.Add("MAX_NOTIFICATIONS", 1)
        runtimeSettings.Add("ENABLE_ROWCOUNT_THRESHOLD", False)
        runtimeSettings.Add("ENABLE_TIME_THRESHOLD", False)
        runtimeSettings.Add("PRIORITY_MODE", "DELAYED")
        runtimeSettings.Add("EMAIL_FORMAT", "HTML")
        runtimeSettings.Add("SMTP_PORT", 25)
        runtimeSettings.Add("SMTP_USESSL", False)
        runtimeSettings.Add("SMTP_UID", String.Empty)
        runtimeSettings.Add("SMTP_PWD", String.Empty)
        runtimeSettings.Add("SMS_EMAILLIST", String.Empty)
        runtimeSettings.Add("FILTERED_ALERTS", String.Empty)
        runtimeSettings.Add("NOTIFY_ONERROR", True)
        runtimeSettings.Add("NOTIFY_ONWARNING", False)
        runtimeSettings.Add("NOTIFY_ONSUCCESS", False)
        runtimeSettings.Add("NOTIFY_ONCOMPLETE", False)
        runtimeSettings.Add("SMS_MAXLENGTH", 160)
        runtimeSettings.Add("CC_EMAILLIST", String.Empty)
        runtimeSettings.Add("BCC_EMAILLIST", String.Empty)
        runtimeSettings.Add("NOTIFY_USING_EMAIL", True)
        runtimeSettings.Add("NOTIFY_USING_SMS", True)
        runtimeSettings.Add("NOTIFY_USING_EVENTLOG", False)
        runtimeSettings.Add("NOTIFY_USING_LOGFILE", False)
        runtimeSettings.Add("LOG_FOLDER_PATH", "C:\SSIS\Log")
        runtimeSettings.Add("DELETE_LOG_OLDER_THAN_DAYS", 5)
        runtimeSettings.Add("USE_CUSTOM_EMAIL_TEMPLATE", False)
        runtimeSettings.Add("CUSTOM_EMAIL_TEMPLATE_FILEPATH", "C:\SSIS\Config\NF_EmailTemplate.htm")

        If Not String.IsNullOrEmpty(otherConfigSettings) Then
            ' Parse settings (Setting1=value1;Setting2=value2;Setting3=value3 ...... SettingN=valueN;)

            Const PAIR_SEP As String = ";"
            Const NAMEVAL_SEP As String = "="

            Dim arrNameValue As String() = otherConfigSettings.Split(PAIR_SEP.ToCharArray())

            For Each sPair As String In arrNameValue
                Dim arrTemp As String() = sPair.Split(NAMEVAL_SEP.ToCharArray(), 2, StringSplitOptions.RemoveEmptyEntries)

                Try
                    If arrTemp.Length >= 2 Then
                        Dim settingName As String = arrTemp(0)
                        Dim settingValue As String = arrTemp(1)

                        Select Case settingName.ToUpper().Trim()
                            Case "MAX_NOTIFICATIONS"
                                runtimeSettings("MAX_NOTIFICATIONS") = Convert.ToInt32(settingValue)
                                Exit Select
                            Case "ENABLE_ROWCOUNT_THRESHOLD"
                                runtimeSettings("ENABLE_ROWCOUNT_THRESHOLD") = Convert.ToBoolean(settingValue)
                                Exit Select
                            Case "ENABLE_TIME_THRESHOLD"
                                runtimeSettings("ENABLE_TIME_THRESHOLD") = Convert.ToBoolean(settingValue)
                                Exit Select
                            Case "PRIORITY_MODE"
                                ' DELAYED (After Package) or URGENT (After Task) 
                                runtimeSettings("PRIORITY_MODE") = DirectCast(settingValue, String)
                                Exit Select
                            Case "EMAIL_FORMAT"
                                ' TEXT or HTML 
                                runtimeSettings("EMAIL_FORMAT") = DirectCast(settingValue, String)
                                Exit Select
                            Case "SMTP_PORT"
                                ' Default 25 
                                runtimeSettings("SMTP_PORT") = Convert.ToInt32(settingValue)
                                Exit Select
                            Case "SMTP_USESSL"
                                ' Default false
                                runtimeSettings("SMTP_USESSL") = Convert.ToBoolean(settingValue)
                                Exit Select
                            Case "SMTP_UID"
                                runtimeSettings("SMTP_UID") = DirectCast(settingValue, String)
                                Exit Select
                            Case "SMTP_PWD"
                                runtimeSettings("SMTP_PWD") = DirectCast(settingValue, String)
                                Exit Select
                            Case "SMS_EMAILLIST"
                                ' Must be pipe seperated e.g. 66633422@tmobile.net|11223445@tmobile.net .... 
                                runtimeSettings("SMS_EMAILLIST") = DirectCast(settingValue, String)
                                Exit Select
                            Case "FILTERED_ALERTS"
                                '''/Must be pipe seperated e.g. -111|-222 .... 
                                runtimeSettings("FILTERED_ALERTS") = DirectCast(settingValue, String)
                                Exit Select
                            Case "NOTIFY_ONERROR"
                                runtimeSettings("NOTIFY_ONERROR") = Convert.ToBoolean(settingValue)
                                Exit Select
                            Case "NOTIFY_ONWARNING"
                                runtimeSettings("NOTIFY_ONWARNING") = Convert.ToBoolean(settingValue)
                                Exit Select
                            Case "NOTIFY_ONSUCCESS"
                                runtimeSettings("NOTIFY_ONSUCCESS") = Convert.ToBoolean(settingValue)
                                Exit Select
                            Case "NOTIFY_ONCOMPLETE"
                                runtimeSettings("NOTIFY_ONCOMPLETE") = Convert.ToBoolean(settingValue)
                                Exit Select
                            Case "SMS_MAXLENGTH"
                                runtimeSettings("SMS_MAXLENGTH") = Convert.ToInt32(settingValue)
                                Exit Select
                            Case "CC_EMAILLIST"
                                runtimeSettings("CC_EMAILLIST") = DirectCast(settingValue, String)
                                Exit Select
                            Case "BCC_EMAILLIST"
                                runtimeSettings("BCC_EMAILLIST") = DirectCast(settingValue, String)
                                Exit Select
                            Case "NOTIFY_USING_EMAIL"
                                runtimeSettings("NOTIFY_USING_EMAIL") = Convert.ToBoolean(settingValue)
                                Exit Select
                            Case "NOTIFY_USING_SMS"
                                runtimeSettings("NOTIFY_USING_SMS") = Convert.ToBoolean(settingValue)
                                Exit Select
                            Case "NOTIFY_USING_EVENTLOG"
                                runtimeSettings("NOTIFY_USING_EVENTLOG") = Convert.ToBoolean(settingValue)
                                Exit Select
                            Case "NOTIFY_USING_LOGFILE"
                                runtimeSettings("NOTIFY_USING_LOGFILE") = Convert.ToBoolean(settingValue)
                                Exit Select
                            Case "LOG_FOLDER_PATH"
                                runtimeSettings("LOG_FOLDER_PATH") = DirectCast(settingValue, String)
                                Exit Select
                            Case "DELETE_LOG_OLDER_THAN_DAYS"
                                runtimeSettings("DELETE_LOG_OLDER_THAN_DAYS") = Convert.ToInt32(settingValue)
                                Exit Select
                            Case "USE_CUSTOM_EMAIL_TEMPLATE"
                                runtimeSettings("USE_CUSTOM_EMAIL_TEMPLATE") = Convert.ToBoolean(settingValue)
                                Exit Select
                            Case "CUSTOM_EMAIL_TEMPLATE_FILEPATH"
                                runtimeSettings("CUSTOM_EMAIL_TEMPLATE_FILEPATH") = DirectCast(settingValue, String)
                                Exit Select
                        End Select
                    End If
                Catch ex As Exception
                    Dts.Events.FireError(0, "BI xPress Notification Framework Event Handler", ex.Message, String.Empty, 0)
                End Try
            Next
        End If

        SetNF(runtimeSettings)

        WriteVariable(NotificationFrameworkCounter, 0)

        Return runtimeSettings
    End Function

    Public Sub SetNF(runtimeSettings As Hashtable)
        runtimeSettings.Add(Chr(78) & Chr(70) & Chr(95) & Chr(67) & Chr(72) & Chr(69) & Chr(67) & Chr(75), ReadVariable("User::varSSISOpsNF_" & Chr(67) & Chr(72) & Chr(69) & Chr(67) & Chr(75)))
    End Sub

    <Serializable()> _
    Public Class AlertInfo
        Private m_alertCode As Integer
        Private m_alertDescription As String
        Private m_alertTimeStamp As DateTime
        Private m_alertType As AlertType
        Private m_sourceId As String
        Private m_sourceName As String

        ''' <summary>
        ''' Retained for serialization purposes.
        ''' </summary>
        Public Sub New()
        End Sub

        Public Sub New(alertDescription_1 As String, alertCode_1 As Integer, sourceName_1 As String, sourceId_1 As String, alertType_1 As AlertType)
            Me.New(alertDescription_1, alertCode_1, sourceName_1, sourceId_1, alertType_1, DateTime.Now)
        End Sub

        Public Sub New(alertDescription_2 As String, alertCode_2 As Integer, sourceName_2 As String, sourceId_2 As String, alertType_2 As AlertType, timeStamp_2 As DateTime)
            AlertCode = alertCode_2
            AlertDescription = alertDescription_2
            AlertType = alertType_2
            SourceName = sourceName_2
            SourceId = sourceId_2
            AlertTimeStamp = timeStamp_2
        End Sub

        Public Property AlertCode() As Integer
            Get
                Return m_alertCode
            End Get
            Set(value As Integer)
                m_alertCode = Value
            End Set
        End Property
        
        Public Property AlertDescription() As String
            Get
                Return m_alertDescription
            End Get
            Set(value As String)
                m_alertDescription = Value
            End Set
        End Property
        
        Public Property AlertTimeStamp() As DateTime
            Get
                Return m_alertTimeStamp
            End Get
            Set(value As DateTime)
                m_alertTimeStamp = Value
            End Set
        End Property
        
        Public Property AlertType() As AlertType
            Get
                Return m_alertType
            End Get
            Set(value As AlertType)
                m_alertType = Value
            End Set
        End Property
        
        Public Property SourceId() As String
            Get
                Return m_sourceId
            End Get
            Set(value As String)
                m_sourceId = Value
            End Set
        End Property
        
        Public Property SourceName() As String
            Get
                Return m_sourceName
            End Get
            Set(value As String)
                m_sourceName = Value
            End Set
        End Property
    End Class

    Private Sub WriteVariable(ByVal variableName As String, ByVal variableValue As Object)
        Dim vars As Variables = Nothing
        Dim isUnlocked As Boolean = False

        Try
            Dts.VariableDispenser.LockForWrite(variableName)
            Dts.VariableDispenser.GetVariables(vars)

            Try
                vars(variableName).Value = variableValue
            Catch ex As Exception
                Throw
            Finally
                If vars IsNot Nothing Then
                    vars.Unlock()
                    isUnlocked = True
                End If
            End Try
        Catch ex As Exception
            Dts.VariableDispenser.Reset()

            Throw
        Finally
            If vars IsNot Nothing AndAlso Not isUnlocked Then
                vars.Unlock()
            End If
        End Try
    End Sub

    Private Function ReadVariable(ByVal variableName As String) As Object
        Dim vars As Variables = Nothing
        Dim isUnlocked As Boolean = False
        Dim result As Object

        Try
            Dts.VariableDispenser.LockForRead(variableName)
            Dts.VariableDispenser.GetVariables(vars)

            Try
                result = vars(variableName).Value
            Catch ex As Exception
                Throw
            Finally
                If vars IsNot Nothing Then
                    vars.Unlock()
                    isUnlocked = True
                End If
            End Try
        Catch ex As Exception
            Dts.VariableDispenser.Reset()

            Throw
        Finally
            If vars IsNot Nothing AndAlso Not isUnlocked Then
                vars.Unlock()
            End If
        End Try

        Return result
    End Function

End Class]]></ProjectItem>
              <ProjectItem
                Name="st_2ef5ddeb00b34ea798820cd48a318dc8.vbproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{109cb15a-d81d-4d27-875b-9f10f287b82f}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>st_2ef5ddeb00b34ea798820cd48a318dc8</RootNamespace>
    <AssemblyName>st_2ef5ddeb00b34ea798820cd48a318dc8</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="vb"
                           TemplatesPath=""
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>

        <Host Name="ScriptTask" IconIndex="">
        </Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="My Project\AssemblyInfo.vb"
                Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("st_2ef5ddeb00b34ea798820cd48a318dc8")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("Microsoft")> 
<Assembly: AssemblyProduct("st_2ef5ddeb00b34ea798820cd48a318dc8")> 
<Assembly: AssemblyCopyright("Copyright @ Microsoft 2017")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("0b737808-7dfc-4b40-b068-3dc23fdc659e")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>st_2ef5ddeb00b34ea798820cd48a318dc8</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>st_2ef5ddeb00b34ea798820cd48a318dc8</msb:DisplayName>
		<msb:ProjectId>{CD41FE85-BFF8-49DC-8C09-A1E89E742595}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_2ef5ddeb00b34ea798820cd48a318dc8.vbproj"/>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
              <BinaryItem
                Name="st_2ef5ddeb00b34ea798820cd48a318dc8.dll">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
KC0AAAoM/hoHLAgHb1oAAAoXCtzeJiUoLQAACg0CbyUAAApvKwAACm9bAAAK/hoHLAkGLQYHb1oA
AArcKgAAAAE0AAAAACcAFDsACR4AAAECACcAHUQADAAAAAAAAAQATlIAGR4AAAECAAQAZ2sADQAA
AAAbMAIAfAAAABYAABEUDRYKAm8lAAAKbysAAAoDb1wAAAoCbyUAAApvKwAAChIDb1cAAAoJA29Y
AAAKb10AAAooEQAACgzePyUoLQAAChME/hoJLAgJb1oAAAoXCtzeJyUoLQAAChMFAm8lAAAKbysA
AApvWwAACv4aCSwJBi0GCW9aAAAK3AgqATQAAAAAJwAUOwAKHgAAAQIAJwAeRQAMAAAAAAAABABP
UwAaHgAAAQIABABpbQANAAAAAB4CKBcAAAoqTgIDBAUOBA4FKGEAAAooJAAABirSAigXAAAKAgRv
JgAABgIDbygAAAYCDgVvLAAABgIFbzAAAAYCDgRvLgAABgIOBm8qAAAGKgAAABMwAQAHAAAAFwAA
EQJ7FgAABCoAIgIDfRYAAAQqAAAAEzABAAcAAAAYAAARAnsXAAAEKgAiAgN9FwAABCoAAAATMAEA
BwAAABkAABECexgAAAQqACICA30YAAAEKgAAABMwAQAHAAAAGgAAEQJ7GQAABCoAIgIDfRkAAAQq
AAAAEzABAAcAAAAbAAARAnsaAAAEKgAiAgN9GgAABCoAAAATMAEABwAAABwAABECexsAAAQqACIC
A30bAAAEKrQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwg
bXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tl
bj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAA
AAAAAAAAAAAAUEFEUEFEULQAAAAAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwA
AADQDAAAI34AADwNAAAkEAAAI1N0cmluZ3MAAAAAYB0AAGwIAAAjVVMAzCUAABAAAAAjR1VJRAAA
ANwlAABoBgAAI0Jsb2IAAAAAAAAAAgAAAVcdogkJDwAAAPolMwAWAAABAAAARAAAAAwAAAAbAAAA
MAAAACMAAABsAAAACgAAADYAAAAcAAAABQAAAA4AAAAVAAAACQAAAAEAAAAGAAAAAQAAAAUAAAAD
AAAAAgAAAAAA+g8BAAAAAAAKAF8BNQEKAJMBdQEGAKMBnAEKAPsBNQEGAHkCnAEKAPsC0QIGADED
IAMGAF4DSQMOAMUDsAMSAEQEGwQGAGoFVwUGAAEGnAEGAH8GnAEOAGkIUwgOAIIIUwgOAK8IlwgG
ANkIxggKABgJ8QgKADAJEwAOAGUJSAkGAJoJegkGALgJnAEGANwJnAEKAPUJEwAGADkKGgoGAF8K
TQoGAIYKdQoGAJkKxggSALYKGwQGAN8KnAEGAPIKnAEWAEcLJwsKAHgL8QgKAKYLEwAGAMQLnAEG
AN8L0wsaABEM+AsGACkMHwwaADYM7QsaAEIM7QsGAEoMVwUGAFYMHwwaAIQM7QsaALkM7QsaAMgM
7QsaANMM7QsGAAsNnAEKAFYN8QgGAG4NnAEGAIwNnAEGAJ8NnAESALkNGwQWAO4NJwsWABIOJwsG
ADQOnAESAEoOGwQGAGwOnAEGAMIOegkGAOIOegkGABoPAA8GADMPTQoGAFAPGgoGAF4PTQoGAHkP
TQoGAJQPTQoGAK0PTQoGAMYPTQoGAOMPTQoAAAAAAQAAAAAAAQABAAAAAAApADcABQABAAEAAAAA
AF4ANwAJAAEAAgAAARAAaQA3AA0AAQADAAUBAABzAAAADQAFAAgABQEAAIEAAAANAAUADwAAAAAA
nACoAA0ABgARAAABEADZAOQAJQAIABUAAQAAAAgB5AApAAoAGAACAQAAEwEAADEADgAiAAIhAAAh
AQAAMQARACIAAiAAACsBAAANABYAIgAxAL4BIAAxAOcBLQAxAAkCOgAxAC4CRwAhAAoDkAARAEED
nQARAGoDoQARAN0DvwARAOUDwwBRgGUE2QBRgJAE2QBRgL4E2QBRgNsE2QAGBgYGKwJWgA4GLgJW
gBYGLgIGBgYGKwJWgB4GPAJWgCkGPAJWgDYGPAJWgEkGPAIBAGAGKwIBAGwG2QABAIgGTwIBAJkG
PAIBAKUG2QABALAG2QBQIAAAAAAGGG8BEwABAFggAAAAAAYYbwETAAEAYCAAAAAAERiqARcAAQCM
IAAAAAATCLEBGwABAKQgAAAAABMI1wEoAAEAvCAAAAAAEwgAAjUAAQDUIAAAAAATCB4CQgABAOwg
AAAAAEYCZAJjAAEACCEAAAAARgJtAmgAAgAcIQAAAACDAH4CbAACADQhAAAAAEYChgJxAAIASCEA
AAAAEQCPAngAAgBkIQAAAAABAK0CgAADAIAhAAAAAAYYbwETAAQAiCEAAAAAAwjBAosABAC8IQAA
AAAGGG8BEwAEANAhAAAAAAMYbwETAAQA2CEAAAAAFgh2A6UABAAUIgAAAAAWCIoDqgAEACgiAAAA
ABYIlgOvAAQAMCIAAAAAERiqARcABQBEIgAAAAAGGG8BEwAFAEwiAAAAABYI8gPGAAUAqCIAAAAA
BhhvARMABQCwIgAAAAAGAGAEEwAFAMQiAAAAAAEAAQUTAAUA6CMAAAAAAQARBfwBBQDYJQAAAAAB
AHQFBgIKABQmAAAAAAEAmwUOAg0AlCgAAAAABgCyBRUCDwBoLwAAAAAGAMUFGgIPAIgvAAAAAAEA
ywUgAhAARDAAAAAAAQD0BSYCEgAAMQAAAAAGGG8BEwATAAgxAAAAAAYYbwH8ARMAHDEAAAAABhhv
AVMCGABUMQAAAAAGCE8HaAAeAGgxAAAAAAYIXQdfAh4AdDEAAAAABghxB3EAHwCIMQAAAAAGCIYH
ZAIfAJQxAAAAAAYImwdpAiAAqDEAAAAABgiuB24CIAC0MQAAAAAGCMEHdAIhAMgxAAAAAAYIzwd5
AiEA1DEAAAAABgjdB3EAIgDoMQAAAAAGCOoHZAIiAPQxAAAAAAYI9wdxACMACDIAAAAABggGCGQC
IwAAAAEAawIAAAEApAIAAAEApAIAAAEAogMAAAEAHgUAAAIALwUAAAMAOQUAAAQARAUAAAUATQUA
AAEAfwUAAAIAogMAAAMAiwUAAAEApgUAAAIAiwUAAAEAiwUAAAEA2QUAAAIA5gUAAAEA2QUAAAEA
vQYAAAIA0AYAAAMA3AYAAAQA6QYAAAUA9AYAAAEAAAcAAAIAEwcAAAMAHwcAAAQALAcAAAUANwcA
AAYAQwcAAAEAawcAAAEAawcAAAEAawcAAAEAawcAAAEAawcAAAEAawcJAG8BEwBxAG8BkQKBAG8B
oAIRAG8BEwCJAG8BEwAkAG8BEwAsAG8BEwA0AG8BEwA8AG8BEwAkAMECiwAsAMECiwA0AMECiwA8
AMECiwCRAG8BEwCZAG8BEwChAG8BZAKpAKkJNQMZAGQCYwAZAG0CaAApAMoJQgMZAIYCcQC5AOYJ
UgMZAG8BEwDBAG8BYgNEAAoDkABMAPIDiwBMABAK3wNMAG8BEwDJAG8B7gMpAGgK+QM5AG8B/gNJ
AG8BEwDZAI4KGgTZAJQKGgThAG8BEwBRAG8BEwBRAMgKJATpANAKXwJZAOkKKQT5APkKLgT5AIYC
cQD5AAALNQTpAFkLOgQBAW8LQAQJAYQLRQQJAZQLFwARAbILSwT5ALYLUgQZAcoLVwQhAW8BEwAp
AW8BbgQxAW8BEwApAWEMdwQ5AW8BEwAxAWsMfwQhAYYCcQA5AXwMZAJBAZAMhQRZAZ8MiwRJAa0M
kQRBAeAMcQD5AO0M2QD5APMMlQQhAfsMmwRJAQINogR5ARcNEwD5APkKpgRBAB8NqgD5ADQNzgT5
ADwNcQBZAEENYwDxAG8BZAJZAE0N1ASBAWAN2gRZAG8BEwBZAHYN1AT5AHoN5gT5AIYN6wT5AIYN
8gT5ADQNcQCZAacN/QSZAa8NUgTpAM0NAgXxANgNcQChAeQNCAUBAfgNZAIBAQUOJwWpAekKLwWx
ARAKNgWpARsOEwABASIOEwABASgOZAKxAfIDkQS5AW8B7gPBAW8BEwDJAW8BEwBpAIIOUwXRAW8B
XwLZAW8BEwDhAW8BZALpAW8BZALxAW8BZAL5AW8BZAIBAm8BZAIJAm8BZAIRAm8BZAIZAm8BZAIh
Am8BZAIOACgA3AAOACwAFQEOADAAVgEOADQApQEIADwAMgIIAEAANwIIAEgANwIIAEwAQAIIAFAA
RQIIAFQASgIpAIMA7wIuAFMDWAYuAEsDLwYuAEMDDwYuABsDawUuACMDigUuADsD8wMuAGMDLwYu
ABMDYgUuAFsD8wMuACsD0gUuADMD3wUuAOsA8wMuAPMCCQZAACsANwJAABMAlwJDABMAlwJDABsA
pgJJAIMADQNjABsApgJjABMAlwJpAIMAAAOAACsANwKDABsApgKDAHsANwKDAHMANwKJAIMAIQOg
ACsANwKjAMMAagOjABMAlwLAACsANwLDABMAlwLDAOsA8wPJABMAEQTgACsANwLpABMAEQQAASsA
NwIAARMAlwIJARsBNwIgARMAlwIgASsANwIjAfsCNwIjAfMC8wNAARMAlwJAASsANwJgASsANwJg
ARMAlwKAASsANwKgASsANwLAASsANwLAARMAlwLgASsANwIAAisANwIAAhMAlwLbAuAC5QLqAjoD
PgNJA04DXQNdA+UDBQQMBB8EXgSsBOEE2QDZABEFOwVGBT4DTgNYBV0FTgNOAwQAAQAGAAUABwAG
AAgACAAMAAkAAACTAU8AAABMAlQAAAD7AVkAAABYAl4AAAAUA5gAAAAxA7UAAACoA7oAAACiA8sA
AAAVCH8CAAAfCIMCAAAwCIcCAAAhAYwCAAA/CIMCAABICIMCAgAEAAMAAgAFAAUAAgAGAAcAAgAH
AAkAAgAPAAsAAgASAA0AAgATAA8AAQAUAA8AAgAXABEAAQAmABMAAgAlABMAAQAoABUAAgAnABUA
AgApABcAAQAqABcAAgArABkAAQAsABkAAQAuABsAAgAtABsAAgAvAB0AAQAwAB0AdQB1AIgAvwLG
As0C1ALMA9MDBIAAAAEAAAAAAAAAAAAAAAAA5AAAAAQAAAAAAAAAAAAAAAEACgAAAAAACgAAAAAA
AAAAAAAACgATAAAAAAAEAAAAAAAAAAAAAAABAJwBAAAAAAsAAAAAAAAAAAAAANAA/AMAAAAACwAA
AAAAAAAAAAAA0AAICwAAAAAEAAAAAAAAAAAAAAABAO0LAAAAAAAAAAABAAAAig4AAAUABAAGAAQA
CgAJAAsACQAMAAkAAAAQAAwAogIAABAAGQCiAgAAAAAbAKICLQBYAy0A2gMAAAAAADxNb2R1bGU+
AG1zY29ybGliAE1pY3Jvc29mdC5WaXN1YWxCYXNpYwBNeUFwcGxpY2F0aW9uAHN0XzJlZjVkZGVi
MDBiMzRlYTc5ODgyMGNkNDhhMzE4ZGM4Lk15AE15Q29tcHV0ZXIATXlQcm9qZWN0AE15V2ViU2Vy
dmljZXMAVGhyZWFkU2FmZU9iamVjdFByb3ZpZGVyYDEATXlSZXNvdXJjZXMAc3RfMmVmNWRkZWIw
MGIzNGVhNzk4ODIwY2Q0OGEzMThkYzguTXkuUmVzb3VyY2VzAE15U2V0dGluZ3MAc3RfMmVmNWRk
ZWIwMGIzNGVhNzk4ODIwY2Q0OGEzMThkYzgAU2NyaXB0TWFpbgBTY3JpcHRSZXN1bHRzAEFsZXJ0
VHlwZQBBbGVydEluZm8ATWljcm9zb2Z0LlZpc3VhbEJhc2ljLkFwcGxpY2F0aW9uU2VydmljZXMA
QXBwbGljYXRpb25CYXNlAC5jdG9yAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5EZXZpY2VzAENvbXB1
dGVyAFN5c3RlbQBPYmplY3QALmNjdG9yAGdldF9Db21wdXRlcgBtX0NvbXB1dGVyT2JqZWN0UHJv
dmlkZXIAZ2V0X0FwcGxpY2F0aW9uAG1fQXBwT2JqZWN0UHJvdmlkZXIAVXNlcgBnZXRfVXNlcgBt
X1VzZXJPYmplY3RQcm92aWRlcgBnZXRfV2ViU2VydmljZXMAbV9NeVdlYlNlcnZpY2VzT2JqZWN0
UHJvdmlkZXIAQXBwbGljYXRpb24AV2ViU2VydmljZXMARXF1YWxzAG8AR2V0SGFzaENvZGUAVHlw
ZQBHZXRUeXBlAFRvU3RyaW5nAENyZWF0ZV9fSW5zdGFuY2VfXwBUAGluc3RhbmNlAERpc3Bvc2Vf
X0luc3RhbmNlX18AZ2V0X0dldEluc3RhbmNlAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5NeVNlcnZp
Y2VzLkludGVybmFsAENvbnRleHRWYWx1ZWAxAG1fQ29udGV4dABHZXRJbnN0YW5jZQBTeXN0ZW0u
UmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgBfcmVzTWdyAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1
bHR1cmVJbmZvAF9yZXNDdWx0dXJlAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0
X0N1bHR1cmUAVmFsdWUAQ3VsdHVyZQBTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNl
dHRpbmdzQmFzZQBtX1ZhbHVlAG1fU3luY09iamVjdABnZXRfVmFsdWUATWljcm9zb2Z0LlNxbFNl
cnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sA
VlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAE1haW4ATm90aWZpY2F0aW9uRnJhbWV3b3JrQWxl
cnRMaXN0VmFyaWFibGVOYW1lAE5vdGlmaWNhdGlvbkZyYW1ld29ya0FsZXJ0TGlzdEFsbFZhcmlh
YmxlTmFtZQBOb3RpZmljYXRpb25GcmFtZXdvcmtDb3VudGVyAE5vdGlmaWNhdGlvbkZyYW1ld29y
a1N1YkNvbXBvbmVudE5hbWUAVXBkYXRlQWxlcnRMaXN0AEFkZEFsZXJ0SW5mbwBhbGVydERlc2Ny
aXB0aW9uAGFsZXJ0Q29kZQBzb3VyY2VOYW1lAHNvdXJjZUlkAGFsZXJ0VHlwZQBTeXN0ZW0uQ29s
bGVjdGlvbnMASGFzaHRhYmxlAFNldFNldHRpbmcAU2V0dGluZ05hbWUAcnVudGltZVNldHRpbmdz
AEdldFNldHRpbmcAc2V0dGluZ05hbWUAR2V0UnVudGltZVNldHRpbmdzAFNldE5GAFdyaXRlVmFy
aWFibGUAdmFyaWFibGVOYW1lAHZhcmlhYmxlVmFsdWUAUmVhZFZhcmlhYmxlAEVudW0AdmFsdWVf
XwBTdWNjZXNzAEZhaWx1cmUARXJyb3JBbGVydABXYXJuaW5nQWxlcnQAVGltZVRocmVzaG9sZEFs
ZXJ0AFJvd0NvdW50VGhyZXNob2xkQWxlcnQAbV9hbGVydENvZGUAbV9hbGVydERlc2NyaXB0aW9u
AERhdGVUaW1lAG1fYWxlcnRUaW1lU3RhbXAAbV9hbGVydFR5cGUAbV9zb3VyY2VJZABtX3NvdXJj
ZU5hbWUAYWxlcnREZXNjcmlwdGlvbl8xAGFsZXJ0Q29kZV8xAHNvdXJjZU5hbWVfMQBzb3VyY2VJ
ZF8xAGFsZXJ0VHlwZV8xAGFsZXJ0RGVzY3JpcHRpb25fMgBhbGVydENvZGVfMgBzb3VyY2VOYW1l
XzIAc291cmNlSWRfMgBhbGVydFR5cGVfMgB0aW1lU3RhbXBfMgBnZXRfQWxlcnRDb2RlAHNldF9B
bGVydENvZGUAdmFsdWUAZ2V0X0FsZXJ0RGVzY3JpcHRpb24Ac2V0X0FsZXJ0RGVzY3JpcHRpb24A
Z2V0X0FsZXJ0VGltZVN0YW1wAHNldF9BbGVydFRpbWVTdGFtcABnZXRfQWxlcnRUeXBlAHNldF9B
bGVydFR5cGUAZ2V0X1NvdXJjZUlkAHNldF9Tb3VyY2VJZABnZXRfU291cmNlTmFtZQBzZXRfU291
cmNlTmFtZQBBbGVydENvZGUAQWxlcnREZXNjcmlwdGlvbgBBbGVydFRpbWVTdGFtcABTb3VyY2VJ
ZABTb3VyY2VOYW1lAFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1
dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAU3lzdGVtLkNvZGVEb20uQ29tcGlsZXIAR2VuZXJhdGVk
Q29kZUF0dHJpYnV0ZQBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJIaWRkZW5BdHRyaWJ1dGUA
TWljcm9zb2Z0LlZpc3VhbEJhc2ljLkNvbXBpbGVyU2VydmljZXMAU3RhbmRhcmRNb2R1bGVBdHRy
aWJ1dGUASGlkZU1vZHVsZU5hbWVBdHRyaWJ1dGUAU3lzdGVtLkNvbXBvbmVudE1vZGVsLkRlc2ln
bgBIZWxwS2V5d29yZEF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFJ1
bnRpbWVIZWxwZXJzAEdldE9iamVjdFZhbHVlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9t
SGFuZGxlAEFjdGl2YXRvcgBDcmVhdGVJbnN0YW5jZQBNeUdyb3VwQ29sbGVjdGlvbkF0dHJpYnV0
ZQBzZXRfVmFsdWUAU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzAENvbVZpc2libGVBdHRy
aWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5UaHJl
YWRpbmcATW9uaXRvcgBFbnRlcgBFeGl0AERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAU2Ny
aXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBzZXRfVGFza1Jlc3VsdABFeGNlcHRpb24AZ2V0X0l0ZW0A
U3RyaW5nAENvbmNhdABJbmRleE9mAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNy
b3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFZhcmlhYmxlRGlzcGVuc2VyAGdldF9WYXJpYWJs
ZURpc3BlbnNlcgBDb250YWlucwBQcm9qZWN0RGF0YQBTZXRQcm9qZWN0RXJyb3IAQ2xlYXJQcm9q
ZWN0RXJyb3IASW50ZXJhY3Rpb24ASUlmAElzTnVsbE9yRW1wdHkASW50MzIAVHJ5UGFyc2UAU3lz
dGVtLlRleHQAU3RyaW5nQnVpbGRlcgBTeXN0ZW0uWG1sAFN5c3RlbS5YbWwuU2VyaWFsaXphdGlv
bgBYbWxTZXJpYWxpemVyAFN5c3RlbS5JTwBTdHJpbmdXcml0ZXIAWG1sRG9jdW1lbnQAWG1sTm9k
ZQBJRW51bWVyYXRvcgBUZXh0V3JpdGVyAFNlcmlhbGl6ZQBHZXRTdHJpbmdCdWlsZGVyAExvYWRY
bWwAWG1sTm9kZUxpc3QAZ2V0X0NoaWxkTm9kZXMAR2V0RW51bWVyYXRvcgBnZXRfQ3VycmVudABY
bWxEZWNsYXJhdGlvbgBYbWxDb21tZW50AFhtbEF0dHJpYnV0ZQBnZXRfT3V0ZXJYbWwARW1wdHkA
UmVwbGFjZQBBcHBlbmQATW92ZU5leHQASURpc3Bvc2FibGUARGlzcG9zZQBnZXRfSW52YXJpYW50
Q3VsdHVyZQBUb1VwcGVyAFRyaW0AQ29udGFpbnNLZXkAc2V0X0l0ZW0AT3BlcmF0b3JzAENvbXBh
cmVTdHJpbmcAQm9vbGVhbgBBZGQAVG9DaGFyQXJyYXkAU3BsaXQAU3RyaW5nU3BsaXRPcHRpb25z
AENvbnZlcnQAVG9JbnQzMgBUb0Jvb2xlYW4ARXZlbnRzT2JqZWN0V3JhcHBlcgBnZXRfRXZlbnRz
AGdldF9NZXNzYWdlAEZpcmVFcnJvcgBWYXJpYWJsZXMATG9ja0ZvcldyaXRlAEdldFZhcmlhYmxl
cwBWYXJpYWJsZQBVbmxvY2sAUmVzZXQATG9ja0ZvclJlYWQAQ0xTQ29tcGxpYW50QXR0cmlidXRl
AFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBTZXJpYWxpemFibGVBdHRyaWJ1dGUA
Z2V0X05vdwBzdF8yZWY1ZGRlYjAwYjM0ZWE3OTg4MjBjZDQ4YTMxOGRjOC5SZXNvdXJjZXMucmVz
b3VyY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxp
dHlBdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRy
aWJ1dGUAQXNzZW1ibHlGaWxlVmVyc2lvbkF0dHJpYnV0ZQBHdWlkQXR0cmlidXRlAEFzc2VtYmx5
VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5UHJv
ZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlv
bkF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAHN0XzJlZjVkZGViMDBiMzRlYTc5ODgy
MGNkNDhhMzE4ZGM4LmRsbAAAAAAxTQB5AC4AUgBlAHMAbwB1AHIAYwBlAHMALgBNAHkAUgBlAHMA
bwB1AHIAYwBlAHMAAAN8AAAfRgBJAEwAVABFAFIARQBEAF8AQQBMAEUAUgBUAFMAACNTAHkAcwB0
AGUAbQA6ADoARQByAHIAbwByAEMAbwBkAGUAADFTAHkAcwB0AGUAbQA6ADoARQByAHIAbwByAEQA
ZQBzAGMAcgBpAHAAdABpAG8AbgAAJVMAeQBzAHQAZQBtADoAOgBTAG8AdQByAGMAZQBOAGEAbQBl
AAAhUwB5AHMAdABlAG0AOgA6AFMAbwB1AHIAYwBlAEkARAAAHVMAeQBzAHQAZQBtADoAOgBDAGEA
bgBjAGUAbAAAOTwATgBPACAAQQBMAEUAUgBUACAARABFAFMAQwBSAEkAUABUAEkATwBOACAARwBJ
AFYARQBOAD4AADk8AE4ATwAgAEEATABFAFIAVAAgAFMATwBVAFIAQwBFACAATgBBAE0ARQAgAEcA
SQBWAEUATgA+AABZeABtAGwAbgBzADoAeABzAGQAPQAiAGgAdAB0AHAAOgAvAC8AdwB3AHcALgB3
ADMALgBvAHIAZwAvADIAMAAwADEALwBYAE0ATABTAGMAaABlAG0AYQAiAABreABtAGwAbgBzADoA
eABzAGkAPQAiAGgAdAB0AHAAOgAvAC8AdwB3AHcALgB3ADMALgBvAHIAZwAvADIAMAAwADEALwBY
AE0ATABTAGMAaABlAG0AYQAtAGkAbgBzAHQAYQBuAGMAZQAiAAE5VQBzAGUAcgA6ADoAdgBhAHIA
UwBTAEkAUwBPAHAAcwBOAEYAXwBBAGwAZQByAHQATABpAHMAdAAAQVUAcwBlAHIAOgA6AHYAYQBy
AFMAUwBJAFMATwBwAHMATgBGAF8AQQBsAGUAcgB0AEwAaQBzAHQAXwBBAGwAbAAAXyAAcwBlAHQA
dABpAG4AZwAgAGQAbwBlAHMAbgAnAHQAIABlAHgAaQBzAHQAIABpAG4AIAByAHUAbgB0AGkAbQBl
ACAAcwBlAHQAdABpAG4AZwAgAGwAaQBzAHQALgABI00AQQBYAF8ATgBPAFQASQBGAEkAQwBBAFQA
SQBPAE4AUwAAM0UATgBBAEIATABFAF8AUgBPAFcAQwBPAFUATgBUAF8AVABIAFIARQBTAEgATwBM
AEQAACtFAE4AQQBCAEwARQBfAFQASQBNAEUAXwBUAEgAUgBFAFMASABPAEwARAAAG1AAUgBJAE8A
UgBJAFQAWQBfAE0ATwBEAEUAAA1VAFIARwBFAE4AVAAAGUUATQBBAEkATABfAEYATwBSAE0AQQBU
AAAJVABFAFgAVAAAE1MATQBUAFAAXwBQAE8AUgBUAAAXUwBNAFQAUABfAFUAUwBFAFMAUwBMAAAR
UwBNAFQAUABfAFUASQBEAAABABFTAE0AVABQAF8AUABXAEQAABtTAE0AUwBfAEUATQBBAEkATABM
AEkAUwBUAAAdTgBPAFQASQBGAFkAXwBPAE4ARQBSAFIATwBSAAAhTgBPAFQASQBGAFkAXwBPAE4A
VwBBAFIATgBJAE4ARwAAIU4ATwBUAEkARgBZAF8ATwBOAFMAVQBDAEMARQBTAFMAACNOAE8AVABJ
AEYAWQBfAE8ATgBDAE8ATQBQAEwARQBUAEUAABtTAE0AUwBfAE0AQQBYAEwARQBOAEcAVABIAAAR
TgBGAF8AQwBIAEUAQwBLAAAZQwBDAF8ARQBNAEEASQBMAEwASQBTAFQAABtCAEMAQwBfAEUATQBB
AEkATABMAEkAUwBUAAAlTgBPAFQASQBGAFkAXwBVAFMASQBOAEcAXwBFAE0AQQBJAEwAACFOAE8A
VABJAEYAWQBfAFUAUwBJAE4ARwBfAFMATQBTAAArTgBPAFQASQBGAFkAXwBVAFMASQBOAEcAXwBF
AFYARQBOAFQATABPAEcAAClOAE8AVABJAEYAWQBfAFUAUwBJAE4ARwBfAEwATwBHAEYASQBMAEUA
AB9MAE8ARwBfAEYATwBMAEQARQBSAF8AUABBAFQASAAAF0MAOgBcAFMAUwBJAFMAXABMAG8AZwAA
NUQARQBMAEUAVABFAF8ATABPAEcAXwBPAEwARABFAFIAXwBUAEgAQQBOAF8ARABBAFkAUwAAM1UA
UwBFAF8AQwBVAFMAVABPAE0AXwBFAE0AQQBJAEwAXwBUAEUATQBQAEwAQQBUAEUAAD1DAFUAUwBU
AE8ATQBfAEUATQBBAEkATABfAFQARQBNAFAATABBAFQARQBfAEYASQBMAEUAUABBAFQASAAAR0MA
OgBcAFMAUwBJAFMAXABDAG8AbgBmAGkAZwBcAE4ARgBfAEUAbQBhAGkAbABUAGUAbQBwAGwAYQB0
AGUALgBoAHQAbQAATVUAcwBlAHIAOgA6AHYAYQByAFMAUwBJAFMATwBwAHMATgBGAF8ATwB0AGgA
ZQByAEMAbwBuAGYAaQBnAFMAZQB0AHQAaQBuAGcAcwAAD0QARQBMAEEAWQBFAEQAAAlIAFQATQBM
AAADOwAAAz0AAF1CAEkAIAB4AFAAcgBlAHMAcwAgAE4AbwB0AGkAZgBpAGMAYQB0AGkAbwBuACAA
RgByAGEAbQBlAHcAbwByAGsAIABFAHYAZQBuAHQAIABIAGEAbgBkAGwAZQByAABPVQBzAGUAcgA6
ADoAdgBhAHIAUwBTAEkAUwBPAHAAcwBOAEYAXwBOAG8AdABpAGYAaQBjAGEAdABpAG8AbgBfAEMA
bwB1AG4AdABlAHIAADFVAHMAZQByADoAOgB2AGEAcgBTAFMASQBTAE8AcABzAE4ARgBfAEMASABF
AEMASwAAAAAAc4CbR4xV9k2jPWn37yBTyQAIt3pcVhk04IkIsD9ffxHVCjoDIAABAwAAAQQAABIM
BwYVEhgBEgwEAAASCAcGFRIYARIIBAAAEhEHBhUSGAESEQQAABIUBwYVEhgBEhQECAASDAQIABII
BAgAEhEECAASFAQgAQIcAyAACAQgABIVAyAADgIeAAcQAQEeAB4ABzABAQEQHgACEwAEIAATAAcG
FRIZARMABCgAEwADBhIdAwYSIQQAABIdBAAAEiEFAAEBEiEECAASHQQIABIhAwYSIAIGHAQAABIg
BAgAEiAIiYRdzYCAzJECBg44VQBzAGUAcgA6ADoAdgBhAHIAUwBTAEkAUwBPAHAAcwBOAEYAXwBB
AGwAZQByAHQATABpAHMAdABAVQBzAGUAcgA6ADoAdgBhAHIAUwBTAEkAUwBPAHAAcwBOAEYAXwBB
AGwAZQByAHQATABpAHMAdABfAEEAbABsAE5VAHMAZQByADoAOgB2AGEAcgBTAFMASQBTAE8AcABz
AE4ARgBfAE4AbwB0AGkAZgBpAGMAYQB0AGkAbwBuAF8AQwBvAHUAbgB0AGUAcgBWQgBJACAAeABQ
AHIAZQBzAHMAIABOAG8AdABpAGYAaQBjAGEAdABpAG8AbgAgAEYAcgBhAG0AZQB3AG8AcgBrACAA
UwBlAG4AZAAgAEEAbABlAHIAdAAJIAUBDggODhEsByADAQ4cEi0GIAIcDhItBCAAEi0FIAEBEi0F
IAIBDhwEIAEcDgIGCAMGESgEAAAAAAQBAAAAAwYRLAQCAAAABAMAAAAEBAAAAAMGETULIAYBDggO
DhEsETUEIAEBCAQgAQEOBCAAETUFIAEBETUEIAARLAUgAQERLAMoAAgDKAAOBCgAETUEKAARLAUg
AQERPQgBAAEAAAAAAAUgAgEODhgBAApNeVRlbXBsYXRlCDEwLjAuMC4wAAAGFRIYARIMBhUSGAES
CAYVEhgBEhEGFRIYARIUBAcBEgwEBwESCAQHARIRBAcBEhQQAQALTXkuQ29tcHV0ZXIAAAwBAAdN
eS5Vc2VyAAATAQAOTXkuQXBwbGljYXRpb24AABMBAA5NeS5XZWJTZXJ2aWNlcwAABAABHBwDBwEC
AwcBCAYAARIVEVkEBwESFQMHAQ4FEAEAHgAECgEeAAQHAR4AByAEAQ4ODg5hAQA0U3lzdGVtLldl
Yi5TZXJ2aWNlcy5Qcm90b2NvbHMuU29hcEh0dHBDbGllbnRQcm90b2NvbBJDcmVhdGVfX0luc3Rh
bmNlX18TRGlzcG9zZV9fSW5zdGFuY2VfXwAAAAYVEhgBEwAGFRIZARMABAoBEwAFIAEBEwAIBwMT
ABMAEwAEIAEBAgUBAAAAAAQgABJpBiACAQ4SaQYHAhIdEh0EBwESIQgBAAIAAAAAAAQAAQEcBAcB
EiAEIAASdQQgARwcBgADDg4ODgQgAQgOBSAAEoCBBCABAg4FAAEBEnkGAAMcAhwcBAABAg4GAAIC
DhAIDwcKESwIDg4CEi0ODg4SeQggAgESFR0SFQcgAgESgKkcBSAAEoCRBSAAEoCtBSAAEoClAyAA
HAUgAg4ODgYgARKAkQ4DIAACBQACDg4OIQcOEjASgJESgJEODg4OEoCVEoCZEoCdEoChDh0SFRKA
pQUgAQ4SIQUgAgEcHAYAAwgODgIEBwIcDgQgAB0DBiABHQ4dAwogAx0OHQMIEYDJBAABCA4FIAAS
gNEIIAUCCA4ODggVBw0SLQ4cEi0dDh0ODg4OEnkIHQ4OByABARASgNUGIAESgNkcBCABARwKBwQC
EoDVEnkSeQwHBgIcHBKA1RJ5EnkEAAARNQQHARE1BAcBESwIAQAIAAAAAAAeAQABAFQCFldyYXBO
b25FeGNlcHRpb25UaHJvd3MBRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFt
ZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0DAEABzEuMC4wLjAAACkBACQwYjczNzgw
OC03ZGZjLTRiNDAtYjA2OC0zZGMyM2ZkYzY1OWUAAAUBAAEAAB8BABpDb3B5cmlnaHQgQCBNaWNy
b3NvZnQgMjAxNwAAKAEAI3N0XzJlZjVkZGViMDBiMzRlYTc5ODgyMGNkNDhhMzE4ZGM4AAAOAQAJ
TWljcm9zb2Z0AAAAOF8AAAAAAAAAAAAATl8AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBfAAAA
AAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACAAAAAAAAAAAAA
AAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAAMgDAAAAAAAAAAAAAMgD
NAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAAAQAAAAAAAAAB
AAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBpAGwAZQBJAG4A
ZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsAQoAwAAAQBTAHQAcgBp
AG4AZwBGAGkAbABlAEkAbgBmAG8AAAAEAwAAAQAwADAAMAAwADAANABiADAAAAA0AAoAAQBDAG8A
bQBwAGEAbgB5AE4AYQBtAGUAAAAAAE0AaQBjAHIAbwBzAG8AZgB0AAAAcAAkAAEARgBpAGwAZQBE
AGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAHMAdABfADIAZQBmADUAZABkAGUAYgAwADAAYgAzADQA
ZQBhADcAOQA4ADgAMgAwAGMAZAA0ADgAYQAzADEAOABkAGMAOAAAADAACAABAEYAaQBsAGUAVgBl
AHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEA
bQBlAAAAcwB0AF8AMgBlAGYANQBkAGQAZQBiADAAMABiADMANABlAGEANwA5ADgAOAAyADAAYwBk
ADQAOABhADMAMQA4AGQAYwA4AC4AZABsAGwAAABcABsAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkA
ZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABNAGkAYwByAG8AcwBvAGYAdAAgADIAMAAx
ADcAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABzAHQAXwAyAGUA
ZgA1AGQAZABlAGIAMAAwAGIAMwA0AGUAYQA3ADkAOAA4ADIAMABjAGQANAA4AGEAMwAxADgAZABj
ADgALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAcwB0AF8AMgBlAGYA
NQBkAGQAZQBiADAAMABiADMANABlAGEANwA5ADgAOAAyADAAYwBkADQAOABhADMAMQA4AGQAYwA4
AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgA
CAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAwAAABgPwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnError].PrecedenceConstraints[{855A6AE4-9842-4314-82FF-9D87D1035E36\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{855A6AE4-9842-4314-82FF-9D87D1035E36}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceID]==@[System::PackageID] &amp;&amp; @[System::SourceName]==@[System::PackageName] &amp;&amp; SUBSTRING(@[System::SourceName], 1, 12)!=&quot;SSISOpsEhObj&quot; &amp;&amp; @[User::varSSISOps_DisableBIxAuditing]==false"
          DTS:From="Package.EventHandlers[OnError]\SSISOpsEhObj_OnError_Start"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{855A6AE4-9842-4314-82FF-9D87D1035E36}"
          DTS:To="Package.EventHandlers[OnError]\SSISOpsEhObj_Package_OnError"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnError].PrecedenceConstraints[{9117CECE-E5C5-4D70-981E-4966823A263D\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{9117CECE-E5C5-4D70-981E-4966823A263D}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceID]!=@[System::PackageID] &amp;&amp; @[System::SourceName]!=@[System::PackageName] &amp;&amp; SUBSTRING(@[System::SourceName], 1, 12)!=&quot;SSISOpsEhObj&quot; &amp;&amp; @[User::varSSISOps_DisableBIxAuditing]==false"
          DTS:From="Package.EventHandlers[OnError]\SSISOpsEhObj_OnError_Start"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{9117CECE-E5C5-4D70-981E-4966823A263D}"
          DTS:To="Package.EventHandlers[OnError]\SSISOpsEhObj_Task_OnError"
          DTS:Value="2" />
      </DTS:PrecedenceConstraints>
    </DTS:EventHandler>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnPostExecute]"
      DTS:CreationName="OnPostExecute"
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. SSISOps : DON'T CHANGE PREFIX. "
      DTS:DTSID="{59CDA1BE-DDD3-483F-A8B7-EBE00B20AE52}"
      DTS:EventID="0"
      DTS:EventName="OnPostExecute"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{ECB2895D-96F8-4B24-8A25-89D0905DEA7B}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
          DTS:DTSID="{515C7DE4-3A9E-495F-9256-383963247B66}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOpsNF_CHECK">
          <DTS:VariableValue
            DTS:DataType="8">{BE9EF9F8-824A-4381-AD87-02609D35195A}</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{FD4BB933-2E64-496E-A9C2-5155E9C97BE6}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_ConnectionValues">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. This variable (introduced in v3.2) controls logging of connection strings (in PreExcute and PostExecute Eventhandlers). Set this variable to True or -1 if you want to disable connectionstring logging."
          DTS:DTSID="{A2FB1280-6B17-4AFD-B26C-60EE56F08BA9}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_DisableConnLogging">
          <DTS:VariableValue
            DTS:DataType="11">0</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. This variable (introduced in v3.2) controls logging of datasource information (e.g. SqlCommand, ConnectionName, TableName etc.)"
          DTS:DTSID="{26A80A23-7AD1-43AF-A215-27683E34B522}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_DisableDataSrcInfoLogging">
          <DTS:VariableValue
            DTS:DataType="11">0</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. This variable (introduced in v3.2) controls logging of row count for each attached with source and target information (e.g. SqlCommand, ConnectionName, TableName etc.)"
          DTS:DTSID="{A776D101-EB1E-4AE6-9776-804E3D821D6F}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_DisableDFTRowCountLogging">
          <DTS:VariableValue
            DTS:DataType="11">0</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. This variable (introduced in 3.5.3) controls logging of the initial value of non-sensitive parameters.  Set this variable to True or -1 if you want to disable variable logging."
          DTS:DTSID="{E39797C7-17BD-4852-9339-98D73AF4E4AA}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_DisableParameterInitialValueLogging"
          DTS:ReadOnly="True">
          <DTS:VariableValue
            DTS:DataType="11">0</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. This variable (introduced in v3.2) controls logging of variable values (in PreExcute and PostExecute Eventhandlers). Set this variable to True or -1 if you want to disable variable logging."
          DTS:DTSID="{90E5EABF-45CA-4511-8A3A-6F19BDA5EBE3}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_DisableVarLogging">
          <DTS:VariableValue
            DTS:DataType="11">0</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. Set this variable to list of ConnectionManagers you want to mask ConnectionStrings during logging process inside OnPreExecute Eventhandler. You can use comma separated list you can use wildcard &quot; * &quot; for pattern matching names are case in-sensitive. This option is helpful when you want to hide certain connection strings or file paths from users who are using BIxPress Monitoring Console or Reports. When masking is enabled, &quot;****&quot; is logged in the BIxPress Audit Database rather than actual connectionstring of specified connection managers. Note: You can configure list of variables you want to mask outside the package by configuring &quot;varSSISOps_FilteredConns&quot;. There are 2 places where you have to set this value (OnPreExecute, OnPostExecute)."
          DTS:DTSID="{9DC2E22A-1669-4D69-855D-B23A9C6E5874}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_FilteredConns">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. This variable (introduced in 3.5.3) controls logging of the initial value of non-sensitive parameters.  Set this variable to True or -1 if you want to disable variable logging."
          DTS:DTSID="{6540E0A9-6864-4885-9DF5-D4BBF68F56BB}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_FilteredParams"
          DTS:ReadOnly="True">
          <DTS:VariableValue
            DTS:DataType="8">pFileTypeExtension,pJobInstanceParentID,pLocalRemotePath,pSFTPRemotePath</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. Set this variable to list of variables you want to mask during logging process. You can use comma separated list you can use wildcard &quot; * &quot; for pattern matching names are case insensitive. This option is used to mask variable values during logging process. This option is helpful when you have sensitive data (e.g. varFTP_Password) or variable value is extremly large to display (e.g. varXML_Document). When masking is enabled, &quot;****&quot; is logged in the BIxPress Audit Database rather than actual value of variable. Note: You can configure list of variables you want to mask outside the package by configuring &quot;varSSISOps_FilteredVars&quot;. There are 3 places where you have to set this value (OnPreExecute, OnPostExecute, OnVariableValueChanged)."
          DTS:DTSID="{E72D7F34-76A4-4642-9120-29B1B1C5A343}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_FilteredVars">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. Set this variable to configure how many characters will be logged for each variable. Default variable length for logging is 4000 anything after that will be truncated. -1 = Log full variable value . There are 3 places where you have to set this value (OnPreExecute, OnPostExecute OnVariableValueChanged)."
          DTS:DTSID="{4E6BE1A6-5082-428F-887E-19EDE9BE14FB}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_MaxVarCharsToLog">
          <DTS:VariableValue
            DTS:DataType="3">4000</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{B0A79C66-D636-469B-A172-8EC3DE9A19EC}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_VariableValues">
          <DTS:VariableValue
            DTS:DataType="8">User::vCurJobID,User::vCurJobInstanceID,User::vCurUserID,User::vDeletedRowCount,User::vDeletedTotalRowCount,User::vDeleteFlatFiles,User::vEnvironmentTEXT,User::vFileCreatedDate,User::vFileLastModifiedDate,User::vInsertedTotalRowCount,User::vLastRecordsProcessedDate,User::vLocalRemotePath,User::vPackageStartDate,User::vProcessingFullPathName,User::vRejectedTotalRowCount,User::vUpdatedTotalRowCount</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_LogVariableOrConn"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{66C271C8-48A3-4452-B593-3FC8F188A8FA}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_OnPostExecute_LogVariableOrConn"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[User::varSSISOps_DisableVarLogging]==true &amp;&amp; @[User::varSSISOps_DisableConnLogging]==true</DTS:PropertyExpression>
          <DTS:ObjectData>
            <ScriptProject
              Name="st_66f08c7623af40448492374d94d93044"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="VisualBasic">
              <ProjectItem
                Name="My Project\AssemblyInfo.vb"
                Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("st_66f08c7623af40448492374d94d93044")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("Microsoft")> 
<Assembly: AssemblyProduct("st_66f08c7623af40448492374d94d93044")> 
<Assembly: AssemblyCopyright("Copyright @ Microsoft 2017")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("49e5ba17-6fec-4c30-bf01-e38d43066265")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
              <ProjectItem
                Name="st_66f08c7623af40448492374d94d93044.vbproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{d9167f9e-6604-462f-a79a-2c42851c5830}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>st_66f08c7623af40448492374d94d93044</RootNamespace>
    <AssemblyName>st_66f08c7623af40448492374d94d93044</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />

        <Host Name="ScriptTask" IconIndex="">
        </Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>st_66f08c7623af40448492374d94d93044</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>st_66f08c7623af40448492374d94d93044</msb:DisplayName>
		<msb:ProjectId>{3C676F0B-20A5-412E-B18D-50E446ADB862}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_66f08c7623af40448492374d94d93044.vbproj"/>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.vb"
                Encoding="UTF8"><![CDATA[#Region "Imports"
Imports System
Imports System.Data
Imports System.Math
Imports System.Runtime.InteropServices
Imports Microsoft.SqlServer.Dts.Runtime
#End Region

'ScriptMain is the entry point class of the script.  Do not change the name, attributes,
'or parent of this class.
<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute()> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
    Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

    Public Sub Main()

        ' Begin BI xPress Code

            Dim sb As New System.Text.StringBuilder()
            Dim arrVariables() As String
            Dim bLogVar As Boolean = True
            Dim sVarList As String = Me.ReadVariable("User::varSSISOps_VariableValues").ToString()

            If String.IsNullOrEmpty(sVarList) Then
                bLogVar = False
            ElseIf Convert.ToBoolean(Me.ReadVariable("User::varSSISOps_DisableVarLogging")) Then
                bLogVar = False
            End If

            If bLogVar Then
                Dim filterList As String = Me.ReadVariable("User::varSSISOps_FilteredVars").ToString()
                Dim arrFilter() As String = filterList.Split(","c)
                arrVariables = sVarList.Split(","c)
                Dim oVal as Object

                For Each var As String In arrVariables
                    Try

                        Dim bSkip As Boolean = False
                        Dim comp As String = var

                        For Each f As String In arrFilter
                            comp = comp.ToLower().Trim()
                            f = f.ToLower().Trim()

                            If String.IsNullOrEmpty(f) Then
                                Continue For
                            End If
                            If comp.IndexOf("::") < 0 Then comp = "user::" & comp
                            If f.IndexOf("::") < 0 Then f = "user::" & f
                            If System.Text.RegularExpressions.Regex.IsMatch(comp,f.Replace("*","\w*"),Text.RegularExpressions.RegexOptions.IgnoreCase) Then
                                bSkip = True
                                Exit For
                            End If
                        Next

                        If bSkip Then
                            oVal = "*****"
                        Else
                            oVal = Me.ReadVariable(var)
                            If oVal IsNot Nothing Then
                                Dim s As String = oVal.ToString()
                                Dim iMaxCharsToLog As Integer = Convert.ToInt32(Me.ReadVariable("User::varSSISOps_MaxVarCharsToLog"))
                                Dim isLogFullValue As Boolean = iMaxCharsToLog < 1

                                If Not isLogFullValue AndAlso s.Length > iMaxCharsToLog Then
                                    oVal = s.Substring(0, iMaxCharsToLog) & " ...<VALUE TRUNCATED - Change value of [varSSISOps_MaxVarCharsToLog] to -1 from config file if you want to log full value (Not recommended for performance reason)>"
                                End If
                            End If
                        End If

                        If oVal IsNot Nothing Then
                            sb.AppendLine(var.PadRight(30, "."c) & "... " & oVal.ToString())
                        Else
                            sb.AppendLine(var.PadRight(30, "."c) & "... ")
                        End If
                    Catch ex As Exception
                        sb.AppendLine(var.PadRight(30, "."c) & "... {Error reading variable value: " & ex.Message & "}")
                    End Try
                Next

                Me.WriteVariable("User::varSSISOps_VariableValues", sb.ToString())
            End If

            Dim isDisableLogParameterInitialValues As Boolean

            If Boolean.TryParse(Me.ReadVariable("User::varSSISOps_DisableParameterInitialValueLogging").ToString(), isDisableLogParameterInitialValues) AndAlso Not isDisableLogParameterInitialValues Then
                Dim filteredParams As Object = Me.ReadVariable("User::varSSISOps_FilteredParams")
                Dim parameterList As String = If(filteredParams Is Nothing, String.Empty, filteredParams.ToString())
                Dim parameterNames As String() = parameterList.Split(New Char() {","C}, StringSplitOptions.RemoveEmptyEntries)
                Dim parameterNameValues As New System.Text.StringBuilder()

                For Each parameterName As String In parameterNames
                    Dim fullyQualifiedVariableName As String = If(parameterName.Contains("::"), parameterName, "$Package::" + parameterName)

                    If Not Dts.VariableDispenser.Contains(fullyQualifiedVariableName) Then Continue For

                    Dim parameterValue As Object = Me.ReadVariable(fullyQualifiedVariableName)
                    Dim parameterDisplayValue As String = If(parameterValue Is Nothing, String.Empty, parameterValue.ToString())

                    parameterNameValues.AppendFormat("{0}... {1}{2}", fullyQualifiedVariableName.TrimStart("$"C).PadRight(30, "."C), parameterDisplayValue, Environment.NewLine)
                Next

                If parameterNameValues.Length > 0 Then
                    Dim variableValuesValue As Object = Me.ReadVariable("varSSISOps_VariableValues")
                    Dim variableValuesDisplayValue As String = If(variableValuesValue Is Nothing, String.Empty, variableValuesValue.ToString())

                    Me.WriteVariable("User::varSSISOps_VariableValues", variableValuesDisplayValue + parameterNameValues.ToString())
                End If
            End If

            Dim sb1 As New System.Text.StringBuilder()
            Dim bLogConn As Boolean = Not Convert.ToBoolean(Me.ReadVariable("User::varSSISOps_DisableConnLogging")) 

            If bLogConn Then
                Dim filterList As String = Me.ReadVariable("User::varSSISOps_FilteredConns").ToString()
                Dim arrFilter() As String = filterList.Split(","c)
                Dim sDataSource As String
                For Each conn As ConnectionManager In Dts.Connections
                    Try

                        Dim bSkip As Boolean = False
                        Dim comp As String = conn.Name

                        For Each f As String In arrFilter
                            comp = comp.ToLower().Trim()
                            f = f.ToLower().Trim()

                            If String.IsNullOrEmpty(f) Then
                                Continue For
                            End If
                            If System.Text.RegularExpressions.Regex.IsMatch(comp,f.Replace("*","\w*"),Text.RegularExpressions.RegexOptions.IgnoreCase) Then
                                bSkip = True
                                Exit For
                            End If
                        Next

                        Dim sConnStr As String = conn.ConnectionString.ToString() 

                        If bSkip Then
                            sConnStr = "*****"
                            sDataSource = "*****"
                        Else
                            sDataSource = ""

                            Try
                                If conn.Properties.Contains("ServerName") Then
                                    sDataSource = conn.Properties("ServerName").GetValue(conn).ToString()
                                ElseIf conn.Properties.Contains("SqlServerName") Then
                                    sDataSource = conn.Properties("SqlServerName").GetValue(conn).ToString()
                                ElseIf conn.Properties.Contains("Host") Then
                                    sDataSource = conn.Properties("Host").GetValue(conn).ToString()
                                ElseIf conn.Properties.Contains("ServerHost") Then
                                    sDataSource = conn.Properties("ServerHost").GetValue(conn).ToString()
                                ElseIf conn.Properties.Contains("Server") Then
                                    sDataSource = conn.Properties("Server").GetValue(conn).ToString()
                                ElseIf conn.CreationName = "FLATFILE" OrElse (conn.CreationName = "FILE" AndAlso conn.ConnectionString.IndexOf(".") > 0) Then
                                    sDataSource = System.IO.Path.GetFileName(conn.ConnectionString)
                                End If
                            Catch ex As Exception
                            End Try
                        End If 

                        sb1.AppendLine(conn.Name.PadRight(30, "."c) & "... " & conn.CreationName.PadRight(10, " "c) & "  " & vbTab & sDataSource.PadRight(15, " "c) & "  " & vbTab & sConnStr)
                    Catch ex As Exception
                        sb1.AppendLine(conn.Name.PadRight(30, "."c) & "... {Error reading connection: " & ex.Message & "}")
                    End Try
                Next

                Me.WriteVariable("User::varSSISOps_ConnectionValues", sb1.ToString())
            End If


        ' End BI xPress Code

        Dts.TaskResult = ScriptResults.Success
    End Sub

#Region "ScriptResults declaration"

    Enum ScriptResults
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    End Enum

# End Region

    Private Sub WriteVariable(ByVal variableName As String, ByVal variableValue As Object)
        Dim vars As Variables = Nothing
        Dim isUnlocked As Boolean = False

        Try
            Dts.VariableDispenser.LockForWrite(variableName)
            Dts.VariableDispenser.GetVariables(vars)

            Try
                vars(variableName).Value = variableValue
            Catch ex As Exception
                Throw
            Finally
                If vars IsNot Nothing Then
                    vars.Unlock()
                    isUnlocked = True
                End If
            End Try
        Catch ex As Exception
            Dts.VariableDispenser.Reset()

            Throw
        Finally
            If vars IsNot Nothing AndAlso Not isUnlocked Then
                vars.Unlock()
            End If
        End Try
    End Sub

    Private Function ReadVariable(ByVal variableName As String) As Object
        Dim vars As Variables = Nothing
        Dim isUnlocked As Boolean = False
        Dim result As Object

        Try
            Dts.VariableDispenser.LockForRead(variableName)
            Dts.VariableDispenser.GetVariables(vars)

            Try
                result = vars(variableName).Value
            Catch ex As Exception
                Throw
            Finally
                If vars IsNot Nothing Then
                    vars.Unlock()
                    isUnlocked = True
                End If
            End Try
        Catch ex As Exception
            Dts.VariableDispenser.Reset()

            Throw
        Finally
            If vars IsNot Nothing AndAlso Not isUnlocked Then
                vars.Unlock()
            End If
        End Try

        Return result
    End Function

End Class]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
              <BinaryItem
                Name="st_66f08c7623af40448492374d94d93044.dll">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
FQAAChIDKDoAAAo5RwEAAAk6QQEAAAJybgMAcG8bAAAGKBEAAAoTEhESLAkREm8VAAAKKwV+OwAA
ChMTERMXjSEAAAETJhEmFh8snREmF288AAAKExRzJQAAChMVERQTLBYTKziaAAAAESwRK5oTGBEY
cvUAAHBvPQAACi0Ocq4DAHARGCgsAAAKKwIRGBMWAm8+AAAKbz8AAAoRFm9AAAAKLQIrVwIRFm8b
AAAGKBEAAAoTGREZLAkRGW8VAAAKKwV+OwAAChMXERVyxAMAcBEWF40hAAABEyYRJhYfJJ0RJm9B
AAAKHx4fLm8yAAAKERcoQgAACm9DAAAKJhErF9YTKxErESyOtz9b////ERVvRAAAChYxPwJy4AMA
cG8bAAAGKBEAAAoTGxEbLAkRG28VAAAKKwV+OwAAChMaAnIzAABwERoRFW85AAAKKCwAAApvGgAA
BnMlAAAKEwUCchQEAHBvGwAABigRAAAKKCcAAAoW/gELBzkhAwAAAnJcBABwbxsAAAZvFQAAChMd
ER0XjSEAAAETJhEmFh8snREmbygAAAoTHAJvPgAACm9FAAAKb0YAAAoTLTjBAgAAES1vRwAAChMf
FhMgER9vSAAAChMhERwTLxYTLitUES8RLpoTIxEhbykAAApvKgAAChMhESNvKQAACm8qAAAKEyMR
IygmAAAKLAIrIBEhESNyCQEAcHINAQBwby0AAAoXKC4AAAosBRcTICsOES4X1hMuES4RL463MqQR
H29JAAAKb0oAAAoTIhEgLBNyFQEAcBMichUBAHATHjh0AQAAcpoEAHATHhEfb0sAAApynAQAcG9M
AAAKLCQRH29LAAAKcpwEAHBvTQAAChEfb04AAApvFQAAChMe3TYBAAARH29LAAAKcrIEAHBvTAAA
CiwkER9vSwAACnKyBABwb00AAAoRH29OAAAKbxUAAAoTHt3/AAAAER9vSwAACnLOBABwb0wAAAos
JBEfb0sAAApyzgQAcG9NAAAKER9vTgAACm8VAAAKEx7dyAAAABEfb0sAAApy2AQAcG9MAAAKLCQR
H29LAAAKctgEAHBvTQAAChEfb04AAApvFQAAChMe3ZEAAAARH29LAAAKcu4EAHBvTAAACiwhER9v
SwAACnLuBABwb00AAAoRH29OAAAKbxUAAAoTHt5dER9vTwAACnL8BABwFihQAAAKFi4pER9vTwAA
CnIOBQBwFihQAAAKFjMiER9vSQAACnIYBQBwbysAAAoWMQ4RH29JAAAKKFEAAAoTHt4PJSg1AAAK
EyQoOAAACt4AEQUdjR8AAAETMBEwFhEfb0gAAAofHh8ubzIAAAqiETAXcq4CAHCiETAYER9vTwAA
Ch8KHyBvMgAACqIRMBlyHAUAcKIRMBoRHh8PHyBvMgAACqIRMBtyHAUAcKIRMBwRIqIRMChSAAAK
bzQAAAom3j0lKDUAAAoTJREFER9vSAAACh8eHy5vMgAACnIkBQBwESVvNgAACnIAAwBwKDcAAApv
NAAACiYoOAAACt4AES1vUwAACjoz/f//AnJkBQBwEQVvOQAACm8aAAAGAm8+AAAKFm9UAAAKKgBB
TAAAAAAAAJwAAABhAQAA/QEAADgAAAAcAAABAAAAAMkEAABeAQAAJwYAAA8AAAAcAAABAAAAACwE
AAB7AgAApwYAAD0AAAAcAAABGzACAHkAAAAQAAARFAsWCgJvPgAACm8/AAAKA29VAAAKAm8+AAAK
bz8AAAoSAW9WAAAKBwNvVwAACgQoEQAACm9YAAAK3j0lKDUAAAoM/hoHLAgHb1kAAAoXCtzeJiUo
NQAACg0Cbz4AAApvPwAACm9aAAAK/hoHLAkGLQYHb1kAAArcKgAAAAE0AAAAACcAFDsACRwAAAEC
ACcAHUQADAAAAAAAAAQATlIAGRwAAAECAAQAZ2sADQAAAAAbMAIAfAAAABEAABEUDRYKAm8+AAAK
bz8AAAoDb1sAAAoCbz4AAApvPwAAChIDb1YAAAoJA29XAAAKb1wAAAooEQAACgzePyUoNQAAChME
/hoJLAgJb1kAAAoXCtzeJyUoNQAAChMFAm8+AAAKbz8AAApvWgAACv4aCSwJBi0GCW9ZAAAK3Agq
ATQAAAAAJwAUOwAKHAAAAQIAJwAeRQAMAAAAAAAABABPUwAaHAAAAQIABABpbQANAAAAALQAAADO
yu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZl
cnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5
MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFE
UEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAACECQAAI34AAPAJAABA
DAAAI1N0cmluZ3MAAAAAMBYAAKgFAAAjVVMA2BsAABAAAAAjR1VJRAAAAOgbAADUBAAAI0Jsb2IA
AAAAAAAAAgAAAVcdogkJDwAAAPolMwAWAAABAAAAPgAAAAoAAAAMAAAAGwAAAAcAAABpAAAAAgAA
ADYAAAARAAAABAAAAAgAAAAJAAAACQAAAAEAAAAFAAAAAQAAAAMAAAADAAAAAgAAAAAAFwwBAAAA
AAAKAEsBIQEKAH8BYQEGAI8BiAEKAOcBIQEGAGUCiAEKAOcCvQIGAB0DDAMGAEoDNQMOALEDnAMS
ADAEBwQGAIcEiAEOALoEpAQOANMEpAQOAAAF6AQGACoFFwUKAGkFQgUKAIEFEwAOALYFmQUGAOsF
ywUGAAkGiAEGAC0GiAEKAEYGEwAGAIoGawYGALAGngYGANcGxgYGAOoGFwUGABMHBwcGACEHiAEW
AGoHSgcWAHwHSgcGAJEHiAEGAKYHiAEGALgHiAEOAAYI5wcOAAwI5wcKAFIIQgUGAIwIiAEGAKMI
iAESAL8IBwQWANkISgcGAAsJiAEWADAJSgcWAIQJSgcWAKEJSgcKANAJQgUGAPIJ6AkWAAMKSgcW
ACkKSgcWAE0KSgcGAG8KiAESAIUKBwQGAN8KywUGAP8KywUGADcLHQsGAFALngYGAG0LawYGAHsL
ngYGAJYLngYGALELngYGAMoLngYGAOMLngYGAAAMngYAAAAAAQAAAAAAAQABAAAAAAApADcABQAB
AAEAAAAAAF4ANwAJAAEAAgAAARAAaQA3AA0AAQADAAUBAABzAAAADQAFAAgABQEAAIEAAAANAAUA
DwAAAAAAnACoAA0ABgARAAABEADZAOQAJQAIABUAAQAAAAgB5AApAAoAGAACAQAAEwEAAC0ACgAc
ADEAqgEgADEA0wEtADEA9QE6ADEAGgJHACEA9gKQABEALQOdABEAVgOhABEAyQO/ABEA0QPDAAYG
jATkAFaAlATnAFaAnATnAFAgAAAAAAYYWwETAAEAWCAAAAAABhhbARMAAQBgIAAAAAARGJYBFwAB
AIwgAAAAABMInQEbAAEApCAAAAAAEwjDASgAAQC8IAAAAAATCOwBNQABANQgAAAAABMICgJCAAEA
7CAAAAAARgJQAmMAAQAIIQAAAABGAlkCaAACABwhAAAAAIMAagJsAAIANCEAAAAARgJyAnEAAgBI
IQAAAAARAHsCeAACAGQhAAAAAAEAmQKAAAMAgCEAAAAABhhbARMABACIIQAAAAADCK0CiwAEALwh
AAAAAAYYWwETAAQA0CEAAAAAAxhbARMABADYIQAAAAAWCGIDpQAEABQiAAAAABYIdgOqAAQAKCIA
AAAAFgiCA68ABAAwIgAAAAARGJYBFwAFAEQiAAAAAAYYWwETAAUATCIAAAAAFgjeA8YABQCoIgAA
AAAGGFsBEwAFALAiAAAAAAYATAQTAAUAGCoAAAAAAQBRBNkABQDUKgAAAAABAHoE3wAHAAAAAQBX
AgAAAQCQAgAAAQCQAgAAAQCOAwAAAQBfBAAAAgBsBAAAAQBfBAkAWwETAGEAWwH1AHEAWwEEAREA
WwETAHkAWwETACQAWwETACwAWwETADQAWwETADwAWwETACQArQKLACwArQKLADQArQKLADwArQKL
AIEAWwETAIkAWwETAJEAWwFTAZkA+gWeARkAUAJjABkAWQJoACkAGwarARkAcgJxAKkANwa7ARkA
WwETALEAWwHLAUQA9gKQAEwA3gOLAEwAYQZIAkwAWwETALkAWwFXAikAuQZiAjkAWwFnAkkAWwET
AMkA3waDAskA5QaDAtEAWwETAFEAWwETANkAWwETAPkAmAeNAgEBrgeSAvkAvQeXAvkAwwdxAPkA
ywdxAPkA0AeeAvkA2AejAvkA3wepAhEBGQivAgEBIQi4AvkAKQhoAPkANAi9AvkAPgjDAvkA2AfJ
AtkARwjQAiEBXgjWAuEAbghxAPkA2AfcAiEBeggXANkAcgJxACkBlAjkAvkAnQjrAvkAvQfuAvkA
tgj4AlEA0Qj9AjkB6wgDA0EBtgj4AvkAAQkJA0kBFwkPA9kAIwkTA9kAKQhoADkBPAkcA1EBTAki
A/EAWgknA+kAZglxAOkAbwlxAPkAcgJxAOkAkgksA1kBtghjAFkBrQkyA2EBtgk5A+kAvwlxAGkB
2gk+A3EB9wlFA/kA2AdKA3kBEQpQAzkBGgpUA0EBMwpTAUEBQAqfA4EBrQmnA4kBYQauA4EBVgoT
AEEBXQoTAEEBYwpTAYkB3gO+A5EBWwFXApkBWwETAKEBWwFUA6kBWwETALEBWwFTAbkBWwFTAcEB
WwFTAckBWwFTAdEBWwFTAdkBWwFTAeEBWwFTAekBWwFTAfEBWwFTAQgALADrAAgAMADwACkAgwBY
AS4AMwOcBC4ASwOcBC4AKwN8BC4AAwPYAy4ACwP3Ay4AIwNcAi4AQwNcAi4A+wLPAy4AOwPFBC4A
EwM/BC4AGwNMBC4A6wBcAi4A6wJ2BEAAKwDwAEAAEwD7AEMAEwD7AEMAGwAKAUkAgwB2AWMAGwAK
AWMAEwD7AGkAgwBpAYAAKwDwAIMAcwDwAIMAGwAKAYMAewDwAIkAgwCKAaAAKwDwAKMAwwDTAaMA
EwD7AMAAKwDwAMMAEwD7AMMA6wBcAskAEwB6AuAAKwDwAOkAEwB6AgABKwDwAAABEwD7AAkBGwHw
ACABKwDwACABEwD7ACMB8wLwACMB6wJcAkABKwDwAEABEwD7AGABEwD7AGABKwDwAIABKwDwAKAB
KwDwAMABKwDwAMABEwD7AOABKwDwAAACEwD7AAACKwDwAD8BRAFJAU4BowGnAbIBtwHGAcYBTgJu
AnUCiAJZA7MDwgMEAAEABgAFAAcABgAIAAgAAAB/AU8AAAA4AlQAAADnAVkAAABEAl4AAAAAA5gA
AAAdA7UAAACUA7oAAACOA8sAAgAEAAMAAgAFAAUAAgAGAAcAAgAHAAkAAgAPAAsAAgASAA0AAgAT
AA8AAQAUAA8AAgAXABEAdQB1AIgAIwEqATEBOAE1AjwCBIAAAAEAAAAAAAAAAAAAAAAA5AAAAAQA
AAAAAAAAAAAAAAEACgAAAAAACgAAAAAAAAAAAAAACgATAAAAAAAEAAAAAAAAAAAAAAABAIgBAAAA
AAsAAAAAAAAAAAAAANAA6AMAAAAACwAAAAAAAAAAAAAA0AArBwAAAAAAAAAAAQAAAKcKAAAFAAQA
BgAEAAoACQAAABAADACOAgAAEAAZAI4CAAAAABsAjgItAMEBLQBDAgAAAAAAPE1vZHVsZT4AbXNj
b3JsaWIATWljcm9zb2Z0LlZpc3VhbEJhc2ljAE15QXBwbGljYXRpb24Ac3RfNjZmMDhjNzYyM2Fm
NDA0NDg0OTIzNzRkOTRkOTMwNDQuTXkATXlDb21wdXRlcgBNeVByb2plY3QATXlXZWJTZXJ2aWNl
cwBUaHJlYWRTYWZlT2JqZWN0UHJvdmlkZXJgMQBNeVJlc291cmNlcwBzdF82NmYwOGM3NjIzYWY0
MDQ0ODQ5MjM3NGQ5NGQ5MzA0NC5NeS5SZXNvdXJjZXMATXlTZXR0aW5ncwBzdF82NmYwOGM3NjIz
YWY0MDQ0ODQ5MjM3NGQ5NGQ5MzA0NABTY3JpcHRNYWluAFNjcmlwdFJlc3VsdHMATWljcm9zb2Z0
LlZpc3VhbEJhc2ljLkFwcGxpY2F0aW9uU2VydmljZXMAQXBwbGljYXRpb25CYXNlAC5jdG9yAE1p
Y3Jvc29mdC5WaXN1YWxCYXNpYy5EZXZpY2VzAENvbXB1dGVyAFN5c3RlbQBPYmplY3QALmNjdG9y
AGdldF9Db21wdXRlcgBtX0NvbXB1dGVyT2JqZWN0UHJvdmlkZXIAZ2V0X0FwcGxpY2F0aW9uAG1f
QXBwT2JqZWN0UHJvdmlkZXIAVXNlcgBnZXRfVXNlcgBtX1VzZXJPYmplY3RQcm92aWRlcgBnZXRf
V2ViU2VydmljZXMAbV9NeVdlYlNlcnZpY2VzT2JqZWN0UHJvdmlkZXIAQXBwbGljYXRpb24AV2Vi
U2VydmljZXMARXF1YWxzAG8AR2V0SGFzaENvZGUAVHlwZQBHZXRUeXBlAFRvU3RyaW5nAENyZWF0
ZV9fSW5zdGFuY2VfXwBUAGluc3RhbmNlAERpc3Bvc2VfX0luc3RhbmNlX18AZ2V0X0dldEluc3Rh
bmNlAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5NeVNlcnZpY2VzLkludGVybmFsAENvbnRleHRWYWx1
ZWAxAG1fQ29udGV4dABHZXRJbnN0YW5jZQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdl
cgBfcmVzTWdyAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAF9yZXNDdWx0dXJlAGdl
dF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAVmFsdWUAQ3VsdHVyZQBT
eXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBtX1ZhbHVlAG1fU3lu
Y09iamVjdABnZXRfVmFsdWUATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxC
YXNlAE1haW4AV3JpdGVWYXJpYWJsZQB2YXJpYWJsZU5hbWUAdmFyaWFibGVWYWx1ZQBSZWFkVmFy
aWFibGUARW51bQB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwA
RWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAFN5c3RlbS5Db2Rl
RG9tLkNvbXBpbGVyAEdlbmVyYXRlZENvZGVBdHRyaWJ1dGUAU3lzdGVtLkRpYWdub3N0aWNzAERl
YnVnZ2VySGlkZGVuQXR0cmlidXRlAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5Db21waWxlclNlcnZp
Y2VzAFN0YW5kYXJkTW9kdWxlQXR0cmlidXRlAEhpZGVNb2R1bGVOYW1lQXR0cmlidXRlAFN5c3Rl
bS5Db21wb25lbnRNb2RlbC5EZXNpZ24ASGVscEtleXdvcmRBdHRyaWJ1dGUAU3lzdGVtLlJ1bnRp
bWUuQ29tcGlsZXJTZXJ2aWNlcwBSdW50aW1lSGVscGVycwBHZXRPYmplY3RWYWx1ZQBSdW50aW1l
VHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBBY3RpdmF0b3IAQ3JlYXRlSW5zdGFuY2UATXlH
cm91cENvbGxlY3Rpb25BdHRyaWJ1dGUAc2V0X1ZhbHVlAFN5c3RlbS5SdW50aW1lLkludGVyb3BT
ZXJ2aWNlcwBDb21WaXNpYmxlQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5AGdl
dF9Bc3NlbWJseQBTeXN0ZW0uVGhyZWFkaW5nAE1vbml0b3IARW50ZXIARXhpdABEZWJ1Z2dlck5v
blVzZXJDb2RlQXR0cmlidXRlAFN5c3RlbS5UZXh0AFN0cmluZ0J1aWxkZXIARXhjZXB0aW9uAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50
aW1lAENvbm5lY3Rpb25NYW5hZ2VyAENvbm5lY3Rpb25FbnVtZXJhdG9yAFN0cmluZwBJc051bGxP
ckVtcHR5AENvbnZlcnQAVG9Cb29sZWFuAENoYXIAU3BsaXQAVG9Mb3dlcgBUcmltAEluZGV4T2YA
Q29uY2F0AFJlcGxhY2UAU3lzdGVtLlRleHQuUmVndWxhckV4cHJlc3Npb25zAFJlZ2V4AFJlZ2V4
T3B0aW9ucwBJc01hdGNoAFRvSW50MzIAZ2V0X0xlbmd0aABTdWJzdHJpbmcAUGFkUmlnaHQAQXBw
ZW5kTGluZQBQcm9qZWN0RGF0YQBTZXRQcm9qZWN0RXJyb3IAZ2V0X01lc3NhZ2UAQ2xlYXJQcm9q
ZWN0RXJyb3IAQm9vbGVhbgBUcnlQYXJzZQBFbXB0eQBTdHJpbmdTcGxpdE9wdGlvbnMAQ29udGFp
bnMAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBWYXJpYWJsZURpc3BlbnNlcgBnZXRfVmFyaWFi
bGVEaXNwZW5zZXIAVHJpbVN0YXJ0AEVudmlyb25tZW50AGdldF9OZXdMaW5lAEFwcGVuZEZvcm1h
dABDb25uZWN0aW9ucwBnZXRfQ29ubmVjdGlvbnMAR2V0RW51bWVyYXRvcgBnZXRfQ3VycmVudABn
ZXRfTmFtZQBnZXRfQ29ubmVjdGlvblN0cmluZwBEdHNQcm9wZXJ0aWVzAGdldF9Qcm9wZXJ0aWVz
AER0c1Byb3BlcnR5AGdldF9JdGVtAEdldFZhbHVlAGdldF9DcmVhdGlvbk5hbWUAT3BlcmF0b3Jz
AENvbXBhcmVTdHJpbmcAU3lzdGVtLklPAFBhdGgAR2V0RmlsZU5hbWUARHRzRW51bWVyYXRvcgBN
b3ZlTmV4dABzZXRfVGFza1Jlc3VsdABWYXJpYWJsZXMATG9ja0ZvcldyaXRlAEdldFZhcmlhYmxl
cwBWYXJpYWJsZQBVbmxvY2sAUmVzZXQATG9ja0ZvclJlYWQAQ0xTQ29tcGxpYW50QXR0cmlidXRl
AFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBzdF82NmYwOGM3NjIzYWY0MDQ0ODQ5
MjM3NGQ5NGQ5MzA0NC5SZXNvdXJjZXMucmVzb3VyY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNB
dHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuVmVy
c2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlGaWxlVmVyc2lvbkF0dHJp
YnV0ZQBHdWlkQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q29w
eXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlB
dHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmli
dXRlAHN0XzY2ZjA4Yzc2MjNhZjQwNDQ4NDkyMzc0ZDk0ZDkzMDQ0LmRsbAAAADFNAHkALgBSAGUA
cwBvAHUAcgBjAGUAcwAuAE0AeQBSAGUAcwBvAHUAcgBjAGUAcwAAP1UAcwBlAHIAOgA6AHYAYQBy
AFMAUwBJAFMATwBwAHMAXwBWAGEAcgBpAGEAYgBsAGUAVgBhAGwAdQBlAHMAAEVVAHMAZQByADoA
OgB2AGEAcgBTAFMASQBTAE8AcABzAF8ARABpAHMAYQBiAGwAZQBWAGEAcgBMAG8AZwBnAGkAbgBn
AAA7VQBzAGUAcgA6ADoAdgBhAHIAUwBTAEkAUwBPAHAAcwBfAEYAaQBsAHQAZQByAGUAZABWAGEA
cgBzAAAFOgA6AAANdQBzAGUAcgA6ADoAAAMqAAAHXAB3ACoAAAsqACoAKgAqACoAAENVAHMAZQBy
ADoAOgB2AGEAcgBTAFMASQBTAE8AcABzAF8ATQBhAHgAVgBhAHIAQwBoAGEAcgBzAFQAbwBMAG8A
ZwAAgUcgAC4ALgAuADwAVgBBAEwAVQBFACAAVABSAFUATgBDAEEAVABFAEQAIAAtACAAQwBoAGEA
bgBnAGUAIAB2AGEAbAB1AGUAIABvAGYAIABbAHYAYQByAFMAUwBJAFMATwBwAHMAXwBNAGEAeABW
AGEAcgBDAGgAYQByAHMAVABvAEwAbwBnAF0AIAB0AG8AIAAtADEAIABmAHIAbwBtACAAYwBvAG4A
ZgBpAGcAIABmAGkAbABlACAAaQBmACAAeQBvAHUAIAB3AGEAbgB0ACAAdABvACAAbABvAGcAIABm
AHUAbABsACAAdgBhAGwAdQBlACAAKABOAG8AdAAgAHIAZQBjAG8AbQBtAGUAbgBkAGUAZAAgAGYA
bwByACAAcABlAHIAZgBvAHIAbQBhAG4AYwBlACAAcgBlAGEAcwBvAG4AKQA+AAEJLgAuAC4AIAAA
Ry4ALgAuACAAewBFAHIAcgBvAHIAIAByAGUAYQBkAGkAbgBnACAAdgBhAHIAaQBhAGIAbABlACAA
dgBhAGwAdQBlADoAIAAAA30AAGlVAHMAZQByADoAOgB2AGEAcgBTAFMASQBTAE8AcABzAF8ARABp
AHMAYQBiAGwAZQBQAGEAcgBhAG0AZQB0AGUAcgBJAG4AaQB0AGkAYQBsAFYAYQBsAHUAZQBMAG8A
ZwBnAGkAbgBnAAA/VQBzAGUAcgA6ADoAdgBhAHIAUwBTAEkAUwBPAHAAcwBfAEYAaQBsAHQAZQBy
AGUAZABQAGEAcgBhAG0AcwAAFSQAUABhAGMAawBhAGcAZQA6ADoAABt7ADAAfQAuAC4ALgAgAHsA
MQB9AHsAMgB9AAAzdgBhAHIAUwBTAEkAUwBPAHAAcwBfAFYAYQByAGkAYQBiAGwAZQBWAGEAbAB1
AGUAcwAAR1UAcwBlAHIAOgA6AHYAYQByAFMAUwBJAFMATwBwAHMAXwBEAGkAcwBhAGIAbABlAEMA
bwBuAG4ATABvAGcAZwBpAG4AZwAAPVUAcwBlAHIAOgA6AHYAYQByAFMAUwBJAFMATwBwAHMAXwBG
AGkAbAB0AGUAcgBlAGQAQwBvAG4AbgBzAAABABVTAGUAcgB2AGUAcgBOAGEAbQBlAAAbUwBxAGwA
UwBlAHIAdgBlAHIATgBhAG0AZQAACUgAbwBzAHQAABVTAGUAcgB2AGUAcgBIAG8AcwB0AAANUwBl
AHIAdgBlAHIAABFGAEwAQQBUAEYASQBMAEUAAAlGAEkATABFAAADLgAAByAAIAAJAAA/LgAuAC4A
IAB7AEUAcgByAG8AcgAgAHIAZQBhAGQAaQBuAGcAIABjAG8AbgBuAGUAYwB0AGkAbwBuADoAIAAA
Q1UAcwBlAHIAOgA6AHYAYQByAFMAUwBJAFMATwBwAHMAXwBDAG8AbgBuAGUAYwB0AGkAbwBuAFYA
YQBsAHUAZQBzAAB2WV70ITizTKFos8d451qUAAi3elxWGTTgiQiwP19/EdUKOgMgAAEDAAABBAAA
EgwHBhUSGAESDAQAABIIBwYVEhgBEggEAAASEQcGFRIYARIRBAAAEhQHBhUSGAESFAQIABIMBAgA
EggECAASEQQIABIUBCABAhwDIAAIBCAAEhUDIAAOAh4ABxABAR4AHgAHMAEBARAeAAITAAQgABMA
BwYVEhkBEwAEKAATAAMGEh0DBhIhBAAAEh0EAAASIQUAAQESIQQIABIdBAgAEiEDBhIgAgYcBAAA
EiAECAASIAiJhF3NgIDMkQUgAgEOHAQgARwOAgYIAwYRKAQAAAAABAEAAAAFIAEBETUIAQABAAAA
AAAFIAIBDg4YAQAKTXlUZW1wbGF0ZQgxMC4wLjAuMAAABhUSGAESDAYVEhgBEggGFRIYARIRBhUS
GAESFAQHARIMBAcBEggEBwESEQQHARIUBCABAQ4QAQALTXkuQ29tcHV0ZXIAAAwBAAdNeS5Vc2Vy
AAATAQAOTXkuQXBwbGljYXRpb24AABMBAA5NeS5XZWJTZXJ2aWNlcwAABAABHBwDBwECAwcBCAYA
ARIVEVEEBwESFQMHAQ4FEAEAHgAECgEeAAQHAR4AByAEAQ4ODg5hAQA0U3lzdGVtLldlYi5TZXJ2
aWNlcy5Qcm90b2NvbHMuU29hcEh0dHBDbGllbnRQcm90b2NvbBJDcmVhdGVfX0luc3RhbmNlX18T
RGlzcG9zZV9fSW5zdGFuY2VfXwAAAAYVEhgBEwAGFRIZARMABAoBEwAFIAEBEwAIBwMTABMAEwAE
IAEBAgUBAAAAAAQgABJhBiACAQ4SYQYHAhIdEh0EBwESIQgBAAIAAAAAAAQAAQEcBAcBEiAEAAEC
DgQAAQIcBiABHQ4dAwQgAQgOBQACDg4OBSACDg4OCAADAg4OEYCNBAABCBwFIAIOCAgFIAIOCAMG
AAMODg4OBSABEm0OBQABARJxBwAEDg4ODg4GAAICDhACAgYOCSACHQ4dAxGAmQQgAQIOBSAAEoCd
BSAAEoChBSABDh0DAwAADgggBBJtDhwcHAUgABKAqQQgABJ5BCAAEnUFIAASgK0GIAESgLEcBCAB
HBwGAAMIDg4CBAABDg4FAAEOHQ4DIAACBCABAQhFBzEdDgICAhJtEm0OHQ4OHA4CDg4IAg4ScRwO
HQ4SbQ4ODhwOHB0ODg4SdQIODg4ScRJxHQMIHQ4IHQ4IHQ4SeQgdDh0OByABARASgMEGIAESgMUc
BCABARwKBwQCEoDBEnEScQMgABwMBwYCHBwSgMEScRJxCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9u
RXhjZXB0aW9uVGhyb3dzAUcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3
b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNAwBAAcxLjAuMC4wAAApAQAkNDllNWJhMTct
NmZlYy00YzMwLWJmMDEtZTM4ZDQzMDY2MjY1AAAFAQABAAAfAQAaQ29weXJpZ2h0IEAgTWljcm9z
b2Z0IDIwMTcAACgBACNzdF82NmYwOGM3NjIzYWY0MDQ0ODQ5MjM3NGQ5NGQ5MzA0NAAADgEACU1p
Y3Jvc29mdAAALE0AAAAAAAAAAAAATk0AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBNAAAAAAAA
AAAAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACA
AAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAAMgDAAAA
AAAAAAAAAMgDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAA
AQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBp
AGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsAQoAwAA
AQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAEAwAAAQAwADAAMAAwADAANABiADAAAAA0
AAoAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAE0AaQBjAHIAbwBzAG8AZgB0AAAAcAAkAAEA
RgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAHMAdABfADYANgBmADAAOABjADcANgAy
ADMAYQBmADQAMAA0ADQAOAA0ADkAMgAzADcANABkADkANABkADkAMwAwADQANAAAADAACAABAEYA
aQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAHAAKAABAEkAbgB0AGUAcgBu
AGEAbABOAGEAbQBlAAAAcwB0AF8ANgA2AGYAMAA4AGMANwA2ADIAMwBhAGYANAAwADQANAA4ADQA
OQAyADMANwA0AGQAOQA0AGQAOQAzADAANAA0AC4AZABsAGwAAABcABsAAQBMAGUAZwBhAGwAQwBv
AHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABNAGkAYwByAG8AcwBvAGYA
dAAgADIAMAAxADcAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABz
AHQAXwA2ADYAZgAwADgAYwA3ADYAMgAzAGEAZgA0ADAANAA0ADgANAA5ADIAMwA3ADQAZAA5ADQA
ZAA5ADMAMAA0ADQALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAcwB0
AF8ANgA2AGYAMAA4AGMANwA2ADIAMwBhAGYANAAwADQANAA4ADQAOQAyADMANwA0AGQAOQA0AGQA
OQAzADAANAA0AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAw
AC4AMAAAADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAA
LgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAABgPQAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_Start"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{232C931D-5401-4858-BA6D-096FC393BD4A}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_OnPostExecute_Start"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[User::varSSISOps_DisableBIxAuditing]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <ScriptProject
              Name="st_f00da15d0c7746548aba3b20d4428868"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="VisualBasic">
              <ProjectItem
                Name="My Project\AssemblyInfo.vb"
                Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("st_f00da15d0c7746548aba3b20d4428868")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("Microsoft")> 
<Assembly: AssemblyProduct("st_f00da15d0c7746548aba3b20d4428868")> 
<Assembly: AssemblyCopyright("Copyright @ Microsoft 2017")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("8e8da96f-f4b8-405c-a23f-4398c4e9e2a6")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.vb"
                Encoding="UTF8"><![CDATA[#Region "Imports"
Imports System
Imports System.Data
Imports System.Math
Imports System.Runtime.InteropServices
Imports Microsoft.SqlServer.Dts.Runtime
#End Region

'ScriptMain is the entry point class of the script.  Do not change the name, attributes,
'or parent of this class.
<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute()> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
    Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

    Public Sub Main()

        ' Begin BI xPress Code



        ' End BI xPress Code

        Dts.TaskResult = ScriptResults.Success
    End Sub

#Region "ScriptResults declaration"

    Enum ScriptResults
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    End Enum

# End Region

    Private Sub WriteVariable(ByVal variableName As String, ByVal variableValue As Object)
        Dim vars As Variables = Nothing
        Dim isUnlocked As Boolean = False

        Try
            Dts.VariableDispenser.LockForWrite(variableName)
            Dts.VariableDispenser.GetVariables(vars)

            Try
                vars(variableName).Value = variableValue
            Catch ex As Exception
                Throw
            Finally
                If vars IsNot Nothing Then
                    vars.Unlock()
                    isUnlocked = True
                End If
            End Try
        Catch ex As Exception
            Dts.VariableDispenser.Reset()

            Throw
        Finally
            If vars IsNot Nothing AndAlso Not isUnlocked Then
                vars.Unlock()
            End If
        End Try
    End Sub

    Private Function ReadVariable(ByVal variableName As String) As Object
        Dim vars As Variables = Nothing
        Dim isUnlocked As Boolean = False
        Dim result As Object

        Try
            Dts.VariableDispenser.LockForRead(variableName)
            Dts.VariableDispenser.GetVariables(vars)

            Try
                result = vars(variableName).Value
            Catch ex As Exception
                Throw
            Finally
                If vars IsNot Nothing Then
                    vars.Unlock()
                    isUnlocked = True
                End If
            End Try
        Catch ex As Exception
            Dts.VariableDispenser.Reset()

            Throw
        Finally
            If vars IsNot Nothing AndAlso Not isUnlocked Then
                vars.Unlock()
            End If
        End Try

        Return result
    End Function

End Class]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>st_f00da15d0c7746548aba3b20d4428868</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>st_f00da15d0c7746548aba3b20d4428868</msb:DisplayName>
		<msb:ProjectId>{9F6BFDFC-72C2-46C8-8835-5BE718CA9659}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_f00da15d0c7746548aba3b20d4428868.vbproj"/>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="st_f00da15d0c7746548aba3b20d4428868.vbproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{6e42e6ea-e306-4f92-9a34-f01be1bd7c80}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>st_f00da15d0c7746548aba3b20d4428868</RootNamespace>
    <AssemblyName>st_f00da15d0c7746548aba3b20d4428868</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />

        <Host Name="ScriptTask" IconIndex="">
        </Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
              <BinaryItem
                Name="st_f00da15d0c7746548aba3b20d4428868.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAJHAxlgAAAAAAAAAAOAAAiELAQsAABwAAAAIAAAAAAAAzjsA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAIAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAHw7AABPAAAAAEAAACAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA1BsAAAAgAAAAHAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAACAEAAAAQAAAAAYAAAAeAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACw
OwAAAAAAAEgAAAACAAUA8CQAAIwWAAABAAAAAAAAADgkAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKAEAAAoqHgIoBAAACiqmcwYAAAqAAQAABHMHAAAKgAIA
AARzCAAACoADAAAEcwkAAAqABAAABCoAABMwAQALAAAAAQAAEX4BAAAEbwoAAAoqABMwAQALAAAA
AgAAEX4CAAAEbwsAAAoqABMwAQALAAAAAwAAEX4DAAAEbwwAAAoqABMwAQALAAAABAAAEX4EAAAE
bw0AAAoqABMwAgANAAAABQAAEQIDKBEAAAooEgAACioAAAATMAEABwAAAAYAABECKBMAAAoqABMw
AQALAAAABwAAEdAFAAACKBQAAAoqABMwAQAHAAAACAAAEQIoFQAACioAEzABABAAAAAJAAARAowB
AAAbLQYoAQAAKyoCKhMwAgAQAAAACgAAEQMSAP4VAgAAGwaBAgAAGyoeAigXAAAKKhMwAgAoAAAA
CwAAEQJ7GQAACm8aAAAKCweMAwAAGy0SKAIAACsLAnsZAAAKB28bAAAKBypKAigXAAAKAnMcAAAK
fRkAAAoqAB4CKBcAAAoqEzACAC0AAAAMAAARfgYAAAQtIHIBAABw0AcAAAIoFAAACm8eAAAKcx8A
AAoLB4AGAAAEfgYAAAQqAAAAEzABAAYAAAANAAARfgcAAAQqAAAeAoAHAAAEKkJzFwAACigRAAAK
gAkAAAQqAAAAHgIoIAAACiobMAEAPwAAAA4AABF+CAAABC0yfgkAAAQoEQAACighAAAKfggAAAQt
HHMWAAAGgAgAAATeEH4JAAAEKBEAAAooIgAACtx+CAAABCoAARAAAAIAHQAMKQAQAAAAAB4CKCQA
AAoqNgJvJQAAChZvJgAACioAABswAgB5AAAADwAAERQLFgoCbyUAAApvJwAACgNvKAAACgJvJQAA
Cm8nAAAKEgFvKQAACgcDbyoAAAoEKBEAAApvKwAACt49JSgsAAAKDP4aBywIB28uAAAKFwrc3iYl
KCwAAAoNAm8lAAAKbycAAApvLwAACv4aBywJBi0GB28uAAAK3CoAAAABNAAAAAAnABQ7AAkdAAAB
AgAnAB1EAAwAAAAAAAAEAE5SABkdAAABAgAEAGdrAA0AAAAAGzACAHwAAAAQAAARFA0WCgJvJQAA
Cm8nAAAKA28wAAAKAm8lAAAKbycAAAoSA28pAAAKCQNvKgAACm8xAAAKKBEAAAoM3j8lKCwAAAoT
BP4aCSwICW8uAAAKFwrc3iclKCwAAAoTBQJvJQAACm8nAAAKby8AAAr+GgksCQYtBglvLgAACtwI
KgE0AAAAACcAFDsACh0AAAECACcAHkUADAAAAAAAAAQAT1MAGh0AAAECAAQAaW0ADQAAAAC0AAAA
zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBW
ZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYx
OTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBB
RFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAGAgAACN+AACECAAA
8AkAACNTdHJpbmdzAAAAAHQSAAA0AAAAI1VTAKgSAAAQAAAAI0dVSUQAAAC4EgAA1AMAACNCbG9i
AAAAAAAAAAIAAAFXHaIJCQ8AAAD6JTMAFgAAAQAAAC0AAAAKAAAADAAAABsAAAAHAAAAPgAAAAIA
AAA2AAAAEAAAAAQAAAAIAAAACQAAAAkAAAABAAAABQAAAAEAAAADAAAAAwAAAAIAAAAAAMYJAQAA
AAAACgBLASEBCgB/AWEBBgCPAYgBCgDnASEBBgBlAogBCgDnAr0CBgAdAwwDBgBKAzUDDgCxA5wD
EgAwBAcEBgCHBIgBDgC6BKQEDgDTBKQEDgAABegEBgAqBRcFCgBpBUIFCgCBBRMADgC2BZkFBgDr
BcsFBgAJBogBBgAtBogBCgBGBhMABgCKBmsGBgCwBp4GBgDXBsYGBgDqBhcFEgAHBwcEFgBvB08H
BgB5B4gBFgCDB08HFgDFB08HCgDXB0IFBgAeCIgBEgA0CAcEBgCOCMsFBgCuCMsFBgDmCMwIBgD/
CJ4GBgAcCWsGBgAqCZ4GBgBFCZ4GBgBgCZ4GBgB5CZ4GBgCSCZ4GBgCvCZ4GAAAAAAEAAAAAAAEA
AQAAAAAAKQA3AAUAAQABAAAAAABeADcACQABAAIAAAEQAGkANwANAAEAAwAFAQAAcwAAAA0ABQAI
AAUBAACBAAAADQAFAA8AAAAAAJwAqAANAAYAEQAAARAA2QDkACUACAAVAAEAAAAIAeQAKQAKABgA
AgEAABMBAAAtAAoAHAAxAKoBIAAxANMBLQAxAPUBOgAxABoCRwAhAPYCkAARAC0DnQARAFYDoQAR
AMkDvwARANEDwwAGBowE5ABWgJQE5wBWgJwE5wBQIAAAAAAGGFsBEwABAFggAAAAAAYYWwETAAEA
YCAAAAAAERiWARcAAQCMIAAAAAATCJ0BGwABAKQgAAAAABMIwwEoAAEAvCAAAAAAEwjsATUAAQDU
IAAAAAATCAoCQgABAOwgAAAAAEYCUAJjAAEACCEAAAAARgJZAmgAAgAcIQAAAACDAGoCbAACADQh
AAAAAEYCcgJxAAIASCEAAAAAEQB7AngAAgBkIQAAAAABAJkCgAADAIAhAAAAAAYYWwETAAQAiCEA
AAAAAwitAosABAC8IQAAAAAGGFsBEwAEANAhAAAAAAMYWwETAAQA2CEAAAAAFghiA6UABAAUIgAA
AAAWCHYDqgAEACgiAAAAABYIggOvAAQAMCIAAAAAERiWARcABQBEIgAAAAAGGFsBEwAFAEwiAAAA
ABYI3gPGAAUAqCIAAAAABhhbARMABQCwIgAAAAAGAEwEEwAFAMAiAAAAAAEAUQTZAAUAfCMAAAAA
AQB6BN8ABwAAAAEAVwIAAAEAkAIAAAEAkAIAAAEAjgMAAAEAXwQAAAIAbAQAAAEAXwQJAFsBEwBh
AFsB9QBxAFsBBAERAFsBEwB5AFsBEwAkAFsBEwAsAFsBEwA0AFsBEwA8AFsBEwAkAK0CiwAsAK0C
iwA0AK0CiwA8AK0CiwCBAFsBEwCJAFsBEwCRAFsBUwGZAPoFngEZAFACYwAZAFkCaAApABsGqwEZ
AHICcQCpADcGuwEZAFsBEwCxAFsBywFEAPYCkABMAN4DiwBMAGEGSAJMAFsBEwC5AFsBVwIpALkG
YgI5AFsBZwJJAFsBEwDJAN8GgwLJAOUGgwLRAFsBEwBRAFsBEwBRABkHjQLZACEHkgLZAJUHlwLx
AKsHUwHxALgHnALhAM4HowL5AGEGqQIBAeMHrgIBAfMHFwDhAAUIEwDxAAwIEwDxABIIUwH5AN4D
vgIJAVsBVwIRAVsBEwAZAVsBkgIhAVsBEwApAVsBUwExAVsBUwE5AVsBUwFBAVsBUwFJAVsBUwFR
AVsBUwFZAVsBUwFhAVsBUwFpAVsBUwEIACwA6wAIADAA8AApAIMAWAEuAOMBxAMuANsBmwMuANMB
ewMuAKsB1wIuALMB9gIuAMsBXAIuAPMBmwMuAKMBzgIuAOsBXAIuALsBPgMuAMMBSwMuAOsAXAIu
AJMBdQNAACsA8ABAABMA+wBDABMA+wBDABsACgFJAIMAdgFjABsACgFjABMA+wBpAIMAaQGAACsA
8ACDABsACgGDAHsA8ACDAHMA8ACJAIMAigGgACsA8ACjAMMA0wGjABMA+wDAACsA8ADDABMA+wDD
AOsAXALJABMAegLgACsA8ADpABMAegIAARMA+wAAASsA8AAJARsB8AAgARMA+wAgASsA8AAjAZsB
8AAjAZMBXAJAARMA+wBAASsA8ABgASsA8ABgARMA+wCAASsA8ACgASsA8ADAASsA8ADAARMA+wDg
ASsA8AAAAhMA+wAAAisA8AA/AUQBSQFOAaMBpwGyAbcBxgHGAU4CbgJ1AogCtALCAgQAAQAGAAUA
BwAGAAgACAAAAH8BTwAAADgCVAAAAOcBWQAAAEQCXgAAAAADmAAAAB0DtQAAAJQDugAAAI4DywAC
AAQAAwACAAUABQACAAYABwACAAcACQACAA8ACwACABIADQACABMADwABABQADwACABcAEQB1AHUA
iAAjASoBMQE4ATUCPAIEgAAAAQAAAAAAAAAAAAAAAADkAAAABAAAAAAAAAAAAAAAAQAKAAAAAAAK
AAAAAAAAAAAAAAAKABMAAAAAAAQAAAAAAAAAAAAAAAEAiAEAAAAACwAAAAAAAAAAAAAA0ADoAwAA
AAALAAAAAAAAAAAAAADQADAHAAAAAAAAAAABAAAAVggAAAUABAAGAAQACgAJAAAAEAAMAI4CAAAQ
ABkAjgIAAAAAGwCOAi0AwQEtAEMCAAAAPE1vZHVsZT4AbXNjb3JsaWIATWljcm9zb2Z0LlZpc3Vh
bEJhc2ljAE15QXBwbGljYXRpb24Ac3RfZjAwZGExNWQwYzc3NDY1NDhhYmEzYjIwZDQ0Mjg4Njgu
TXkATXlDb21wdXRlcgBNeVByb2plY3QATXlXZWJTZXJ2aWNlcwBUaHJlYWRTYWZlT2JqZWN0UHJv
dmlkZXJgMQBNeVJlc291cmNlcwBzdF9mMDBkYTE1ZDBjNzc0NjU0OGFiYTNiMjBkNDQyODg2OC5N
eS5SZXNvdXJjZXMATXlTZXR0aW5ncwBzdF9mMDBkYTE1ZDBjNzc0NjU0OGFiYTNiMjBkNDQyODg2
OABTY3JpcHRNYWluAFNjcmlwdFJlc3VsdHMATWljcm9zb2Z0LlZpc3VhbEJhc2ljLkFwcGxpY2F0
aW9uU2VydmljZXMAQXBwbGljYXRpb25CYXNlAC5jdG9yAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5E
ZXZpY2VzAENvbXB1dGVyAFN5c3RlbQBPYmplY3QALmNjdG9yAGdldF9Db21wdXRlcgBtX0NvbXB1
dGVyT2JqZWN0UHJvdmlkZXIAZ2V0X0FwcGxpY2F0aW9uAG1fQXBwT2JqZWN0UHJvdmlkZXIAVXNl
cgBnZXRfVXNlcgBtX1VzZXJPYmplY3RQcm92aWRlcgBnZXRfV2ViU2VydmljZXMAbV9NeVdlYlNl
cnZpY2VzT2JqZWN0UHJvdmlkZXIAQXBwbGljYXRpb24AV2ViU2VydmljZXMARXF1YWxzAG8AR2V0
SGFzaENvZGUAVHlwZQBHZXRUeXBlAFRvU3RyaW5nAENyZWF0ZV9fSW5zdGFuY2VfXwBUAGluc3Rh
bmNlAERpc3Bvc2VfX0luc3RhbmNlX18AZ2V0X0dldEluc3RhbmNlAE1pY3Jvc29mdC5WaXN1YWxC
YXNpYy5NeVNlcnZpY2VzLkludGVybmFsAENvbnRleHRWYWx1ZWAxAG1fQ29udGV4dABHZXRJbnN0
YW5jZQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgBfcmVzTWdyAFN5c3RlbS5HbG9i
YWxpemF0aW9uAEN1bHR1cmVJbmZvAF9yZXNDdWx0dXJlAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0
X0N1bHR1cmUAc2V0X0N1bHR1cmUAVmFsdWUAQ3VsdHVyZQBTeXN0ZW0uQ29uZmlndXJhdGlvbgBB
cHBsaWNhdGlvblNldHRpbmdzQmFzZQBtX1ZhbHVlAG1fU3luY09iamVjdABnZXRfVmFsdWUATWlj
cm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tz
LlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAE1haW4AV3JpdGVWYXJpYWJs
ZQB2YXJpYWJsZU5hbWUAdmFyaWFibGVWYWx1ZQBSZWFkVmFyaWFibGUARW51bQB2YWx1ZV9fAFN1
Y2Nlc3MARmFpbHVyZQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmli
dXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAFN5c3RlbS5Db2RlRG9tLkNvbXBpbGVyAEdlbmVyYXRl
ZENvZGVBdHRyaWJ1dGUAU3lzdGVtLkRpYWdub3N0aWNzAERlYnVnZ2VySGlkZGVuQXR0cmlidXRl
AE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5Db21waWxlclNlcnZpY2VzAFN0YW5kYXJkTW9kdWxlQXR0
cmlidXRlAEhpZGVNb2R1bGVOYW1lQXR0cmlidXRlAFN5c3RlbS5Db21wb25lbnRNb2RlbC5EZXNp
Z24ASGVscEtleXdvcmRBdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBS
dW50aW1lSGVscGVycwBHZXRPYmplY3RWYWx1ZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJv
bUhhbmRsZQBBY3RpdmF0b3IAQ3JlYXRlSW5zdGFuY2UATXlHcm91cENvbGxlY3Rpb25BdHRyaWJ1
dGUAc2V0X1ZhbHVlAFN5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcwBDb21WaXNpYmxlQXR0
cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uVGhy
ZWFkaW5nAE1vbml0b3IARW50ZXIARXhpdABEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFNj
cmlwdE9iamVjdE1vZGVsAGdldF9EdHMAc2V0X1Rhc2tSZXN1bHQATWljcm9zb2Z0LlNxbFNlcnZl
ci5NYW5hZ2VkRFRTAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVmFyaWFibGVzAEV4
Y2VwdGlvbgBWYXJpYWJsZURpc3BlbnNlcgBnZXRfVmFyaWFibGVEaXNwZW5zZXIATG9ja0Zvcldy
aXRlAEdldFZhcmlhYmxlcwBWYXJpYWJsZQBnZXRfSXRlbQBQcm9qZWN0RGF0YQBTZXRQcm9qZWN0
RXJyb3IAQ2xlYXJQcm9qZWN0RXJyb3IAVW5sb2NrAFJlc2V0AExvY2tGb3JSZWFkAENMU0NvbXBs
aWFudEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAc3RfZjAwZGEx
NWQwYzc3NDY1NDhhYmEzYjIwZDQ0Mjg4NjguUmVzb3VyY2VzLnJlc291cmNlcwBDb21waWxhdGlv
blJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFN5c3Rl
bS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Rmls
ZVZlcnNpb25BdHRyaWJ1dGUAR3VpZEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0
ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNz
ZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1i
bHlUaXRsZUF0dHJpYnV0ZQBzdF9mMDBkYTE1ZDBjNzc0NjU0OGFiYTNiMjBkNDQyODg2OC5kbGwA
AAAAMU0AeQAuAFIAZQBzAG8AdQByAGMAZQBzAC4ATQB5AFIAZQBzAG8AdQByAGMAZQBzAAAAGjVN
XYoM70CY7wIkfpeJDwAIt3pcVhk04IkIsD9ffxHVCjoDIAABAwAAAQQAABIMBwYVEhgBEgwEAAAS
CAcGFRIYARIIBAAAEhEHBhUSGAESEQQAABIUBwYVEhgBEhQECAASDAQIABIIBAgAEhEECAASFAQg
AQIcAyAACAQgABIVAyAADgIeAAcQAQEeAB4ABzABAQEQHgACEwAEIAATAAcGFRIZARMABCgAEwAD
BhIdAwYSIQQAABIdBAAAEiEFAAEBEiEECAASHQQIABIhAwYSIAIGHAQAABIgBAgAEiAIiYRdzYCA
zJEFIAIBDhwEIAEcDgIGCAMGESgEAAAAAAQBAAAABSABARE1CAEAAQAAAAAABSACAQ4OGAEACk15
VGVtcGxhdGUIMTAuMC4wLjAAAAYVEhgBEgwGFRIYARIIBhUSGAESEQYVEhgBEhQEBwESDAQHARII
BAcBEhEEBwESFAQgAQEOEAEAC015LkNvbXB1dGVyAAAMAQAHTXkuVXNlcgAAEwEADk15LkFwcGxp
Y2F0aW9uAAATAQAOTXkuV2ViU2VydmljZXMAAAQAARwcAwcBAgMHAQgGAAESFRFRBAcBEhUDBwEO
BRABAB4ABAoBHgAEBwEeAAcgBAEODg4OYQEANFN5c3RlbS5XZWIuU2VydmljZXMuUHJvdG9jb2xz
LlNvYXBIdHRwQ2xpZW50UHJvdG9jb2wSQ3JlYXRlX19JbnN0YW5jZV9fE0Rpc3Bvc2VfX0luc3Rh
bmNlX18AAAAGFRIYARMABhUSGQETAAQKARMABSABARMACAcDEwATABMABCABAQIFAQAAAAAEIAAS
YQYgAgEOEmEGBwISHRIdBAcBEiEIAQACAAAAAAAEAAEBHAQHARIgBCAAEm0EIAEBCAQgABJ5BiAB
ARAScQUgARJ9HAQgAQEcBQABARJ1CQcEAhJxEnUSdQMgABwLBwYCHBwScRJ1EnUIAQAIAAAAAAAe
AQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12
NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0DAEABzEuMC4wLjAA
ACkBACQ4ZThkYTk2Zi1mNGI4LTQwNWMtYTIzZi00Mzk4YzRlOWUyYTYAAAUBAAEAAB8BABpDb3B5
cmlnaHQgQCBNaWNyb3NvZnQgMjAxNwAAKAEAI3N0X2YwMGRhMTVkMGM3NzQ2NTQ4YWJhM2IyMGQ0
NDI4ODY4AAAOAQAJTWljcm9zb2Z0AAAApDsAAAAAAAAAAAAAvjsAAAAgAAAAAAAAAAAAAAAAAAAA
AAAAAAAAALA7AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAAMgDAAAAAAAAAAAAAMgDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsAQoAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAEAwAAAQAwADAAMAAwADAA
NABiADAAAAA0AAoAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAE0AaQBjAHIAbwBzAG8AZgB0
AAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAHMAdABfAGYAMAAwAGQA
YQAxADUAZAAwAGMANwA3ADQANgA1ADQAOABhAGIAYQAzAGIAMgAwAGQANAA0ADIAOAA4ADYAOAAA
ADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAHAAKAABAEkA
bgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAcwB0AF8AZgAwADAAZABhADEANQBkADAAYwA3ADcANAA2
ADUANAA4AGEAYgBhADMAYgAyADAAZAA0ADQAMgA4ADgANgA4AC4AZABsAGwAAABcABsAAQBMAGUA
ZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABNAGkAYwBy
AG8AcwBvAGYAdAAgADIAMAAxADcAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4A
YQBtAGUAAABzAHQAXwBmADAAMABkAGEAMQA1AGQAMABjADcANwA0ADYANQA0ADgAYQBiAGEAMwBi
ADIAMABkADQANAAyADgAOAA2ADgALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0A
ZQAAAAAAcwB0AF8AZgAwADAAZABhADEANQBkADAAYwA3ADcANAA2ADUANAA4AGEAYgBhADMAYgAy
ADAAZAA0ADQAMgA4ADgANgA4AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgAwAC4AMAAAADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAADQOwAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_Package_OnPostExecute"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{0EC72F9F-80DF-4A1F-8265-96335810BCE5}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_Package_OnPostExecute"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="OLEDB_ETLAudit"
              SQLTask:SqlStatementSource="EXEC [bix].[usp_SSISOps_Audit_OnPostExecute_61] @Scope='Package',@ExecutionID=?,@SourceID=?,@RowCountSupport=1,@LogCustomValues=0,@Variables=?,@Connections=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::varSSISOps_VariableValues"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::varSSISOps_ConnectionValues"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_Task_OnPostExecute"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{68D8FF45-BB06-4858-AA76-791A590BE592}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_Task_OnPostExecute"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="OLEDB_ETLAudit"
              SQLTask:SqlStatementSource="EXEC [bix].[usp_SSISOps_Audit_OnPostExecute_61] @Scope='Task',@ExecutionID=?,@SourceID=?,@RowCountSupport=1,@LogCustomValues=0" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\SSISOpsNFObj_SendAlert"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{4EC1D06A-846A-43D8-B091-BF6E1CE37ECC}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsNFObj_SendAlert">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="st_161d1d11fad04075a5ac4185b659ed68"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="VisualBasic">
              <ProjectItem
                Name="st_161d1d11fad04075a5ac4185b659ed68.vbproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{bbf65244-a7c5-4f07-b207-021c57a0ea50}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>st_161d1d11fad04075a5ac4185b659ed68</RootNamespace>
    <AssemblyName>st_161d1d11fad04075a5ac4185b659ed68</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="vb"
                           TemplatesPath=""
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>

        <Host Name="ScriptTask" IconIndex="">
        </Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.vb"
                Encoding="UTF8"><![CDATA['/*
'Copyright © 2015 Pragmatic Works Inc.
'#####################################################################################################################
'LEGAL NOTICE
'#####################################################################################################################
'THE FOLLOWING SOURCE CODE IS PRODUCED BY PRAGMATIC WORKS INC.
'YOU MUST HAVE A VALID LICENSE OF "BI xPRESS" (PRODUCT OF PRAGMATIC WORKS) TO USE/MODIFY THE FOLLOWING SOURCE CODE.

'YOU CAN NOT PUBLISH ANY PORTION OF THIS SOURCE CODE WITHOUT WRITTEN PERMISSION OF PRAGMATIC WORKS INC.
'##################################################################################################################### 
'*/
#Region "Imports"
Imports System
Imports System.Data
Imports System.Math
Imports System.Runtime.InteropServices
Imports Microsoft.SqlServer.Dts.Runtime
Imports System.Net
Imports System.Net.Mail
Imports System.Collections
#End Region

'ScriptMain is the entry point class of the script.  Do not change the name, attributes,
'or parent of this class.
<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute()> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
    Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

    Public Sub Main()

        ' Begin BI xPress Code

        PerformNotificationAction()

        If _isErrorEncountered Then
            Dts.TaskResult = ScriptResults.Failure
        Else
            Dts.TaskResult = ScriptResults.Success
        End If

        ' End BI xPress Code

    End Sub

#Region "ScriptResults declaration"

    Enum ScriptResults
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    End Enum

# End Region

    Private Const NotificationFrameworkAlertListVariableName As String = "User::varSSISOpsNF_AlertList"
    Private Const NotificationFrameworkAlertListAllVariableName As String = "User::varSSISOpsNF_AlertList_All"
    Private Const NotificationFrameworkCounter As String = "User::varSSISOpsNF_Notification_Counter"
    Private Const NotificationFrameworkSubComponentName As String = "BI xPress Notification Framework Send Alert"

    Private _isErrorEncountered As Boolean

    Private Sub PerformNotificationAction()
        Const PREFIX_DISABLED As String = "{D}"

        Dim isPackageRunning As Boolean = False
        Dim sPkgName As String = ReadVariable("System::PackageName").ToString()

        Dim dtStart As System.DateTime = DirectCast(ReadVariable("System::StartTime"), DateTime)
        Dim dtEnd As System.DateTime = DateTime.Now

        Dim sExecAcct As String = ReadVariable("System::UserName").ToString()
        Dim sMachine As String = ReadVariable("System::MachineName").ToString()
        Dim sInteractive As String = ReadVariable("System::InteractiveMode").ToString()
        Dim sStepName As String = Nothing

        Dim oRuntimeSettings As System.Collections.Hashtable = GetRuntimeSettings()

        Dim priorityModeSetting As String = If(GetSetting("PRIORITY_MODE", oRuntimeSettings) IsNot Nothing, GetSetting("PRIORITY_MODE", oRuntimeSettings).ToString(), String.Empty)

        Dim alertInfosContents As String
        Dim isPackageTheSource As Boolean = ReadVariable("System::SourceID").ToString() = ReadVariable("System::PackageID").ToString()

        If isPackageTheSource Then
            ' Package finished running 
            isPackageRunning = False
            sStepName = String.Empty

            Dim alertListVariableValue As String = TryCast(ReadVariable(NotificationFrameworkAlertListAllVariableName), String)

            If Not String.IsNullOrEmpty(alertListVariableValue) Then
                alertInfosContents = alertListVariableValue
            Else
                alertInfosContents = String.Empty
            End If
        Else
            isPackageRunning = True

            ' Task finished running 
            If priorityModeSetting = "DELAYED" Then
                Return
            End If

            ' Do all work when package is completed 
            Dim alertListAllVariableValue As String = TryCast(ReadVariable(NotificationFrameworkAlertListVariableName), String)

            If Not String.IsNullOrEmpty(alertListAllVariableValue) Then
                alertInfosContents = alertListAllVariableValue
            Else
                alertInfosContents = String.Empty
            End If
        End If

        ' Parse the collection of AlertInfo here.
        Dim alertInfos As System.Collections.Generic.List(Of AlertInfo) = ParseAlertInfos(alertInfosContents)

        If isPackageTheSource AndAlso alertInfos.Count > 0 Then
            sStepName = GetLastAlertSource(alertInfos)
        End If

        Dim messageBody As String = Nothing
        Dim subjectLine As String = Nothing
        Dim messageBodySms As String = Nothing

        Dim errorCount As Integer = 0
        Dim warningCount As Integer = 0
        Dim otherCount As Integer = 0
        Dim notificationCounter As Integer = CInt(ReadVariable(NotificationFrameworkCounter))
        Dim maxNotifyCount As Integer = CInt(GetSetting("MAX_NOTIFICATIONS", oRuntimeSettings))

        Dim bEmailMethod As Boolean = CBool(GetSetting("NOTIFY_USING_EMAIL", oRuntimeSettings))
        Dim bSMSMethod As Boolean = CBool(GetSetting("NOTIFY_USING_SMS", oRuntimeSettings))
        Dim bEventLogMethod As Boolean = CBool(GetSetting("NOTIFY_USING_EVENTLOG", oRuntimeSettings))
        Dim bLogFileMethod As Boolean = CBool(GetSetting("NOTIFY_USING_LOGFILE", oRuntimeSettings))
        Dim bUseCustEmailTemplate As Boolean = CBool(GetSetting("USE_CUSTOM_EMAIL_TEMPLATE", oRuntimeSettings))
        Dim sCustEmailTemplatePath As String = DirectCast(GetSetting("CUSTOM_EMAIL_TEMPLATE_FILEPATH", oRuntimeSettings), String)
        Dim sLogFolderPath As String = DirectCast(GetSetting("LOG_FOLDER_PATH", oRuntimeSettings), String)
        Dim iDeleteLogOlderThanDays As Integer = CInt(GetSetting("DELETE_LOG_OLDER_THAN_DAYS", oRuntimeSettings))

        If alertInfos.Count <= 0 AndAlso (CBool(GetSetting("NOTIFY_ONCOMPLETE", oRuntimeSettings)) = False AndAlso CBool(GetSetting("NOTIFY_ONSUCCESS", oRuntimeSettings)) = False) Then
            Return
        End If

        If alertInfos.Count <= 0 AndAlso isPackageRunning = True Then
            Return
        End If

        If isPackageRunning = True AndAlso notificationCounter >= maxNotifyCount AndAlso CBool(GetSetting("NOTIFY_ONCOMPLETE", oRuntimeSettings)) = False Then
            Return
        End If

        Dim isDelayedMode As Boolean = False

        If priorityModeSetting = "DELAYED" Then
            isDelayedMode = True
        End If

        If CBool(GetSetting("NOTIFY_ONCOMPLETE", oRuntimeSettings)) = False AndAlso isDelayedMode = False AndAlso notificationCounter > 0 Then
            Return
        End If

        ' Send Email 
        Dim sFrom As String = ReadVariable("User::varSSISOpsNF_From").ToString()
        Dim sEmailList As String = String.Empty

        If bEmailMethod = True AndAlso ((ReadVariable("User::varSSISOpsNF_To") IsNot Nothing)) Then
            sEmailList = ReadVariable("User::varSSISOpsNF_To").ToString()
            sEmailList = GetFilteredEmailList(sEmailList, ";", PREFIX_DISABLED)
        End If

        Dim oMessage As MailMessage = Nothing

        If Not String.IsNullOrEmpty(sEmailList) Then
            oMessage = New MailMessage()
            oMessage.From = New MailAddress(sFrom)
            oMessage.[To].Add(sEmailList.Replace(";", ","))

            If isDelayedMode = False Then
                oMessage.Priority = MailPriority.High
            End If

            Dim sCCList As String = DirectCast(GetSetting("CC_EMAILLIST", oRuntimeSettings), String)
            Dim sBCCList As String = DirectCast(GetSetting("BCC_EMAILLIST", oRuntimeSettings), String)

            If String.IsNullOrEmpty(sCCList) = False Then
                oMessage.CC.Add(sCCList.Replace(";", ",").Replace("|", ","))
            End If

            If String.IsNullOrEmpty(sBCCList) = False Then
                oMessage.Bcc.Add(sBCCList.Replace(";", ",").Replace("|", ","))
            End If

            If DirectCast(GetSetting("EMAIL_FORMAT", oRuntimeSettings), String) = "HTML" Then
                oMessage.IsBodyHtml = True
                messageBody = GetHTMLNotificationMessage(sPkgName, dtStart, dtEnd, FormatTimeDifference(dtStart, dtEnd), sMachine, sExecAcct, _
                    sInteractive, isPackageRunning, sStepName, errorCount, warningCount, otherCount, _
                    alertInfos, False, 0, bUseCustEmailTemplate, sCustEmailTemplatePath)
            Else
                oMessage.IsBodyHtml = False
                messageBody = GetTextNotificationMessage(sPkgName, dtStart, dtEnd, FormatTimeDifference(dtStart, dtEnd), sMachine, sExecAcct, _
                    sInteractive, isPackageRunning, sStepName, errorCount, warningCount, otherCount, _
                    alertInfos, False, 0, bUseCustEmailTemplate, sCustEmailTemplatePath)
            End If

            oMessage.Body = messageBody
        End If

        If (bEventLogMethod = True) OrElse (bLogFileMethod = True) Then
            errorCount = 0
            warningCount = 0
            otherCount = 0
            messageBody = GetTextNotificationMessage(sPkgName, dtStart, dtEnd, FormatTimeDifference(dtStart, dtEnd), sMachine, sExecAcct, _
                sInteractive, isPackageRunning, sStepName, errorCount, warningCount, otherCount, _
                alertInfos, False, 0, False, "")

            If (bLogFileMethod = True) AndAlso (iDeleteLogOlderThanDays > 0) Then
                DeleteOldFiles(sLogFolderPath, "NF_LOG_*.txt", iDeleteLogOlderThanDays)
            End If
        End If

        If (warningCount > 0 AndAlso CBool(GetSetting("NOTIFY_ONWARNING", oRuntimeSettings)) = True) Then
        Else
            ' Yes Send Alert 
            If (errorCount > 0 AndAlso CBool(GetSetting("NOTIFY_ONSUCCESS", oRuntimeSettings)) = True AndAlso CBool(GetSetting("NOTIFY_ONCOMPLETE", oRuntimeSettings)) = False AndAlso CBool(GetSetting("NOTIFY_ONERROR", oRuntimeSettings)) = False AndAlso CBool(GetSetting("NOTIFY_ONWARNING", oRuntimeSettings)) = False) Then
                Return
            End If
        End If

        ' Send SMS 
        Dim iMaxLen As Integer = CInt(GetSetting("SMS_MAXLENGTH", oRuntimeSettings))
        Dim sSMSList As String = DirectCast(GetSetting("SMS_EMAILLIST", oRuntimeSettings), String)

        If String.IsNullOrEmpty(sSMSList) = False Then
            sSMSList = GetFilteredEmailList(sSMSList, "|", PREFIX_DISABLED)
        End If

        Dim oMessageSMS As MailMessage = Nothing

        If bSMSMethod = True AndAlso Not String.IsNullOrEmpty(sSMSList) Then
            oMessageSMS = New MailMessage()
            oMessageSMS.From = New MailAddress(sFrom)
            oMessageSMS.[To].Add(sSMSList.Replace("|", ","))
            errorCount = 0
            warningCount = 0
            otherCount = 0
            messageBodySms = GetTextNotificationMessage(sPkgName, dtStart, dtEnd, FormatTimeDifference(dtStart, dtEnd), sMachine, sExecAcct, _
                sInteractive, isPackageRunning, sStepName, errorCount, warningCount, otherCount, _
                alertInfos, True, iMaxLen, False, "")

            Dim sTempBody As String

            If errorCount > 0 Then
                sTempBody = IIf(errorCount = 1, "<SSIS Error>", "<SSIS Errors>")
            ElseIf warningCount > 0 Then
                sTempBody = IIf(warningCount = 1, "<SSIS Warning>", "<SSIS Warnings>")
            ElseIf otherCount > 0 Then
                sTempBody = IIf(otherCount = 1, "<SSIS Message>", "<SSIS Messages>")
            Else
                sTempBody = "<SSIS Success>"
            End If

            sTempBody = sTempBody & System.Environment.NewLine & messageBodySms

            If sTempBody.Length >= iMaxLen - sFrom.Length Then
                oMessageSMS.Body = sTempBody.Substring(iMaxLen - sFrom.Length)
            Else
                oMessageSMS.Body = sTempBody
            End If
        End If

        If isPackageRunning = True Then
            If errorCount > 0 Then
                subjectLine = "ERROR : Package " & ReadVariable("System::PackageName").ToString() & " has error(s) at task [" & ReadVariable("System::SourceName").ToString() & "]"
            ElseIf warningCount > 0 Then
                subjectLine = "WARNING : Package " & ReadVariable("System::PackageName").ToString() & " has warning(s) at task [" & ReadVariable("System::SourceName").ToString() & "]"
            Else
                If otherCount > 0 Then
                    subjectLine = "ALERT : Package " & ReadVariable("System::PackageName").ToString() & " generated runtime alert(s)"
                Else
                    Return
                End If
            End If
        Else
            If errorCount > 0 Then
                subjectLine = "ERROR : Package " & ReadVariable("System::PackageName").ToString() & " completed with [" & errorCount.ToString() & "] error(s)"
            ElseIf warningCount > 0 Then
                subjectLine = "WARNING : Package " & ReadVariable("System::PackageName").ToString() & " completed with [" & warningCount.ToString() & "] warning(s)"
            ElseIf otherCount > 0 Then
                subjectLine = "ALERT : Package " & ReadVariable("System::PackageName").ToString() & " completed with [" & otherCount.ToString() & "] alert(s)"
            Else
                subjectLine = "SUCCESS : Package " & ReadVariable("System::PackageName").ToString() & " completed successfully"
            End If
        End If

        Dim oSmtpClient As SmtpClient = Nothing

        If (bEmailMethod = True) OrElse (bSMSMethod = True) Then
            oSmtpClient = New SmtpClient(ReadVariable("User::varSSISOpsNF_SMTPServerName").ToString(), CInt(GetSetting("SMTP_PORT", oRuntimeSettings)))

            If String.IsNullOrEmpty(GetSetting("SMTP_UID", oRuntimeSettings).ToString()) = False Then
                oSmtpClient.Credentials = New System.Net.NetworkCredential(GetSetting("SMTP_UID", oRuntimeSettings).ToString(), GetSetting("SMTP_PWD", oRuntimeSettings).ToString())
            Else
                oSmtpClient.UseDefaultCredentials = True
            End If

            If CBool(GetSetting("SMTP_USESSL", oRuntimeSettings)) = True Then
                oSmtpClient.EnableSsl = True
            End If
        End If

        If isPackageRunning = True Then
            ' Already sent immediate mode alert
            WriteVariable(NotificationFrameworkAlertListVariableName, String.Empty)
            alertInfos.Clear()
        End If

        If oMessage IsNot Nothing AndAlso oSmtpClient IsNot Nothing Then
            oMessage.Subject = subjectLine

            Try
                oSmtpClient.Send(oMessage)
            Catch ex As System.Net.Mail.SmtpException
                _isErrorEncountered = True

                Dim exceptionMessage As String

                exceptionMessage = UnwindExceptionMessages(ex)

                Dts.Events.FireError(CInt(ex.StatusCode), NotificationFrameworkSubComponentName, exceptionMessage, "http://help.pragmaticworks.com/BIxPress/", 0)
            End Try
        End If

        If oMessageSMS IsNot Nothing AndAlso oSmtpClient IsNot Nothing Then
            If iMaxLen > 400 Then
                '''/Must be MMS 
                oMessageSMS.Subject = subjectLine

                If isDelayedMode = False Then
                    oMessageSMS.Priority = MailPriority.High
                End If
            Else
                oMessageSMS.Subject = String.Empty
            End If

            Try
                oSmtpClient.Send(oMessageSMS)
            Catch ex As System.Net.Mail.SmtpException
                _isErrorEncountered = True

                Dim exceptionMessage As String

                exceptionMessage = UnwindExceptionMessages(ex)

                Dts.Events.FireError(CInt(ex.StatusCode), NotificationFrameworkSubComponentName, exceptionMessage, "http://help.pragmaticworks.com/BIxPress/", 0)
            End Try
        End If

        ' Event Log
        If bEventLogMethod = True Then
            If errorCount > 0 Then
                WriteToEventLog(messageBody, "BI xPress", System.Diagnostics.EventLogEntryType.[Error], "Application")
            ElseIf warningCount > 0 Then
                WriteToEventLog(messageBody, "BI xPress", System.Diagnostics.EventLogEntryType.Warning, "Application")
            Else
                WriteToEventLog(messageBody, "BI xPress", System.Diagnostics.EventLogEntryType.Information, "Application")
            End If
        End If

        ' Log File
        If bLogFileMethod = True Then
            'Log Event to Text File 
            Dim sPath As String = Nothing
            Dim sFileName As String = Nothing

            sPkgName = sPkgName.Replace("<", String.Empty).Replace(">", String.Empty).Replace(":", String.Empty).Replace("/", String.Empty).Replace("\", String.Empty).Replace("*", String.Empty).Replace("|", String.Empty).Replace("?", String.Empty)

            If errorCount > 0 Then
                sFileName = "NF_LOG_" & System.DateTime.Now.ToString("yyyy-MM-dd hhmmss") & "_ERROR_" & sPkgName & ".txt"
            ElseIf warningCount > 0 Then
                sFileName = "NF_LOG_" & System.DateTime.Now.ToString("yyyy-MM-dd hhmmss") & "_WARNING_" & sPkgName & ".txt"
            Else
                sFileName = "NF_LOG_" & System.DateTime.Now.ToString("yyyy-MM-dd hhmmss") & "_INFO_" & sPkgName & ".txt"
            End If

            sPath = System.IO.Path.Combine(sLogFolderPath, sFileName)
            SaveTextToFile(messageBody, sPath, False, Nothing)
        End If

        ' Increment notification counter
        WriteVariable(NotificationFrameworkCounter, System.Math.Max(System.Threading.Interlocked.Increment(notificationCounter), notificationCounter - 1))
    End Sub

    Private Function ParseAlertInfos(alertInfosContents As String) As System.Collections.Generic.List(Of AlertInfo)
        If String.IsNullOrEmpty(alertInfosContents) Then
            Return New System.Collections.Generic.List(Of AlertInfo)()
        End If

        Dim alertInfos As New System.Collections.Generic.List(Of AlertInfo)()

        Try
            ' Create the XML document once here immediately before use so we don't have to validate it each time we add an AlertInfo object to the list.
            Dim document As New System.Xml.XmlDocument()

            ' This is the static XML document declaration that we will load our children into.
            ' The <AlertInfos /> element will become our parent element which will contain all of the serialized
            ' AlertInfo objects that we added in the OnWarning, OnError, etc. event handlers.
            document.LoadXml("<?xml version=""1.0"" encoding=""UTF-16"" ?><AlertInfos />")

            Dim documentFragment As System.Xml.XmlDocumentFragment = document.CreateDocumentFragment()

            documentFragment.InnerXml = alertInfosContents

            document.DocumentElement.AppendChild(documentFragment)

            Dim xmlSerializer As New System.Xml.Serialization.XmlSerializer(GetType(AlertInfo), New Type() {GetType(AlertType)})

            For Each alertInfoElement As System.Xml.XmlElement In document.DocumentElement.ChildNodes
                Using reader As New System.IO.StringReader(alertInfoElement.OuterXml)
                    Dim parsedAlertInfo As AlertInfo = TryCast(xmlSerializer.Deserialize(reader), AlertInfo)

                    If parsedAlertInfo IsNot Nothing Then
                        alertInfos.Add(parsedAlertInfo)
                    End If
                End Using
            Next
        Catch ex As Exception
            Dts.Events.FireError(60001, "BI xPress Notification Framework Send Alert", "There was an error while attempting to parse the accumulated alerts for BI xPress Notification Framework.  Error message: " & ex.Message, "http://help.pragmaticworks.com/BIxPress", 0)
        End Try

        Return alertInfos
    End Function

    Private Function UnwindExceptionMessages(ex As Exception) As String
        If ex Is Nothing Then
            Return String.Empty
        End If

        Dim messages As String

        If Not String.IsNullOrEmpty(ex.Message) Then
            messages = ex.Message
        Else
            messages = String.Empty
        End If

        Dim childMessages As String

        childMessages = UnwindExceptionMessages(ex.InnerException)

        If Not String.IsNullOrEmpty(childMessages) Then
            messages += Convert.ToString("  ") & childMessages
        End If

        Return messages
    End Function

    Public Function WriteToEventLog(Entry As String, AppName As String, EventType As System.Diagnostics.EventLogEntryType, LogName As String) As Boolean
        Try
            Dim objEventLog As New System.Diagnostics.EventLog()

            'Register the App as an Event Source 
            If Not System.Diagnostics.EventLog.SourceExists(AppName) Then
                System.Diagnostics.EventLog.CreateEventSource(AppName, LogName)
            End If

            objEventLog.Source = AppName
            objEventLog.WriteEntry(Entry, EventType)

            Return True
        Catch ex As Exception
            _isErrorEncountered = True

            Dts.Events.FireError(-1, NotificationFrameworkSubComponentName, String.Format("An error occurred while creating the Windows Event Log ""{0}"": {1}.", LogName, ex.Message), String.Empty, 0)

            Return False
        End Try
    End Function

    Public Function SaveTextToFile(fileContents As String, filePath As String, isAppend As Boolean, encoding As System.Text.Encoding) As Boolean
        If (String.IsNullOrEmpty(filePath)) Then
            _isErrorEncountered = True

            Dts.Events.FireError(-1073573549, NotificationFrameworkSubComponentName, "The log file path is invalid.  Unable to save log file.", String.Empty, 0)

            Return False
        End If

        Dim directoryPath As String

        directoryPath = System.IO.Path.GetDirectoryName(filePath)

        If (String.IsNullOrEmpty(directoryPath)) Then
            _isErrorEncountered = True

            Dts.Events.FireError(-1073573549, NotificationFrameworkSubComponentName, "The log file directory path is invalid.  Unable to save log file.", String.Empty, 0)

            Return False
        End If

        If (directoryPath IsNot Nothing AndAlso Not System.IO.Directory.Exists(directoryPath)) Then
            _isErrorEncountered = True

            Dts.Events.FireError(-1073573549, NotificationFrameworkSubComponentName, String.Format("The log file directory ""{0}"" does not exist.  Unable to save log file because the specified directory does not exist.", directoryPath), String.Empty, 0)

            Return False
        End If

        Dim fileWriter As System.IO.StreamWriter = Nothing

        Try
            If encoding Is Nothing Then
                fileWriter = New System.IO.StreamWriter(filePath, isAppend)
            Else
                fileWriter = New System.IO.StreamWriter(filePath, isAppend, encoding)
            End If

            fileWriter.Write(fileContents)
            fileWriter.Close()
        Catch ex As Exception
            _isErrorEncountered = True

            Dts.Events.FireError(-1, NotificationFrameworkSubComponentName, String.Format("An error occurred while creating the log file ""{0}"": {1}", filePath, ex.Message), String.Empty, 0)

            Return False
        Finally
            If fileWriter IsNot Nothing Then
                fileWriter.Dispose()
            End If

            fileWriter = Nothing
        End Try

        Return True
    End Function

    ' This will delete files with specified pattern which are older than specified days.
    Public Function DeleteOldFiles(directoryPath As String, fileExtensionSearchPattern As String, olderThanDays As Integer) As Integer
        Dim iDeleted As Integer = 0

        Try
            If Not System.IO.Directory.Exists(directoryPath) Then
                Dts.Events.FireError(-1073573549, NotificationFrameworkSubComponentName, String.Format("The directory ""{0}"" does not exist.  Unable to delete old log files because the directory does not exist.", directoryPath), String.Empty, 0)

                Return 0
            End If

            Dim files As String() = System.IO.Directory.GetFiles(directoryPath, fileExtensionSearchPattern)

            For Each myfile As String In files
                Dim fi As System.IO.FileInfo = New System.IO.FileInfo(myfile)

                ' Write full path of this file 
                If fi.CreationTime < DateTime.Today.AddDays(0 - olderThanDays) Then
                    fi.Delete()
                    iDeleted = iDeleted + 1
                End If
            Next
        Catch ex As Exception
            Dts.Events.FireError(-1, NotificationFrameworkSubComponentName, String.Format("An error occurred while deleting old log files from the ""{0}"" directory: {1}", directoryPath, ex.Message), String.Empty, 0)
        End Try

        Return iDeleted
    End Function

    Public Function GetSubStringBetween(stringToParse As String, startString As String, endString As String) As String
        If String.IsNullOrEmpty(stringToParse) Then
            Return Nothing
        End If

        Dim startPosition As Integer = stringToParse.IndexOf(startString)
        Dim endPosition As Integer = stringToParse.IndexOf(endString)

        If startPosition < 0 Or endPosition < 0 Then
            Return Nothing
        End If

        Return stringToParse.Substring(startPosition + startString.Length, endPosition - (startPosition + startString.Length))
    End Function

    ' Example : ReplaceSubStringBetween("---<a>test</a>---", "<a>", "</a>", "HHH",False) ===> ---<a>HHH</a>--- 
    ' Example : ReplaceSubStringBetween("---<a>test</a>---", "<a>", "</a>", "HHH",True) ===> ---HHH--- 
    Public Function ReplaceSubStringBetween(stringToParse As String, startString As String, endString As String, replacewith As String, replacemarkers As Boolean) As String
        If String.IsNullOrEmpty(stringToParse) Then
            Return Nothing
        End If

        Dim startPosition As Integer = stringToParse.IndexOf(startString)
        Dim endPosition As Integer = stringToParse.IndexOf(endString)

        If startPosition < 0 Or endPosition < 0 Then
            Return stringToParse
        End If

        Dim s1 As String = Nothing
        Dim s2 As String = Nothing

        If replacemarkers = False Then
            s1 = stringToParse.Remove(startPosition + startString.Length, (endPosition) - (startPosition + startString.Length))
            s2 = s1.Insert(startPosition + startString.Length, replacewith)
        Else
            s1 = stringToParse.Remove(startPosition, (endPosition + endString.Length) - (startPosition))
            s2 = s1.Insert(startPosition, replacewith)
        End If

        Return s2
    End Function

    Private Function GetPkgStatus(bPkgRunning As Boolean, sStepName As String, iErrors As Integer, iWarnings As Integer) As String
        Dim sStatus As String = Nothing
        Dim s As String = String.Empty

        If String.IsNullOrEmpty(sStepName) = False Then
            s = " @ STEP [" & sStepName & "]"
        End If

        If iErrors > 0 Then
            If bPkgRunning = False Then
                sStatus = "COMPLETED W/ ERRORS"
            Else
                sStatus = "HAS " & IIf(iErrors > 0, " ERRORS", String.Empty) & s
            End If
        Else
            If bPkgRunning = False Then
                sStatus = "COMPLETED" & IIf(iWarnings > 0, " W/ WARNINGS", String.Empty)
            Else
                sStatus = "HAS " & IIf(iWarnings > 0, " WARNINGS", String.Empty) & s
            End If
        End If

        Return sStatus
    End Function

    Private Function GetTextNotificationMessage(sPkgName As String, dtStartTime As DateTime, dtEndTime As DateTime, sRunTime As String, sMachineName As String, sExecAcctName As String, _
        sInteractive As String, bPkgRunning As Boolean, sStepName As String, ByRef iErrors As Integer, ByRef iWarnings As Integer, ByRef iOtherAlerts As Integer, _
        alertList As System.Collections.Generic.List(Of AlertInfo), bForSMS As Boolean, iSMSLength As Integer, bUseCustEmailTemplate As Boolean, sCustEmailTemplatePath As String) As String
        Dim oSB As New System.Text.StringBuilder()
        Dim oSBAlerts As New System.Text.StringBuilder()

        Dim sbAlerts As New System.Text.StringBuilder()

        Dim sStatus As String = Nothing

        Dim sAlertType As String = Nothing

        Dim sTemplate As String = String.Empty

        If bForSMS = True Then
            bUseCustEmailTemplate = False
        End If

        Dim sAlertRow As String = String.Empty
        Dim sAlertRows As String = String.Empty

        If bUseCustEmailTemplate = True Then
            Try
                sTemplate = System.IO.File.ReadAllText(sCustEmailTemplatePath)
                sAlertRow = GetSubStringBetween(sTemplate, "<!--{{AlertBlockStart}}-->", "<!--{{AlertBlockEnd}}-->")
            Catch generatedExceptionName As Exception
                bUseCustEmailTemplate = False
            End Try
        End If

        If alertList.Count > 0 Then
            If bForSMS = False Then
                oSBAlerts.AppendLine("************ Total [" & alertList.Count & "] Alerts *************")
            Else
                oSBAlerts.AppendLine("<< [" & alertList.Count & "] Alerts >> ")
            End If

            oSBAlerts.AppendLine()

            For Each alertInfo As AlertInfo In alertList
                If alertInfo.AlertType = AlertType.ErrorAlert Then
                    sAlertType = "ERROR"
                    iErrors = iErrors + 1
                ElseIf alertInfo.AlertType = AlertType.WarningAlert Then
                    sAlertType = "WARNING"
                    iWarnings = iWarnings + 1
                ElseIf alertInfo.AlertType = AlertType.TimeThresholdAlert Then
                    sAlertType = "TIME THRESHOLD ALERT"
                    iOtherAlerts = iOtherAlerts + 1
                Else
                    sAlertType = "ALERT"
                End If

                If bForSMS Then
                    oSBAlerts.AppendLine(alertInfo.SourceName & " >> " & sAlertType & " : " & alertInfo.AlertDescription)
                Else
                    If bUseCustEmailTemplate AndAlso String.IsNullOrEmpty(sAlertRow) = False Then
                        sAlertRows = sAlertRows & sAlertRow.Replace("{{AlertSourceName}}", alertInfo.SourceName).Replace("{{AlertTime}}", alertInfo.AlertTimeStamp.ToString(System.Globalization.CultureInfo.CurrentCulture)).Replace("{{AlertType}}", sAlertType).Replace("{{AlertMessage}}", alertInfo.AlertDescription).Replace("{{AlertCode}}", alertInfo.AlertCode.ToString(System.Globalization.CultureInfo.InvariantCulture))
                    Else
                        oSBAlerts.AppendLine("[" & alertInfo.AlertTimeStamp.ToString("MM/dd HH:mm:ss") & "] " & alertInfo.SourceName & " = > " & sAlertType & "[" & alertInfo.AlertCode.ToString(System.Globalization.CultureInfo.InvariantCulture) & "] : " & alertInfo.AlertDescription & System.Environment.NewLine)
                    End If
                End If
            Next
        End If

        sStatus = GetPkgStatus(bPkgRunning, sStepName, iErrors, iWarnings)

        Dim sShortStatus As String = GetShortStatus(iErrors, iWarnings)

        If bUseCustEmailTemplate Then
            sTemplate = sTemplate.Replace("{{PackageName}}", sPkgName).Replace("{{StatusLong}}", sStatus).Replace("{{StatusShort}}", sShortStatus).Replace("{{TotalAlertCount}}", (iErrors + iWarnings).ToString()).Replace("{{ErrorCount}}", iErrors.ToString()).Replace("{{WarningCount}}", iWarnings.ToString()).Replace("{{RunTime}}", sRunTime).Replace("{{MachineName}}", sMachineName).Replace("{{ExecutionAccount}}", sExecAcctName).Replace("{{WasInteractive}}", sInteractive).Replace("{{PackageStartTime}}", dtStartTime.ToString()).Replace("{{FrameworkVersion}}", "2016.7.28.1").Replace("{{PackageEndTime}}", dtEndTime.ToString())

            Return ReplaceSubStringBetween(sTemplate, "<!--{{AlertBlockStart}}-->", "<!--{{AlertBlockEnd}}-->", sAlertRows, True)
        Else
            oSB.AppendLine("Package: " & sPkgName)
            oSB.AppendLine("Status: " & sStatus)

            If bForSMS Then
                oSB.AppendLine("Start Time: " & dtStartTime.ToString("MM/dd HH:mm:ss"))
            Else
                oSB.AppendLine("Start Time: " & dtStartTime)
            End If

            If bPkgRunning = False Then
                If bForSMS = False Then
                    oSB.AppendLine("End Time: " & dtEndTime)
                End If

                oSB.AppendLine("Run Time: " & FormatTimeDifference(dtStartTime, dtEndTime))
            ElseIf bForSMS = False Then
                oSB.AppendLine("End Time: <Still Running>")
            End If

            If bForSMS = False Then
                oSB.AppendLine("Total Errors: " & iErrors)
                oSB.AppendLine("Total Warnings: " & iWarnings)
                oSB.AppendLine("Machine Name: " & sMachineName)
                oSB.AppendLine("Was Interactive?: " & sInteractive)
                oSB.AppendLine("Execution Account: " & sExecAcctName)
                oSB.AppendLine("")
            End If

            Return oSB.ToString() & oSBAlerts.ToString()
        End If
    End Function

    Private Function GetHTMLNotificationMessage(sPkgName As String, dtStartTime As DateTime, dtEndTime As DateTime, sRunTime As String, sMachineName As String, sExecAcctName As String, _
        sInteractive As String, bPkgRunning As Boolean, sStepName As String, ByRef iErrors As Integer, ByRef iWarnings As Integer, ByRef iOtherAlerts As Integer, _
        alertList As System.Collections.Generic.List(Of AlertInfo), bForSMS As Boolean, iSMSLength As Integer, bUseCustEmailTemplate As Boolean, sCustEmailTemplatePath As String) As String
        Dim sb As New System.Text.StringBuilder()
        Dim sbAlerts As New System.Text.StringBuilder()
        Dim sStatus As String = Nothing
        Dim sColor As String = Nothing
        Dim sTemplate As String = String.Empty

        Dim sAlertBlock As String = String.Empty
        Dim sErrorBlock As String = String.Empty
        Dim sWarningBlock As String = String.Empty
        Dim sErrorSourceBlock As String = String.Empty
        Dim sWarningSourceBlock As String = String.Empty
        Dim sErrorRow As String = String.Empty
        Dim sWarningRow As String = String.Empty

        If bForSMS = True Then
            bUseCustEmailTemplate = False
        End If

        If bUseCustEmailTemplate Then
            Try
                sTemplate = System.IO.File.ReadAllText(sCustEmailTemplatePath)
                sAlertBlock = GetSubStringBetween(sTemplate, "<!--{{AlertBlockStart}}-->", "<!--{{AlertBlockEnd}}-->")

                If String.IsNullOrEmpty(sAlertBlock) = False Then
                    sWarningBlock = sAlertBlock
                    sErrorBlock = sAlertBlock
                Else
                    sErrorBlock = GetSubStringBetween(sTemplate, "<!--{{ErrorBlockStart}}-->", "<!--{{ErrorBlockEnd}}-->")
                    sWarningBlock = GetSubStringBetween(sTemplate, "<!--{{WarningBlockStart}}-->", "<!--{{WarningBlockEnd}}-->")
                End If

                sErrorSourceBlock = GetSubStringBetween(sErrorBlock, "<!--{{AlertSourceStart}}-->", "<!--{{AlertSourceEnd}}-->")
                sErrorRow = GetSubStringBetween(sErrorBlock, "<!--{{AlertRowStart}}-->", "<!--{{AlertRowEnd}}-->")

                If String.IsNullOrEmpty(sWarningBlock) = False Then
                    sWarningSourceBlock = GetSubStringBetween(sWarningBlock, "<!--{{AlertSourceStart}}-->", "<!--{{AlertSourceEnd}}-->")
                    sWarningRow = GetSubStringBetween(sWarningBlock, "<!--{{AlertRowStart}}-->", "<!--{{AlertRowEnd}}-->")
                End If
            Catch generatedExceptionName As Exception
                ' Dts.FireError "Can not load template file. " & ex.Message
                ' Dont use template becuase we cant load file 
                bUseCustEmailTemplate = False
            End Try
        End If

        Dim sAlertHTML As String = String.Empty

        '''//////////////////////////////////////// 
        'Loop Through ERRORS 
        '''//////////////////////////////////////// 

        Dim sErrorHTML As String = String.Empty
        Dim sPrevSource As String = String.Empty

        Dim sSourceAlertRows As String = String.Empty

        For Each alertInfo As AlertInfo In alertList
            If alertInfo.AlertType <> AlertType.ErrorAlert Then
                Continue For
            End If

            iErrors = iErrors + 1
            sColor = "FFD5D5"

            If bUseCustEmailTemplate = True AndAlso String.IsNullOrEmpty(sErrorRow) = True Then
                Continue For
            End If

            If sPrevSource <> alertInfo.SourceName Then
                ' Alert Source Line 
                If bUseCustEmailTemplate = True Then
                    If iErrors > 1 Then
                        sErrorHTML = ReplaceSubStringBetween(sErrorHTML, "<!--{{AlertRowStart}}-->", "<!--{{AlertRowEnd}}-->", sSourceAlertRows, True)
                    End If
                    ' Prev Source Block
                    If String.IsNullOrEmpty(sWarningSourceBlock) = False Then
                        sErrorHTML += sErrorSourceBlock.Replace("{{AlertSourceName}}", alertInfo.SourceName)
                    Else
                        sErrorHTML += sErrorRow.Replace("{{AlertSourceName}}", alertInfo.SourceName)
                    End If

                    sSourceAlertRows = String.Empty
                Else
                    sErrorHTML = sErrorHTML & "<tr><td width=""100%"" bgcolor=""#" & sColor & """><b>Source :</b> " & alertInfo.SourceName & "</td></tr>" & System.Environment.NewLine
                End If
            End If

            ' Alert Line 
            If bUseCustEmailTemplate = True Then
                sSourceAlertRows = sSourceAlertRows & sErrorRow.Replace("{{AlertSourceName}}", alertInfo.SourceName).Replace("{{AlertTime}}", alertInfo.AlertTimeStamp.ToString(System.Globalization.CultureInfo.CurrentCulture)).Replace("{{AlertType}}", "Error").Replace("{{AlertMessage}}", alertInfo.AlertDescription).Replace("{{AlertCode}}", alertInfo.AlertCode.ToString(System.Globalization.CultureInfo.InvariantCulture))
            Else
                sErrorHTML = sErrorHTML & "<tr><td width=""100%""><b>" & alertInfo.AlertTimeStamp.ToString(System.Globalization.CultureInfo.CurrentCulture) & " : " & "</b>[" & alertInfo.AlertCode & "] " & alertInfo.AlertDescription & "</td></tr>" & System.Environment.NewLine
            End If

            sPrevSource = alertInfo.SourceName
        Next

        If iErrors > 0 Then
            If bUseCustEmailTemplate = True Then
                ' Replace last source detail after loop is done 
                ' Populate Prev Source Block 
                sErrorHTML = ReplaceSubStringBetween(sErrorHTML, "<!--{{AlertRowStart}}-->", "<!--{{AlertRowEnd}}-->", sSourceAlertRows, True)
                ' Populate Error Block 
                If String.IsNullOrEmpty(sAlertBlock) = False Then
                    sAlertHTML = sAlertHTML + sErrorHTML
                Else
                    sErrorBlock = ReplaceSubStringBetween(sErrorBlock, "<!--{{AlertSourceStart}}-->", "<!--{{AlertSourceEnd}}-->", sErrorHTML, True)
                    sTemplate = ReplaceSubStringBetween(sTemplate, "<!--{{ErrorBlockStart}}-->", "<!--{{ErrorBlockEnd}}-->", sErrorBlock, True)
                End If
            Else
                sbAlerts.AppendLine("<table border=""1"" width=""100%"" style=""border-collapse: collapse;font-family: verdana; font-size: 10pt"">")
                sbAlerts.AppendLine("<tr><td width=""100%"" bgcolor=""#FF0000""><font color=""#FFFFFF"" Size=""4""><b>ERRORS</b></font></td></tr>")
                sbAlerts.AppendLine(sErrorHTML)
                sbAlerts.AppendLine("</table><BR>")
            End If
        ElseIf bUseCustEmailTemplate Then
            sTemplate = ReplaceSubStringBetween(sTemplate, "<!--{{ErrorBlockStart}}-->", "<!--{{ErrorBlockEnd}}-->", String.Empty, True)
        End If

        '''//////////////////////////////////////// 
        'Loop Through Warnings 
        '''//////////////////////////////////////// 
        Dim sWarningHTML As String = String.Empty
        sPrevSource = String.Empty

        For Each alertInfo As AlertInfo In alertList
            If alertInfo.AlertType <> AlertType.WarningAlert Then
                Continue For
            End If

            iWarnings += 1
            sColor = "FFFF80"

            If bUseCustEmailTemplate = True AndAlso String.IsNullOrEmpty(sWarningRow) = True Then
                Continue For
            End If

            If sPrevSource <> alertInfo.SourceName Then
                If bUseCustEmailTemplate = True Then
                    If iWarnings > 1 Then
                        sWarningHTML = ReplaceSubStringBetween(sWarningHTML, "<!--{{AlertRowStart}}-->", "<!--{{AlertRowEnd}}-->", sSourceAlertRows, True)
                    End If
                    ' Prev Source Block
                    If String.IsNullOrEmpty(sWarningSourceBlock) = False Then
                        sWarningHTML = sWarningHTML & sWarningSourceBlock.Replace("{{AlertSourceName}}", alertInfo.SourceName)
                    Else
                        sWarningHTML = sWarningHTML & sWarningRow.Replace("{{AlertSourceName}}", alertInfo.SourceName)
                    End If

                    sSourceAlertRows = String.Empty
                Else
                    sWarningHTML = sWarningHTML & "<tr><td width=""100%"" bgcolor=""#" & sColor & """><b>Source :</b> " & alertInfo.SourceName & "</td></tr>" & System.Environment.NewLine
                End If
            End If

            If bUseCustEmailTemplate = True AndAlso String.IsNullOrEmpty(sWarningRow) = False Then
                sSourceAlertRows = sSourceAlertRows & sErrorRow.Replace("{{AlertSourceName}}", alertInfo.SourceName).Replace("{{AlertTime}}", alertInfo.AlertTimeStamp.ToString(System.Globalization.CultureInfo.CurrentCulture)).Replace("{{AlertType}}", "Warning").Replace("{{AlertMessage}}", alertInfo.AlertDescription).Replace("{{AlertCode}}", alertInfo.AlertCode.ToString(System.Globalization.CultureInfo.InvariantCulture))
            Else
                sWarningHTML = sWarningHTML & "<tr><td width=""100%""><b>" & alertInfo.AlertTimeStamp.ToString(System.Globalization.CultureInfo.CurrentCulture) & " : " & "</b>[" & alertInfo.AlertCode.ToString(System.Globalization.CultureInfo.InvariantCulture) & "] " & alertInfo.AlertDescription & "</td></tr>" & System.Environment.NewLine
            End If

            sPrevSource = alertInfo.SourceName
        Next

        If iWarnings > 0 Then
            If bUseCustEmailTemplate = True Then
                If String.IsNullOrEmpty(sWarningRow) = False Then
                    sWarningHTML = ReplaceSubStringBetween(sWarningHTML, "<!--{{AlertRowStart}}-->", "<!--{{AlertRowEnd}}-->", sSourceAlertRows, True)

                    ' Populate Warning Block
                    If String.IsNullOrEmpty(sAlertBlock) = False Then
                        sAlertHTML = sAlertHTML & sWarningHTML
                    Else
                        sWarningBlock = ReplaceSubStringBetween(sWarningBlock, "<!--{{AlertSourceStart}}-->", "<!--{{AlertSourceEnd}}-->", sWarningHTML, True)
                        sTemplate = ReplaceSubStringBetween(sTemplate, "<!--{{WarningBlockStart}}-->", "<!--{{WarningBlockEnd}}-->", sWarningBlock, True)
                    End If
                End If
            Else
                sbAlerts.AppendLine("<table border=""1"" width=""100%"" style=""border-collapse: collapse;font-family: verdana; font-size: 10pt"">")
                sbAlerts.AppendLine("<tr><td width=""100%"" bgcolor=""#FD6013""><font color=""#FFFFFF"" Size=""4""><b>WARNINGS</b></font></td></tr>")
                sbAlerts.AppendLine(sWarningHTML)
                sbAlerts.AppendLine("</table><BR>")
            End If
        ElseIf bUseCustEmailTemplate Then
            sTemplate = ReplaceSubStringBetween(sTemplate, "<!--{{WarningBlockStart}}-->", "<!--{{WarningBlockEnd}}-->", String.Empty, True)
        End If

        If String.IsNullOrEmpty(sAlertBlock) = False Then
            sAlertBlock = ReplaceSubStringBetween(sAlertBlock, "<!--{{AlertSourceStart}}-->", "<!--{{AlertSourceEnd}}-->", sAlertHTML, True)
            sTemplate = ReplaceSubStringBetween(sTemplate, "<!--{{AlertBlockStart}}-->", "<!--{{AlertBlockEnd}}-->", sAlertBlock, True)
        End If

        sStatus = GetPkgStatus(bPkgRunning, sStepName, iErrors, iWarnings)

        If bUseCustEmailTemplate = True Then
            Dim sShortStatus As String = GetShortStatus(iErrors, iWarnings)

            sTemplate = sTemplate.Replace("{{PackageName}}", sPkgName).Replace("{{StatusLong}}", sStatus).Replace("{{StatusShort}}", sShortStatus).Replace("{{TotalAlertCount}}", (iErrors + iWarnings).ToString()).Replace("{{ErrorCount}}", iErrors.ToString()).Replace("{{WarningCount}}", iWarnings.ToString()).Replace("{{RunTime}}", sRunTime).Replace("{{MachineName}}", sMachineName).Replace("{{ExecutionAccount}}", sExecAcctName).Replace("{{WasInteractive}}", sInteractive).Replace("{{PackageStartTime}}", dtStartTime.ToString()).Replace("{{FrameworkVersion}}", "2016.7.28.1").Replace("{{PackageEndTime}}", dtEndTime.ToString())
        Else
            sbAlerts.AppendLine("<br><br><font face=""Tahoma"" size=""1"">This report was generated by <a href=""http://www.pragmaticworks.com/pages/?src=bixpress&tag=NFEmail&url=/"">BI xPress Notification Framework</a> 4.0</font>")

            sColor = ((IIf(iErrors > 0, "FF0000", ((IIf(iWarnings > 0 Or iOtherAlerts > 0, "FD6013", "00FF00"))))))
            sb.AppendLine("<table border=""1"" width=""100%"" style=""border-collapse: collapse;font-family: verdana; font-size: 10pt"">")
            sb.AppendLine((("<tr><td><p><b><font size=""4"">" & sPkgName & " <font color=""#") & sColor & """>") & sStatus & "</font></font></b></td></tr>")
            sb.AppendLine("<tr><td width=""100%"" bgcolor=""#0B6BE1""><font color=""#FFFFFF""><b>Package Execution Summary</b></font></td></tr>")
            sb.AppendLine("<tr><td width=""100%"">")
            sb.AppendLine("<table border=""1"" width=""100%"" style=""border-collapse: collapse;font-family: verdana; font-size: 10pt"">")
            sb.AppendLine(("<tr><td width=""189"" bgcolor=""#F2F2F2""><b>Execution Status</b></td><td> <font color=""#" & sColor & """>") & sStatus & "</font></td></tr>")
            sb.AppendLine("<tr><td width=""189"" bgcolor=""#F2F2F2""><b>Start Time</b></td><td>" & dtStartTime & "</td></tr>")
            sb.AppendLine("<tr><td width=""189"" bgcolor=""#F2F2F2""><b>End Time</b></td><td>" & dtEndTime & "</td></tr>")
            sb.AppendLine("<tr><td width=""189"" bgcolor=""#F2F2F2""><b>Run Time</b></td><td>" & sRunTime & "</td></tr>")
            sb.AppendLine("<tr><td width=""189"" bgcolor=""#F2F2F2""><b>Total Errors</b></td><td>" & iErrors & "</td></tr>")
            sb.AppendLine("<tr><td width=""189"" bgcolor=""#F2F2F2""><b>Total Warnings</b></td><td>" & iWarnings & "</td></tr>")
            sb.AppendLine("<tr><td width=""189"" bgcolor=""#F2F2F2""><b>Machine Name</b></td><td>" & sMachineName & "</td></tr>")
            sb.AppendLine("<tr><td width=""189"" bgcolor=""#F2F2F2""><b>Execution Account</b></td><td>" & sExecAcctName & "</td></tr>")
            sb.AppendLine("<tr><td width=""189"" bgcolor=""#F2F2F2""><b>Was Interactive?</b></td><td>" & sInteractive & "</td></tr>")
            sb.AppendLine("</table>")
            sb.AppendLine("</td></tr></table><BR>")
            sb.AppendLine("")
        End If

        If bUseCustEmailTemplate = True Then
            Return sTemplate
        Else
            Return sb.ToString() & sbAlerts.ToString()
        End If
    End Function

    Private Function GetShortStatus(iErrors As Integer, iWarnings As Integer) As String
        If iErrors > 0 Then
            Return "ERROR"
        ElseIf iWarnings > 0 Then
            Return "WARNING"
        Else
            Return "SUCCESS"
        End If
    End Function

    Public Function FormatTimeDifference(dStart As DateTime, dEnd As DateTime) As String
        Return FormatTimeSpanFromSec(dEnd.Subtract(dStart))
    End Function

    Public Function FormatTimeSpanFromSec(ts As TimeSpan) As String
        Try
            Dim msg As String = String.Empty

            If ts.Days > 0 Then
                msg = ts.Days.ToString(System.Globalization.CultureInfo.InvariantCulture) & " day,"
            End If

            If ts.Hours > 0 Then
                msg = msg & ts.Hours.ToString(System.Globalization.CultureInfo.InvariantCulture) & " hr,"
            End If

            If ts.Minutes > 0 Then
                msg = msg & ts.Minutes.ToString(System.Globalization.CultureInfo.InvariantCulture) & " min,"
            End If

            If ts.Seconds > 0 Then
                msg = msg & Math.Round(ts.Seconds + (ts.Milliseconds / 1000.0R), 1) & " sec"
            ElseIf ts.TotalMilliseconds > 0 AndAlso String.IsNullOrEmpty(msg) Then
                msg = Math.Round(ts.TotalMilliseconds / 1000.0R, 2) & " sec"
            End If

            Return msg.TrimEnd(",")
        Catch generatedExceptionName As Exception
            Return "[0 sec]"
        End Try
    End Function

    Private Function GetPropVal(obj As Object, propname As String) As Object
        Return System.ComponentModel.TypeDescriptor.GetProperties(obj)(propname).GetValue(obj)
    End Function

    Private Function GetLastAlertSource(alertInfoList As System.Collections.Generic.List(Of AlertInfo)) As String
        Dim alertSource As String = String.Empty

        For i As Integer = alertInfoList.Count - 1 To 0 Step -1
            If alertInfoList(i).AlertType = AlertType.ErrorAlert Then
                Return alertInfoList(i).SourceName
            End If

            If alertInfoList(i).AlertType = AlertType.WarningAlert AndAlso String.IsNullOrEmpty(alertSource) Then
                alertSource = alertInfoList(i).SourceName
            End If
        Next

        Return alertSource
    End Function

    Private Function GetFilteredEmailList(sOriginalList As String, sSeperator As String, sFilterPrefix As String) As String
        Dim sArr As String() = Nothing

        If String.IsNullOrEmpty(sOriginalList) Then
            Return String.Empty
        End If

        Dim sReturn As String = String.Empty

        sArr = sOriginalList.Split(sSeperator.ToCharArray(), 10000, StringSplitOptions.RemoveEmptyEntries)

        For Each sItm As String In sArr
            If sItm.StartsWith(sFilterPrefix) = False Then
                sReturn = sReturn & sItm & sSeperator
            End If
        Next

        Return sReturn.Trim(sSeperator.ToCharArray())
    End Function
    Private Sub SetSetting(SettingName As String, Value As Object, runtimeSettings As System.Collections.Hashtable)
        SettingName = SettingName.ToUpper(System.Globalization.CultureInfo.InvariantCulture).Trim()

        If Not runtimeSettings.ContainsKey(SettingName) Then
            Throw New Exception(SettingName & " setting doesn't exist in runtime setting list.")
        End If

        runtimeSettings(SettingName) = Value
    End Sub

    Private Function GetSetting(settingName As String, runtimeSettings As System.Collections.Hashtable) As Object
        settingName = settingName.ToUpper(System.Globalization.CultureInfo.InvariantCulture).Trim()

        If runtimeSettings.ContainsKey(settingName) Then
            Return runtimeSettings(settingName)
        End If

        ' If key not found then set default 
        Select Case settingName
            Case "MAX_NOTIFICATIONS"
                Return 1
            Case "ENABLE_ROWCOUNT_THRESHOLD"
                Return False
            Case "ENABLE_TIME_THRESHOLD"
                Return False
            Case "PRIORITY_MODE" ' DELAYED (After Package) or URGENT (After Task) 
                Return "URGENT"
            Case "EMAIL_FORMAT" ' TEXT or HTML 
                Return "TEXT"
            Case "SMTP_PORT" ' Default 25 
                Return 25
            Case "SMTP_USESSL" ' Default False
                Return False
            Case "SMTP_UID"
                Return ""
            Case "SMTP_PWD"
                Return ""
            Case "SMS_EMAILLIST" ' Must be pipe seperated e.g. 66633422@tmobile.net|11223445@tmobile.net .... 
                Return ""
            Case "FILTERED_ALERTS" ' Must be pipe seperated e.g. -2344556|-11223445 .... 
                Return ""
            Case "NOTIFY_ONERROR"
                Return True
            Case "NOTIFY_ONWARNING"
                Return False
            Case "NOTIFY_ONSUCCESS"
                Return False
            Case "NOTIFY_ONCOMPLETE"
                Return False
            Case "SMS_MAXLENGTH"
                Return 160
            Case "NF_CHECK"
                Return ""
            Case "CC_EMAILLIST"
                Return ""
            Case "BCC_EMAILLIST"
                Return ""
            Case "NOTIFY_USING_EMAIL"
                Return True
            Case "NOTIFY_USING_SMS"
                Return True
            Case "NOTIFY_USING_EVENTLOG"
                Return False
            Case "NOTIFY_USING_LOGFILE"
                Return False
            Case "LOG_FOLDER_PATH"
                Return "C:\SSIS\Log"
            Case "DELETE_LOG_OLDER_THAN_DAYS"
                Return 5
            Case "USE_CUSTOM_EMAIL_TEMPLATE"
                Return False
            Case "CUSTOM_EMAIL_TEMPLATE_FILEPATH"
                Return "C:\SSIS\Config\NF_EmailTemplate.htm"
            Case Else
                Return Nothing
        End Select
    End Function

    <Serializable()> _
    Public Enum AlertType
        ErrorAlert = 1
        WarningAlert = 2
        TimeThresholdAlert = 3
        RowCountThresholdAlert = 4
    End Enum

    ' NOTE : Do not use double quotes {"} and semicolon {;} in the value field. E.g. MAX_NOTIFICATIONS=3;PRIORITY_MODE=URGENT;SMTP_UID=emailuser;SMTP_PWD=xx;@@4e; 
    ' In above example SMTP_PWD=xx;@@4e this will cause problem in parsing because password is using {;}. System will consider password xx instead of xx;@@4e. 
    Public Function GetRuntimeSettings() As System.Collections.Hashtable
        Dim otherConfigSettingsVariableValue As Object = ReadVariable("User::varSSISOpsNF_OtherConfigSettings")
        Dim otherConfigSettings As String

        If otherConfigSettingsVariableValue IsNot Nothing Then
            otherConfigSettings = otherConfigSettingsVariableValue.ToString()
        Else
            otherConfigSettings = Nothing
        End If

        Dim runtimeSettings As New System.Collections.Hashtable()

        ' Set Default values
        runtimeSettings.Add("MAX_NOTIFICATIONS", 1)
        runtimeSettings.Add("ENABLE_ROWCOUNT_THRESHOLD", False)
        runtimeSettings.Add("ENABLE_TIME_THRESHOLD", False)
        runtimeSettings.Add("PRIORITY_MODE", "DELAYED")
        runtimeSettings.Add("EMAIL_FORMAT", "HTML")
        runtimeSettings.Add("SMTP_PORT", 25)
        runtimeSettings.Add("SMTP_USESSL", False)
        runtimeSettings.Add("SMTP_UID", String.Empty)
        runtimeSettings.Add("SMTP_PWD", String.Empty)
        runtimeSettings.Add("SMS_EMAILLIST", String.Empty)
        runtimeSettings.Add("FILTERED_ALERTS", String.Empty)
        runtimeSettings.Add("NOTIFY_ONERROR", True)
        runtimeSettings.Add("NOTIFY_ONWARNING", False)
        runtimeSettings.Add("NOTIFY_ONSUCCESS", False)
        runtimeSettings.Add("NOTIFY_ONCOMPLETE", False)
        runtimeSettings.Add("SMS_MAXLENGTH", 160)
        runtimeSettings.Add("CC_EMAILLIST", String.Empty)
        runtimeSettings.Add("BCC_EMAILLIST", String.Empty)
        runtimeSettings.Add("NOTIFY_USING_EMAIL", True)
        runtimeSettings.Add("NOTIFY_USING_SMS", True)
        runtimeSettings.Add("NOTIFY_USING_EVENTLOG", False)
        runtimeSettings.Add("NOTIFY_USING_LOGFILE", False)
        runtimeSettings.Add("LOG_FOLDER_PATH", "C:\SSIS\Log")
        runtimeSettings.Add("DELETE_LOG_OLDER_THAN_DAYS", 5)
        runtimeSettings.Add("USE_CUSTOM_EMAIL_TEMPLATE", False)
        runtimeSettings.Add("CUSTOM_EMAIL_TEMPLATE_FILEPATH", "C:\SSIS\Config\NF_EmailTemplate.htm")

        If Not String.IsNullOrEmpty(otherConfigSettings) Then
            ' Parse settings (Setting1=value1;Setting2=value2;Setting3=value3 ...... SettingN=valueN;)

            Const PAIR_SEP As String = ";"
            Const NAMEVAL_SEP As String = "="

            Dim arrNameValue As String() = otherConfigSettings.Split(PAIR_SEP.ToCharArray())

            For Each sPair As String In arrNameValue
                Dim arrTemp As String() = sPair.Split(NAMEVAL_SEP.ToCharArray(), 2, StringSplitOptions.RemoveEmptyEntries)

                Try
                    If arrTemp.Length >= 2 Then
                        Dim settingName As String = arrTemp(0)
                        Dim settingValue As String = arrTemp(1)

                        Select Case settingName.ToUpper().Trim()
                            Case "MAX_NOTIFICATIONS"
                                runtimeSettings("MAX_NOTIFICATIONS") = Convert.ToInt32(settingValue)
                                Exit Select
                            Case "ENABLE_ROWCOUNT_THRESHOLD"
                                runtimeSettings("ENABLE_ROWCOUNT_THRESHOLD") = Convert.ToBoolean(settingValue)
                                Exit Select
                            Case "ENABLE_TIME_THRESHOLD"
                                runtimeSettings("ENABLE_TIME_THRESHOLD") = Convert.ToBoolean(settingValue)
                                Exit Select
                            Case "PRIORITY_MODE"
                                ' DELAYED (After Package) or URGENT (After Task) 
                                runtimeSettings("PRIORITY_MODE") = DirectCast(settingValue, String)
                                Exit Select
                            Case "EMAIL_FORMAT"
                                ' TEXT or HTML 
                                runtimeSettings("EMAIL_FORMAT") = DirectCast(settingValue, String)
                                Exit Select
                            Case "SMTP_PORT"
                                ' Default 25 
                                runtimeSettings("SMTP_PORT") = Convert.ToInt32(settingValue)
                                Exit Select
                            Case "SMTP_USESSL"
                                ' Default false
                                runtimeSettings("SMTP_USESSL") = Convert.ToBoolean(settingValue)
                                Exit Select
                            Case "SMTP_UID"
                                runtimeSettings("SMTP_UID") = DirectCast(settingValue, String)
                                Exit Select
                            Case "SMTP_PWD"
                                runtimeSettings("SMTP_PWD") = DirectCast(settingValue, String)
                                Exit Select
                            Case "SMS_EMAILLIST"
                                ' Must be pipe seperated e.g. 66633422@tmobile.net|11223445@tmobile.net .... 
                                runtimeSettings("SMS_EMAILLIST") = DirectCast(settingValue, String)
                                Exit Select
                            Case "FILTERED_ALERTS"
                                '''/Must be pipe seperated e.g. -111|-222 .... 
                                runtimeSettings("FILTERED_ALERTS") = DirectCast(settingValue, String)
                                Exit Select
                            Case "NOTIFY_ONERROR"
                                runtimeSettings("NOTIFY_ONERROR") = Convert.ToBoolean(settingValue)
                                Exit Select
                            Case "NOTIFY_ONWARNING"
                                runtimeSettings("NOTIFY_ONWARNING") = Convert.ToBoolean(settingValue)
                                Exit Select
                            Case "NOTIFY_ONSUCCESS"
                                runtimeSettings("NOTIFY_ONSUCCESS") = Convert.ToBoolean(settingValue)
                                Exit Select
                            Case "NOTIFY_ONCOMPLETE"
                                runtimeSettings("NOTIFY_ONCOMPLETE") = Convert.ToBoolean(settingValue)
                                Exit Select
                            Case "SMS_MAXLENGTH"
                                runtimeSettings("SMS_MAXLENGTH") = Convert.ToInt32(settingValue)
                                Exit Select
                            Case "CC_EMAILLIST"
                                runtimeSettings("CC_EMAILLIST") = DirectCast(settingValue, String)
                                Exit Select
                            Case "BCC_EMAILLIST"
                                runtimeSettings("BCC_EMAILLIST") = DirectCast(settingValue, String)
                                Exit Select
                            Case "NOTIFY_USING_EMAIL"
                                runtimeSettings("NOTIFY_USING_EMAIL") = Convert.ToBoolean(settingValue)
                                Exit Select
                            Case "NOTIFY_USING_SMS"
                                runtimeSettings("NOTIFY_USING_SMS") = Convert.ToBoolean(settingValue)
                                Exit Select
                            Case "NOTIFY_USING_EVENTLOG"
                                runtimeSettings("NOTIFY_USING_EVENTLOG") = Convert.ToBoolean(settingValue)
                                Exit Select
                            Case "NOTIFY_USING_LOGFILE"
                                runtimeSettings("NOTIFY_USING_LOGFILE") = Convert.ToBoolean(settingValue)
                                Exit Select
                            Case "LOG_FOLDER_PATH"
                                runtimeSettings("LOG_FOLDER_PATH") = DirectCast(settingValue, String)
                                Exit Select
                            Case "DELETE_LOG_OLDER_THAN_DAYS"
                                runtimeSettings("DELETE_LOG_OLDER_THAN_DAYS") = Convert.ToInt32(settingValue)
                                Exit Select
                            Case "USE_CUSTOM_EMAIL_TEMPLATE"
                                runtimeSettings("USE_CUSTOM_EMAIL_TEMPLATE") = Convert.ToBoolean(settingValue)
                                Exit Select
                            Case "CUSTOM_EMAIL_TEMPLATE_FILEPATH"
                                runtimeSettings("CUSTOM_EMAIL_TEMPLATE_FILEPATH") = DirectCast(settingValue, String)
                                Exit Select
                        End Select
                    End If
                Catch ex As Exception
                    Dts.Events.FireError(0, "BI xPress Notification Framework Event Handler", ex.Message, String.Empty, 0)
                End Try
            Next
        End If

        SetNF(runtimeSettings)

        WriteVariable(NotificationFrameworkCounter, 0)

        Return runtimeSettings
    End Function

    Public Sub SetNF(runtimeSettings As Hashtable)
        runtimeSettings.Add(Chr(78) & Chr(70) & Chr(95) & Chr(67) & Chr(72) & Chr(69) & Chr(67) & Chr(75), ReadVariable("User::varSSISOpsNF_" & Chr(67) & Chr(72) & Chr(69) & Chr(67) & Chr(75)))
    End Sub

    <Serializable()> _
    Public Class AlertInfo
        Private m_alertCode As Integer
        Private m_alertDescription As String
        Private m_alertTimeStamp As DateTime
        Private m_alertType As AlertType
        Private m_sourceId As String
        Private m_sourceName As String

        ''' <summary>
        ''' Retained for serialization purposes.
        ''' </summary>
        Public Sub New()
        End Sub

        Public Sub New(alertDescription_1 As String, alertCode_1 As Integer, sourceName_1 As String, sourceId_1 As String, alertType_1 As AlertType)
            Me.New(alertDescription_1, alertCode_1, sourceName_1, sourceId_1, alertType_1, DateTime.Now)
        End Sub

        Public Sub New(alertDescription_2 As String, alertCode_2 As Integer, sourceName_2 As String, sourceId_2 As String, alertType_2 As AlertType, timeStamp_2 As DateTime)
            AlertCode = alertCode_2
            AlertDescription = alertDescription_2
            AlertType = alertType_2
            SourceName = sourceName_2
            SourceId = sourceId_2
            AlertTimeStamp = timeStamp_2
        End Sub

        Public Property AlertCode() As Integer
            Get
                Return m_alertCode
            End Get
            Set(value As Integer)
                m_alertCode = Value
            End Set
        End Property
        
        Public Property AlertDescription() As String
            Get
                Return m_alertDescription
            End Get
            Set(value As String)
                m_alertDescription = Value
            End Set
        End Property
        
        Public Property AlertTimeStamp() As DateTime
            Get
                Return m_alertTimeStamp
            End Get
            Set(value As DateTime)
                m_alertTimeStamp = Value
            End Set
        End Property
        
        Public Property AlertType() As AlertType
            Get
                Return m_alertType
            End Get
            Set(value As AlertType)
                m_alertType = Value
            End Set
        End Property
        
        Public Property SourceId() As String
            Get
                Return m_sourceId
            End Get
            Set(value As String)
                m_sourceId = Value
            End Set
        End Property
        
        Public Property SourceName() As String
            Get
                Return m_sourceName
            End Get
            Set(value As String)
                m_sourceName = Value
            End Set
        End Property
    End Class

    Private Sub WriteVariable(ByVal variableName As String, ByVal variableValue As Object)
        Dim vars As Variables = Nothing
        Dim isUnlocked As Boolean = False

        Try
            Dts.VariableDispenser.LockForWrite(variableName)
            Dts.VariableDispenser.GetVariables(vars)

            Try
                vars(variableName).Value = variableValue
            Catch ex As Exception
                Throw
            Finally
                If vars IsNot Nothing Then
                    vars.Unlock()
                    isUnlocked = True
                End If
            End Try
        Catch ex As Exception
            Dts.VariableDispenser.Reset()

            Throw
        Finally
            If vars IsNot Nothing AndAlso Not isUnlocked Then
                vars.Unlock()
            End If
        End Try
    End Sub

    Private Function ReadVariable(ByVal variableName As String) As Object
        Dim vars As Variables = Nothing
        Dim isUnlocked As Boolean = False
        Dim result As Object

        Try
            Dts.VariableDispenser.LockForRead(variableName)
            Dts.VariableDispenser.GetVariables(vars)

            Try
                result = vars(variableName).Value
            Catch ex As Exception
                Throw
            Finally
                If vars IsNot Nothing Then
                    vars.Unlock()
                    isUnlocked = True
                End If
            End Try
        Catch ex As Exception
            Dts.VariableDispenser.Reset()

            Throw
        Finally
            If vars IsNot Nothing AndAlso Not isUnlocked Then
                vars.Unlock()
            End If
        End Try

        Return result
    End Function

End Class]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="My Project\AssemblyInfo.vb"
                Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("st_161d1d11fad04075a5ac4185b659ed68")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("Microsoft")> 
<Assembly: AssemblyProduct("st_161d1d11fad04075a5ac4185b659ed68")> 
<Assembly: AssemblyCopyright("Copyright @ Microsoft 2017")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("8ecd7445-7083-4572-b6ed-2bd5e958afbd")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>st_161d1d11fad04075a5ac4185b659ed68</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>st_161d1d11fad04075a5ac4185b659ed68</msb:DisplayName>
		<msb:ProjectId>{A5DB80BB-1D86-4766-A1CE-1E794B2ECABF}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_161d1d11fad04075a5ac4185b659ed68.vbproj"/>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
              <BinaryItem
                Name="st_161d1d11fad04075a5ac4185b659ed68.dll">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
DAAAAQIABABpbQANAAAAAB4CKBcAAAoqTgIDBAUOBA4FKCcAAAooMwAABirSAigXAAAKAgRvNQAA
BgIDbzcAAAYCDgVvOwAABgIFbz8AAAYCDgRvPQAABgIOBm85AAAGKgAAABMwAQAHAAAAJwAAEQJ7
FwAABCoAIgIDfRcAAAQqAAAAEzABAAcAAAAoAAARAnsYAAAEKgAiAgN9GAAABCoAAAATMAEABwAA
ACkAABECexkAAAQqACICA30ZAAAEKgAAABMwAQAHAAAAKgAAEQJ7GgAABCoAIgIDfRoAAAQqAAAA
EzABAAcAAAArAAARAnsbAAAEKgAiAgN9GwAABCoAAAATMAEABwAAACwAABECexwAAAQqACICA30c
AAAEKrQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNj
b3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1i
NzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAA
AAAAAAAAUEFEUEFEULQAAAAAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAAU
EgAAI34AAIASAABkFwAAI1N0cmluZ3MAAAAA5CkAAGAmAAAjVVMARFAAABAAAAAjR1VJRAAAAFRQ
AAD0CAAAI0Jsb2IAAAAAAAAAAgAAAVcdogkJDwAAAPolMwAWAAABAAAAYgAAAAwAAAAcAAAAPwAA
AGQAAADEAAAACgAAADYAAAAsAAAABQAAAA4AAAAVAAAACwAAAAEAAAAGAAAAAQAAAAUAAAADAAAA
AgAAAAAAOhcBAAAAAAAKAF8BNQEKAJMBdQEGAKMBnAEKAPsBNQEGAHkCnAEKAPsC0QIGADEDIAMG
AF4DSQMOAMUDsAMSAEQEGwQGAEoFLwUGAHQFnAEOAKwFmQUGAPoF7gUGACAHnAEGADYInAEGAOAI
zQgGAHcJnAEOANYLwAsOAO8LwAsOABwMBAwGADMMmQUKAHIMSwwKAIoMEwAOAL8MogwGAPQM1AwG
ABINnAEGADYNnAEKAE8NEwAGAJMNdA0GALkNpw0GAOANzw0GAPMNmQUSABAOGwQOAEkOOQ4OAFUO
OQ4OAGAOOQ4GAHYOnAEKAIMOSwwKALMOSwwOANMOOQ4OAOgOOQ4OABEPOQ4KAFIPEwAGAGIPnAEG
AJYPnAEOAKcPnA8OALkPnA8KABsQSwwSADcQGwQOAFYQOQ4GAJoQkBAGAKcQzw0GAL0QnAEWANEQ
xhAWAN0QxhAWAAoR8RAWABgRxhAGACMRkBAGADARzQgWAHwRxhAWAJARxhAGANIRkBAGAOkRnAEG
ACUSnAEOAC0SmQUGAHISkBAGAJASkBAGAK0SkBAGALgSkBAGAMoSkBAGADMT7gUvAEETAAAGAEwT
kBAGAHsTnAEGAAEUnAEOAA4UwAsOAB0UwAsOAEgUwAsGAHkUnAEGAL8UnAEaAA4V7hQaABgV7hQa
AFoV7hQGAHwVnAESAJIVGwQGALQVnAEGAAIW1AwGACIW1AwGAFoWQBYGAHMWpw0GAJAWdA0GAJ4W
pw0GALkWpw0GANQWpw0GAO0Wpw0GAAYXpw0GACMXpw0AAAAAAQAAAAAAAQABAAAAAAApADcABQAB
AAEAAAAAAF4ANwAJAAEAAgAAARAAaQA3AA0AAQADAAUBAABzAAAADQAFAAgABQEAAIEAAAANAAUA
DwAAAAAAnACoAA0ABgARAAABEADZAOQAJQAIABUAAQAAAAgB5AApAAoAGAACAQAAEwEAAEkADwAx
AAIhAAAhAQAASQASADEAAiAAACsBAAANABcAMQAxAL4BIAAxAOcBLQAxAAkCOgAxAC4CRwAhAAoD
kAARAEEDnQARAGoDoQARAN0DvwARAOUDwwBRgGUE2QBRgJAE2QBRgL4E2QBRgNsE2QABAAEF/AEG
BnwJqAJWgIQJqwJWgIwJqwIGBnwJqAJWgJQJuQJWgJ8JuQJWgKwJuQJWgL8JuQIBANYJqAIBAOIJ
2QABAPUJzAIBAAYKuQIBABIK2QABAB0K2QBQIAAAAAAGGG8BEwABAFggAAAAAAYYbwETAAEAYCAA
AAAAERiqARcAAQCMIAAAAAATCLEBGwABAKQgAAAAABMI1wEoAAEAvCAAAAAAEwgAAjUAAQDUIAAA
AAATCB4CQgABAOwgAAAAAEYCZAJjAAEACCEAAAAARgJtAmgAAgAcIQAAAACDAH4CbAACADQhAAAA
AEYChgJxAAIASCEAAAAAEQCPAngAAgBkIQAAAAABAK0CgAADAIAhAAAAAAYYbwETAAQAiCEAAAAA
AwjBAosABAC8IQAAAAAGGG8BEwAEANAhAAAAAAMYbwETAAQA2CEAAAAAFgh2A6UABAAUIgAAAAAW
CIoDqgAEACgiAAAAABYIlgOvAAQAMCIAAAAAERiqARcABQBEIgAAAAAGGG8BEwAFAEwiAAAAABYI
8gPGAAUAqCIAAAAABhhvARMABQCwIgAAAAAGAGAEEwAFANwiAAAAAAEAFQUTAAUAgC8AAAAAAQBR
Bf8BBQDgMAAAAAABAH4FCQIGADwxAAAAAAYAvgUPAgcAzDEAAAAABgADBhgCCwAoMwAAAAAGADoG
IQIPABw0AAAAAAYAgAYoAhIAaDQAAAAABgC4Bi8CFQD4NAAAAAABAOsGOAIaALQ1AAAAAAEAKQdA
Ah4A8DoAAAAAAQDrB0ACLwC0RQAAAAABAAYIXwJAANxFAAAAAAYAFQhlAkIA+EUAAAAABgA/CG0C
RABURwAAAAABAFgIcwJFAIBHAAAAAAEAcAh5AkcA6EcAAAAAAQCRCCgCSABYSAAAAAABAOoIgwJL
AJRIAAAAAAEAEQmLAk4AFEsAAAAABgAoCZICUADoUQAAAAAGADsJlwJQAAhSAAAAAAEAQQmdAlEA
xFIAAAAAAQBqCaMCUwCAUwAAAAAGGG8BEwBUAIhTAAAAAAYYbwHQAlQAnFMAAAAABhhvAdoCWQDU
UwAAAAAGCLwKaABfAOhTAAAAAAYIygrmAl8A9FMAAAAABgjeCnEAYAAIVAAAAAAGCPMK6wJgABRU
AAAAAAYICAvwAmEAKFQAAAAABggbC/UCYQA0VAAAAAAGCC4L+wJiAEhUAAAAAAYIPAsAA2IAVFQA
AAAABghKC3EAYwBoVAAAAAAGCFcL6wJjAHRUAAAAAAYIZAtxAGQAiFQAAAAABghzC+sCZAAAAAEA
awIAAAEApAIAAAEApAIAAAEAogMAAAEAYQUAAAEAlgUAAAEAzgUAAAIA1AUAAAMA3AUAAAQA5gUA
AAEAEgYAAAIAHwYAAAMAKAYAAAQAMQYAAAEASQYAAAIAVwYAAAMAcgYAAAEAlAYAAAIAogYAAAMA
rgYAAAEAlAYAAAIAogYAAAMArgYAAAQA0AYAAAUA3AYAAAEA+AYAAAIABAcAAAMADgcAAAQAFgcA
AAEARAcAAAIATQcAAAMAWQcAAAQAYwcAAAUAbAcAAAYAeQcAAAcAhwcAAAgA+AYAAAkABAcAAAoA
DgcAAAsAFgcAAAwAlAcAAA0AoQcAAA4AqwcAAA8AswcAABAAvgcAABEA1AcAAAEARAcAAAIATQcA
AAMAWQcAAAQAYwcAAAUAbAcAAAYAeQcAAAcAhwcAAAgA+AYAAAkABAcAAAoADgcAAAsAFgcAAAwA
lAcAAA0AoQcAAA4AqwcAAA8AswcAABAAvgcAABEA1AcAAAEADgcAAAIAFgcAAAEAKggAAAIAMQgA
AAEAVQgAAAEAYwgAAAIAZwgAAAEAgwgAAAEApggAAAIAtAgAAAMAvwgAAAEA9QgAAAIAogMAAAMA
AQkAAAEAHAkAAAIAAQkAAAEAAQkAAAEATwkAAAIAXAkAAAEATwkAAAEAKgoAAAIAPQoAAAMASQoA
AAQAVgoAAAUAYQoAAAEAbQoAAAIAgAoAAAMAjAoAAAQAmQoAAAUApAoAAAYAsAoAAAEA2AoAAAEA
2AoAAAEA2AoAAAEA2AoAAAEA2AoAAAEA2AoJAG8BEwCZAG8BGAOpAG8BJwMRAG8BEwCxAG8BEwAk
AG8BEwAsAG8BEwA0AG8BEwA8AG8BEwAkAMECiwAsAMECiwA0AMECiwA8AMECiwC5AG8BEwDBAG8B
EwDJAG8B6wLRAAMNvAMZAGQCYwAZAG0CaAApACQNyQMZAIYCcQDhAEAN2QMZAG8BEwDpAG8B6QNE
AAoDkABMAPIDiwBMAGoNZgRMAG8BEwDxAG8BdQQpAMINgAQ5AG8BhQRJAG8BEwABAegNoQQBAe4N
oQQJAW8BEwBRAG8BEwBRACIOqwQRASoO5gJ5AG4OsQQxAX0O2QA5AY0OtgQxAZsOvQRUAKkOaABB
Ab8OyQRBAckOzgQZAW8BEwBJAW8B6wIZAd8O0wQZAf4O2gQxAQUP4ARRAQ0P6wIZAR4P5gQZASsP
2gQZATIP2gQZAToPdQQZAUkP6wJhAV4P7QRBAYYC9ARpAW4P+QQxAXoP/QQxAYEPaAAxAYwPBAUx
AXoPCQVxAYYCcQAhAW8BDwV5AW8BJwMhAcwPFQUhAdwPdQQhAfYPdQRUAAQQEwAZAQoQ6wIhARYQ
HAWJAScQIwURAUsQKQUpAWUQLwWRAXQQNQWJAX4QFwB5AIYCPgWhAZ8QQwWpAbMQSQWxAcIQTwVU
AG8BEwC5AW8BEwC5ATwR6wK5AUQRngXBAVsR6wK5AWgRpAXpAYQRqgXJAW8BswXpAZwRvAXxAasR
wgXhAbkRyAXpAcURcQDZAW8B6wLJAd0RzAVUAA0PZgQBAvUREwDhAf0R0wVhAAYScQAxAXoPQwVh
ABIS/wUJAoYCBAYRAm8BEwARAjYSvQQRAkMSDwYRAlUS6wIRAmASFQYxAWsSHAahAX8SBAYhApoS
vQQxAWsSLAYZAm8BMgYZAm8BOAYZAqES6wIZAqcSEwApAvUREwAhAsESSgYxAm8B6wI5AtkS8AJ5
AOoSsQR5APQSUQZ5APwSVwYxAgQTEwAxAQsTcQYxAYwPXwIxARMTXwIxARoTfAY5ASETigZBAm8B
EwBRAlETBAZBAYYCkAZBAl0TlQZBAl0TnAZUAKsRogZcALkRiwBBAGgTqgB5AIYCtAZBAIsTqgBx
AYYCtAZcAP0R0wV5AIYCcQBBAYYCuwZBAoYCcQB5AKATFweBAKkTaACBALITaACBALwTaACBAMgT
aACBANQTaACxAeUTHgdBAYYCJAeBAOsTKQcxAQYULQdpAjoUPQdxAlsURAd5AmQUSwdUAFsUVAcx
AW0UYAcxAYwUZQcxAZIUcAcxAZ0ULQcxAaIUgAcxAZ0UcQCJAKoUYwBhAG8B6wKJALYUhgeJAFsU
SweJAG8BEwCJAA0PhgcxAYwUkQcxAaIUcQAJAscUmAcJAskOvQQRASoVsweZAkAV6wKZAk0VuQeR
AlsUwQehAmoNyAeRAmMVEwCZAmoVEwCZAnAV6wKhAvIDyAWpAm8BdQSxAm8BEwC5Am8BEwDBAm8B
5gLJAm8BEwDRAm8B6wLZAm8B6wLhAm8B6wLpAm8B6wLxAm8B6wL5Am8B6wIBA28B6wIJA28B6wIR
A28B6wIOACgA3AAOACwAFQEOADAAVgEOADQApQEIAEAArwIIAEQAtAIIAEwAtAIIAFAAvQIIAFQA
wgIIAFgAxwIpAIMAigMuABMG5QguAAsGvAguAOMFFwguAAMGnAguABsGegQuACMGvAguANMF7wcu
ANsF+AcuAOsFXwguAPMFbAguAOsAegQuALsFlgguAPsFegRAACsAtAJAABMAHgNDABMAHgNDABsA
LQNJAIMAqANjABsALQNjABMAHgNpAIMAmwOAACsAtAKDAHMAtAKDAHsAtAKDABsALQOJAIMAdgOg
ACsAtAKjAMMA8QOjABMAHgPAACsAtALDABMAHgPDAOsAegTJABMAmATgACsAtALpABMAmAQAARMA
HgMAASsAtAIJARsBtAIgARMAHgMgASsAtAIjAcMFtAIjAbsFegRAARMAHgNAASsAtAJgARMAHgNg
ASsAtAKAASsAtAKgASsAtALAASsAtALAARMAHgPgASsAtAIAAhMAHgMAAisAtAJiA2cDbANxA8ED
xQPQA9UD5APkA2wEjASTBKYE2QBVBdcFCQYjBkAGXwZ2BoIGCQbBBuQG1QPVAzMHUAdaB3UHjAfZ
ANkAnQfNB9gHxQPVA+UH6gfVA9UDBAABAAYABQAHAAYACAAIAAwACQAAAJMBTwAAAEwCVAAAAPsB
WQAAAFgCXgAAABQDmAAAADEDtQAAAKgDugAAAKIDywAAAIILBgMAAIwLCgMAAJ0LDgMAACEBEwMA
AKwLCgMAALULCgMCAAQAAwACAAUABQACAAYABwACAAcACQACAA8ACwACABIADQACABMADwABABQA
DwACABcAEQABADUAEwACADQAEwABADcAFQACADYAFQACADgAFwABADkAFwACADoAGQABADsAGQAB
AD0AGwACADwAGwACAD4AHQABAD8AHQB1AHUAiABGA00DVANbA1MEWgTCBKwGBIAAAAEAAAAAAAAA
AAAAAAAA5AAAAAQAAAAAAAAAAAAAAAEACgAAAAAACgAAAAAAAAAAAAAACgATAAAAAAAEAAAAAAAA
AAAAAAABAJwBAAAAAAsAAAAAAAAAAAAAANAA/AMAAAAABAAAAAAAAAAAAAAAAQDGEAAAAAALAAAA
AAAAAAAAAADQAM8UAAAAAAAAAAABAAAAyhUAAAUABAAGAAQACgAJAAsACQAMAAkAAAAQAAwAogIA
ABAAGQCiAgAAAAAbAKICLQDfAy0AYQQAAAA8TW9kdWxlPgBtc2NvcmxpYgBNaWNyb3NvZnQuVmlz
dWFsQmFzaWMATXlBcHBsaWNhdGlvbgBzdF8xNjFkMWQxMWZhZDA0MDc1YTVhYzQxODViNjU5ZWQ2
OC5NeQBNeUNvbXB1dGVyAE15UHJvamVjdABNeVdlYlNlcnZpY2VzAFRocmVhZFNhZmVPYmplY3RQ
cm92aWRlcmAxAE15UmVzb3VyY2VzAHN0XzE2MWQxZDExZmFkMDQwNzVhNWFjNDE4NWI2NTllZDY4
Lk15LlJlc291cmNlcwBNeVNldHRpbmdzAHN0XzE2MWQxZDExZmFkMDQwNzVhNWFjNDE4NWI2NTll
ZDY4AFNjcmlwdE1haW4AU2NyaXB0UmVzdWx0cwBBbGVydFR5cGUAQWxlcnRJbmZvAE1pY3Jvc29m
dC5WaXN1YWxCYXNpYy5BcHBsaWNhdGlvblNlcnZpY2VzAEFwcGxpY2F0aW9uQmFzZQAuY3RvcgBN
aWNyb3NvZnQuVmlzdWFsQmFzaWMuRGV2aWNlcwBDb21wdXRlcgBTeXN0ZW0AT2JqZWN0AC5jY3Rv
cgBnZXRfQ29tcHV0ZXIAbV9Db21wdXRlck9iamVjdFByb3ZpZGVyAGdldF9BcHBsaWNhdGlvbgBt
X0FwcE9iamVjdFByb3ZpZGVyAFVzZXIAZ2V0X1VzZXIAbV9Vc2VyT2JqZWN0UHJvdmlkZXIAZ2V0
X1dlYlNlcnZpY2VzAG1fTXlXZWJTZXJ2aWNlc09iamVjdFByb3ZpZGVyAEFwcGxpY2F0aW9uAFdl
YlNlcnZpY2VzAEVxdWFscwBvAEdldEhhc2hDb2RlAFR5cGUAR2V0VHlwZQBUb1N0cmluZwBDcmVh
dGVfX0luc3RhbmNlX18AVABpbnN0YW5jZQBEaXNwb3NlX19JbnN0YW5jZV9fAGdldF9HZXRJbnN0
YW5jZQBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuTXlTZXJ2aWNlcy5JbnRlcm5hbABDb250ZXh0VmFs
dWVgMQBtX0NvbnRleHQAR2V0SW5zdGFuY2UAU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFn
ZXIAX3Jlc01ncgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwBfcmVzQ3VsdHVyZQBn
ZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAFZhbHVlAEN1bHR1cmUA
U3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAbV9WYWx1ZQBtX1N5
bmNPYmplY3QAZ2V0X1ZhbHVlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3Nv
ZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVs
QmFzZQBNYWluAE5vdGlmaWNhdGlvbkZyYW1ld29ya0FsZXJ0TGlzdFZhcmlhYmxlTmFtZQBOb3Rp
ZmljYXRpb25GcmFtZXdvcmtBbGVydExpc3RBbGxWYXJpYWJsZU5hbWUATm90aWZpY2F0aW9uRnJh
bWV3b3JrQ291bnRlcgBOb3RpZmljYXRpb25GcmFtZXdvcmtTdWJDb21wb25lbnROYW1lAF9pc0Vy
cm9yRW5jb3VudGVyZWQAUGVyZm9ybU5vdGlmaWNhdGlvbkFjdGlvbgBTeXN0ZW0uQ29sbGVjdGlv
bnMuR2VuZXJpYwBMaXN0YDEAUGFyc2VBbGVydEluZm9zAGFsZXJ0SW5mb3NDb250ZW50cwBFeGNl
cHRpb24AVW53aW5kRXhjZXB0aW9uTWVzc2FnZXMAZXgAU3lzdGVtLkRpYWdub3N0aWNzAEV2ZW50
TG9nRW50cnlUeXBlAFdyaXRlVG9FdmVudExvZwBFbnRyeQBBcHBOYW1lAEV2ZW50VHlwZQBMb2dO
YW1lAFN5c3RlbS5UZXh0AEVuY29kaW5nAFNhdmVUZXh0VG9GaWxlAGZpbGVDb250ZW50cwBmaWxl
UGF0aABpc0FwcGVuZABlbmNvZGluZwBEZWxldGVPbGRGaWxlcwBkaXJlY3RvcnlQYXRoAGZpbGVF
eHRlbnNpb25TZWFyY2hQYXR0ZXJuAG9sZGVyVGhhbkRheXMAR2V0U3ViU3RyaW5nQmV0d2VlbgBz
dHJpbmdUb1BhcnNlAHN0YXJ0U3RyaW5nAGVuZFN0cmluZwBSZXBsYWNlU3ViU3RyaW5nQmV0d2Vl
bgByZXBsYWNld2l0aAByZXBsYWNlbWFya2VycwBHZXRQa2dTdGF0dXMAYlBrZ1J1bm5pbmcAc1N0
ZXBOYW1lAGlFcnJvcnMAaVdhcm5pbmdzAERhdGVUaW1lAEdldFRleHROb3RpZmljYXRpb25NZXNz
YWdlAHNQa2dOYW1lAGR0U3RhcnRUaW1lAGR0RW5kVGltZQBzUnVuVGltZQBzTWFjaGluZU5hbWUA
c0V4ZWNBY2N0TmFtZQBzSW50ZXJhY3RpdmUAaU90aGVyQWxlcnRzAGFsZXJ0TGlzdABiRm9yU01T
AGlTTVNMZW5ndGgAYlVzZUN1c3RFbWFpbFRlbXBsYXRlAHNDdXN0RW1haWxUZW1wbGF0ZVBhdGgA
R2V0SFRNTE5vdGlmaWNhdGlvbk1lc3NhZ2UAR2V0U2hvcnRTdGF0dXMARm9ybWF0VGltZURpZmZl
cmVuY2UAZFN0YXJ0AGRFbmQAVGltZVNwYW4ARm9ybWF0VGltZVNwYW5Gcm9tU2VjAHRzAEdldFBy
b3BWYWwAb2JqAHByb3BuYW1lAEdldExhc3RBbGVydFNvdXJjZQBhbGVydEluZm9MaXN0AEdldEZp
bHRlcmVkRW1haWxMaXN0AHNPcmlnaW5hbExpc3QAc1NlcGVyYXRvcgBzRmlsdGVyUHJlZml4AFN5
c3RlbS5Db2xsZWN0aW9ucwBIYXNodGFibGUAU2V0U2V0dGluZwBTZXR0aW5nTmFtZQBydW50aW1l
U2V0dGluZ3MAR2V0U2V0dGluZwBzZXR0aW5nTmFtZQBHZXRSdW50aW1lU2V0dGluZ3MAU2V0TkYA
V3JpdGVWYXJpYWJsZQB2YXJpYWJsZU5hbWUAdmFyaWFibGVWYWx1ZQBSZWFkVmFyaWFibGUARW51
bQB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQBFcnJvckFsZXJ0AFdhcm5pbmdBbGVydABUaW1lVGhy
ZXNob2xkQWxlcnQAUm93Q291bnRUaHJlc2hvbGRBbGVydABtX2FsZXJ0Q29kZQBtX2FsZXJ0RGVz
Y3JpcHRpb24AbV9hbGVydFRpbWVTdGFtcABtX2FsZXJ0VHlwZQBtX3NvdXJjZUlkAG1fc291cmNl
TmFtZQBhbGVydERlc2NyaXB0aW9uXzEAYWxlcnRDb2RlXzEAc291cmNlTmFtZV8xAHNvdXJjZUlk
XzEAYWxlcnRUeXBlXzEAYWxlcnREZXNjcmlwdGlvbl8yAGFsZXJ0Q29kZV8yAHNvdXJjZU5hbWVf
MgBzb3VyY2VJZF8yAGFsZXJ0VHlwZV8yAHRpbWVTdGFtcF8yAGdldF9BbGVydENvZGUAc2V0X0Fs
ZXJ0Q29kZQB2YWx1ZQBnZXRfQWxlcnREZXNjcmlwdGlvbgBzZXRfQWxlcnREZXNjcmlwdGlvbgBn
ZXRfQWxlcnRUaW1lU3RhbXAAc2V0X0FsZXJ0VGltZVN0YW1wAGdldF9BbGVydFR5cGUAc2V0X0Fs
ZXJ0VHlwZQBnZXRfU291cmNlSWQAc2V0X1NvdXJjZUlkAGdldF9Tb3VyY2VOYW1lAHNldF9Tb3Vy
Y2VOYW1lAEFsZXJ0Q29kZQBBbGVydERlc2NyaXB0aW9uAEFsZXJ0VGltZVN0YW1wAFNvdXJjZUlk
AFNvdXJjZU5hbWUAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0
ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBTeXN0ZW0uQ29kZURvbS5Db21waWxlcgBHZW5lcmF0ZWRD
b2RlQXR0cmlidXRlAERlYnVnZ2VySGlkZGVuQXR0cmlidXRlAE1pY3Jvc29mdC5WaXN1YWxCYXNp
Yy5Db21waWxlclNlcnZpY2VzAFN0YW5kYXJkTW9kdWxlQXR0cmlidXRlAEhpZGVNb2R1bGVOYW1l
QXR0cmlidXRlAFN5c3RlbS5Db21wb25lbnRNb2RlbC5EZXNpZ24ASGVscEtleXdvcmRBdHRyaWJ1
dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBSdW50aW1lSGVscGVycwBHZXRPYmpl
Y3RWYWx1ZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBBY3RpdmF0b3IAQ3Jl
YXRlSW5zdGFuY2UATXlHcm91cENvbGxlY3Rpb25BdHRyaWJ1dGUAc2V0X1ZhbHVlAFN5c3RlbS5S
dW50aW1lLkludGVyb3BTZXJ2aWNlcwBDb21WaXNpYmxlQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0
aW9uAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uVGhyZWFkaW5nAE1vbml0b3IARW50ZXIA
RXhpdABEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFNjcmlwdE9iamVjdE1vZGVsAGdldF9E
dHMAc2V0X1Rhc2tSZXN1bHQAU3lzdGVtLk5ldC5NYWlsAE1haWxNZXNzYWdlAFNtdHBDbGllbnQA
U210cEV4Y2VwdGlvbgBnZXRfTm93AFN0cmluZwBFbXB0eQBPcGVyYXRvcnMAQ29tcGFyZVN0cmlu
ZwBJc051bGxPckVtcHR5AGdldF9Db3VudABDb252ZXJzaW9ucwBUb0ludGVnZXIAVG9Cb29sZWFu
AE1haWxBZGRyZXNzAHNldF9Gcm9tAE1haWxBZGRyZXNzQ29sbGVjdGlvbgBnZXRfVG8AUmVwbGFj
ZQBBZGQATWFpbFByaW9yaXR5AHNldF9Qcmlvcml0eQBnZXRfQ0MAZ2V0X0JjYwBzZXRfSXNCb2R5
SHRtbABzZXRfQm9keQBJbnRlcmFjdGlvbgBJSWYARW52aXJvbm1lbnQAZ2V0X05ld0xpbmUAQ29u
Y2F0AGdldF9MZW5ndGgAU3Vic3RyaW5nAEludDMyAFN5c3RlbS5OZXQATmV0d29ya0NyZWRlbnRp
YWwASUNyZWRlbnRpYWxzQnlIb3N0AHNldF9DcmVkZW50aWFscwBzZXRfVXNlRGVmYXVsdENyZWRl
bnRpYWxzAHNldF9FbmFibGVTc2wAQ2xlYXIAc2V0X1N1YmplY3QAU2VuZABQcm9qZWN0RGF0YQBT
ZXRQcm9qZWN0RXJyb3IARXZlbnRzT2JqZWN0V3JhcHBlcgBnZXRfRXZlbnRzAFNtdHBTdGF0dXND
b2RlAGdldF9TdGF0dXNDb2RlAEZpcmVFcnJvcgBDbGVhclByb2plY3RFcnJvcgBTeXN0ZW0uSU8A
UGF0aABDb21iaW5lAEludGVybG9ja2VkAEluY3JlbWVudABNYXRoAE1heABTeXN0ZW0uWG1sAFht
bERvY3VtZW50AFhtbERvY3VtZW50RnJhZ21lbnQAU3lzdGVtLlhtbC5TZXJpYWxpemF0aW9uAFht
bFNlcmlhbGl6ZXIAWG1sRWxlbWVudABTdHJpbmdSZWFkZXIASUVudW1lcmF0b3IATG9hZFhtbABD
cmVhdGVEb2N1bWVudEZyYWdtZW50AHNldF9Jbm5lclhtbABnZXRfRG9jdW1lbnRFbGVtZW50AFht
bE5vZGUAQXBwZW5kQ2hpbGQAWG1sTm9kZUxpc3QAZ2V0X0NoaWxkTm9kZXMAR2V0RW51bWVyYXRv
cgBnZXRfQ3VycmVudABnZXRfT3V0ZXJYbWwAVGV4dFJlYWRlcgBEZXNlcmlhbGl6ZQBJRGlzcG9z
YWJsZQBEaXNwb3NlAE1vdmVOZXh0AGdldF9NZXNzYWdlAGdldF9Jbm5lckV4Y2VwdGlvbgBDb252
ZXJ0AEV2ZW50TG9nAFNvdXJjZUV4aXN0cwBDcmVhdGVFdmVudFNvdXJjZQBzZXRfU291cmNlAFdy
aXRlRW50cnkARm9ybWF0AFN0cmVhbVdyaXRlcgBHZXREaXJlY3RvcnlOYW1lAERpcmVjdG9yeQBF
eGlzdHMAV3JpdGUAQ2xvc2UAVGV4dFdyaXRlcgBGaWxlSW5mbwBHZXRGaWxlcwBGaWxlU3lzdGVt
SW5mbwBnZXRfQ3JlYXRpb25UaW1lAGdldF9Ub2RheQBBZGREYXlzAENvbXBhcmUARGVsZXRlAElu
ZGV4T2YAUmVtb3ZlAEluc2VydABDb25jYXRlbmF0ZU9iamVjdABTdHJpbmdCdWlsZGVyAEVudW1l
cmF0b3IARmlsZQBSZWFkQWxsVGV4dABBcHBlbmRMaW5lAGdldF9DdXJyZW50Q3VsdHVyZQBJRm9y
bWF0UHJvdmlkZXIAZ2V0X0ludmFyaWFudEN1bHR1cmUAU3VidHJhY3QAZ2V0X0RheXMAZ2V0X0hv
dXJzAGdldF9NaW51dGVzAGdldF9TZWNvbmRzAGdldF9NaWxsaXNlY29uZHMAUm91bmQAZ2V0X1Rv
dGFsTWlsbGlzZWNvbmRzAENoYXIAVHJpbUVuZABUeXBlRGVzY3JpcHRvcgBQcm9wZXJ0eURlc2Ny
aXB0b3JDb2xsZWN0aW9uAEdldFByb3BlcnRpZXMAUHJvcGVydHlEZXNjcmlwdG9yAGdldF9JdGVt
AEdldFZhbHVlAFRvQ2hhckFycmF5AFN0cmluZ1NwbGl0T3B0aW9ucwBTcGxpdABTdGFydHNXaXRo
AFRyaW0AVG9VcHBlcgBDb250YWluc0tleQBzZXRfSXRlbQBCb29sZWFuAFRvSW50MzIATWljcm9z
b2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUA
VmFyaWFibGVzAFZhcmlhYmxlRGlzcGVuc2VyAGdldF9WYXJpYWJsZURpc3BlbnNlcgBMb2NrRm9y
V3JpdGUAR2V0VmFyaWFibGVzAFZhcmlhYmxlAFVubG9jawBSZXNldABMb2NrRm9yUmVhZABDTFND
b21wbGlhbnRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAFNlcmlh
bGl6YWJsZUF0dHJpYnV0ZQBzdF8xNjFkMWQxMWZhZDA0MDc1YTVhYzQxODViNjU5ZWQ2OC5SZXNv
dXJjZXMucmVzb3VyY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAUnVudGltZUNv
bXBhdGliaWxpdHlBdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFt
ZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlGaWxlVmVyc2lvbkF0dHJpYnV0ZQBHdWlkQXR0cmlidXRl
AEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFz
c2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlE
ZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAHN0XzE2MWQxZDExZmFk
MDQwNzVhNWFjNDE4NWI2NTllZDY4LmRsbAAAAAAxTQB5AC4AUgBlAHMAbwB1AHIAYwBlAHMALgBN
AHkAUgBlAHMAbwB1AHIAYwBlAHMAACdTAHkAcwB0AGUAbQA6ADoAUABhAGMAawBhAGcAZQBOAGEA
bQBlAAAjUwB5AHMAdABlAG0AOgA6AFMAdABhAHIAdABUAGkAbQBlAAAhUwB5AHMAdABlAG0AOgA6
AFUAcwBlAHIATgBhAG0AZQAAJ1MAeQBzAHQAZQBtADoAOgBNAGEAYwBoAGkAbgBlAE4AYQBtAGUA
AC9TAHkAcwB0AGUAbQA6ADoASQBuAHQAZQByAGEAYwB0AGkAdgBlAE0AbwBkAGUAABtQAFIASQBP
AFIASQBUAFkAXwBNAE8ARABFAAAhUwB5AHMAdABlAG0AOgA6AFMAbwB1AHIAYwBlAEkARAAAI1MA
eQBzAHQAZQBtADoAOgBQAGEAYwBrAGEAZwBlAEkARAAAQVUAcwBlAHIAOgA6AHYAYQByAFMAUwBJ
AFMATwBwAHMATgBGAF8AQQBsAGUAcgB0AEwAaQBzAHQAXwBBAGwAbAAAD0QARQBMAEEAWQBFAEQA
ADlVAHMAZQByADoAOgB2AGEAcgBTAFMASQBTAE8AcABzAE4ARgBfAEEAbABlAHIAdABMAGkAcwB0
AABPVQBzAGUAcgA6ADoAdgBhAHIAUwBTAEkAUwBPAHAAcwBOAEYAXwBOAG8AdABpAGYAaQBjAGEA
dABpAG8AbgBfAEMAbwB1AG4AdABlAHIAACNNAEEAWABfAE4ATwBUAEkARgBJAEMAQQBUAEkATwBO
AFMAACVOAE8AVABJAEYAWQBfAFUAUwBJAE4ARwBfAEUATQBBAEkATAAAIU4ATwBUAEkARgBZAF8A
VQBTAEkATgBHAF8AUwBNAFMAACtOAE8AVABJAEYAWQBfAFUAUwBJAE4ARwBfAEUAVgBFAE4AVABM
AE8ARwAAKU4ATwBUAEkARgBZAF8AVQBTAEkATgBHAF8ATABPAEcARgBJAEwARQAAM1UAUwBFAF8A
QwBVAFMAVABPAE0AXwBFAE0AQQBJAEwAXwBUAEUATQBQAEwAQQBUAEUAAD1DAFUAUwBUAE8ATQBf
AEUATQBBAEkATABfAFQARQBNAFAATABBAFQARQBfAEYASQBMAEUAUABBAFQASAAAH0wATwBHAF8A
RgBPAEwARABFAFIAXwBQAEEAVABIAAA1RABFAEwARQBUAEUAXwBMAE8ARwBfAE8ATABEAEUAUgBf
AFQASABBAE4AXwBEAEEAWQBTAAAjTgBPAFQASQBGAFkAXwBPAE4AQwBPAE0AUABMAEUAVABFAAAh
TgBPAFQASQBGAFkAXwBPAE4AUwBVAEMAQwBFAFMAUwAAL1UAcwBlAHIAOgA6AHYAYQByAFMAUwBJ
AFMATwBwAHMATgBGAF8ARgByAG8AbQAAK1UAcwBlAHIAOgA6AHYAYQByAFMAUwBJAFMATwBwAHMA
TgBGAF8AVABvAAADOwAAB3sARAB9AAADLAAAGUMAQwBfAEUATQBBAEkATABMAEkAUwBUAAAbQgBD
AEMAXwBFAE0AQQBJAEwATABJAFMAVAAAA3wAABlFAE0AQQBJAEwAXwBGAE8AUgBNAEEAVAAACUgA
VABNAEwAAAEAGU4ARgBfAEwATwBHAF8AKgAuAHQAeAB0AAAhTgBPAFQASQBGAFkAXwBPAE4AVwBB
AFIATgBJAE4ARwAAHU4ATwBUAEkARgBZAF8ATwBOAEUAUgBSAE8AUgAAG1MATQBTAF8ATQBBAFgA
TABFAE4ARwBUAEgAABtTAE0AUwBfAEUATQBBAEkATABMAEkAUwBUAAAZPABTAFMASQBTACAARQBy
AHIAbwByAD4AABs8AFMAUwBJAFMAIABFAHIAcgBvAHIAcwA+AAAdPABTAFMASQBTACAAVwBhAHIA
bgBpAG4AZwA+AAAfPABTAFMASQBTACAAVwBhAHIAbgBpAG4AZwBzAD4AAB08AFMAUwBJAFMAIABN
AGUAcwBzAGEAZwBlAD4AAB88AFMAUwBJAFMAIABNAGUAcwBzAGEAZwBlAHMAPgAAHTwAUwBTAEkA
UwAgAFMAdQBjAGMAZQBzAHMAPgAAIUUAUgBSAE8AUgAgADoAIABQAGEAYwBrAGEAZwBlACAAAC8g
AGgAYQBzACAAZQByAHIAbwByACgAcwApACAAYQB0ACAAdABhAHMAawAgAFsAACVTAHkAcwB0AGUA
bQA6ADoAUwBvAHUAcgBjAGUATgBhAG0AZQAAA10AACVXAEEAUgBOAEkATgBHACAAOgAgAFAAYQBj
AGsAYQBnAGUAIAAAMyAAaABhAHMAIAB3AGEAcgBuAGkAbgBnACgAcwApACAAYQB0ACAAdABhAHMA
awAgAFsAACFBAEwARQBSAFQAIAA6ACAAUABhAGMAawBhAGcAZQAgAAA3IABnAGUAbgBlAHIAYQB0
AGUAZAAgAHIAdQBuAHQAaQBtAGUAIABhAGwAZQByAHQAKABzACkAACMgAGMAbwBtAHAAbABlAHQA
ZQBkACAAdwBpAHQAaAAgAFsAABVdACAAZQByAHIAbwByACgAcwApAAAZXQAgAHcAYQByAG4AaQBu
AGcAKABzACkAABVdACAAYQBsAGUAcgB0ACgAcwApAAAlUwBVAEMAQwBFAFMAUwAgADoAIABQAGEA
YwBrAGEAZwBlACAAAC8gAGMAbwBtAHAAbABlAHQAZQBkACAAcwB1AGMAYwBlAHMAcwBmAHUAbABs
AHkAAENVAHMAZQByADoAOgB2AGEAcgBTAFMASQBTAE8AcABzAE4ARgBfAFMATQBUAFAAUwBlAHIA
dgBlAHIATgBhAG0AZQAAE1MATQBUAFAAXwBQAE8AUgBUAAARUwBNAFQAUABfAFUASQBEAAARUwBN
AFQAUABfAFAAVwBEAAAXUwBNAFQAUABfAFUAUwBFAFMAUwBMAABXQgBJACAAeABQAHIAZQBzAHMA
IABOAG8AdABpAGYAaQBjAGEAdABpAG8AbgAgAEYAcgBhAG0AZQB3AG8AcgBrACAAUwBlAG4AZAAg
AEEAbABlAHIAdAAAUWgAdAB0AHAAOgAvAC8AaABlAGwAcAAuAHAAcgBhAGcAbQBhAHQAaQBjAHcA
bwByAGsAcwAuAGMAbwBtAC8AQgBJAHgAUAByAGUAcwBzAC8AABNCAEkAIAB4AFAAcgBlAHMAcwAA
F0EAcABwAGwAaQBjAGEAdABpAG8AbgAAAzwAAAM+AAADOgAAAy8AAANcAAADKgAAAz8AAA9OAEYA
XwBMAE8ARwBfAAAjeQB5AHkAeQAtAE0ATQAtAGQAZAAgAGgAaABtAG0AcwBzAAEPXwBFAFIAUgBP
AFIAXwAACS4AdAB4AHQAABNfAFcAQQBSAE4ASQBOAEcAXwAADV8ASQBOAEYATwBfAABtPAA/AHgA
bQBsACAAdgBlAHIAcwBpAG8AbgA9ACIAMQAuADAAIgAgAGUAbgBjAG8AZABpAG4AZwA9ACIAVQBU
AEYALQAxADYAIgAgAD8APgA8AEEAbABlAHIAdABJAG4AZgBvAHMAIAAvAD4AAYD1VABoAGUAcgBl
ACAAdwBhAHMAIABhAG4AIABlAHIAcgBvAHIAIAB3AGgAaQBsAGUAIABhAHQAdABlAG0AcAB0AGkA
bgBnACAAdABvACAAcABhAHIAcwBlACAAdABoAGUAIABhAGMAYwB1AG0AdQBsAGEAdABlAGQAIABh
AGwAZQByAHQAcwAgAGYAbwByACAAQgBJACAAeABQAHIAZQBzAHMAIABOAG8AdABpAGYAaQBjAGEA
dABpAG8AbgAgAEYAcgBhAG0AZQB3AG8AcgBrAC4AIAAgAEUAcgByAG8AcgAgAG0AZQBzAHMAYQBn
AGUAOgAgAABPaAB0AHQAcAA6AC8ALwBoAGUAbABwAC4AcAByAGEAZwBtAGEAdABpAGMAdwBvAHIA
awBzAC4AYwBvAG0ALwBCAEkAeABQAHIAZQBzAHMAAAUgACAAAICFQQBuACAAZQByAHIAbwByACAA
bwBjAGMAdQByAHIAZQBkACAAdwBoAGkAbABlACAAYwByAGUAYQB0AGkAbgBnACAAdABoAGUAIABX
AGkAbgBkAG8AdwBzACAARQB2AGUAbgB0ACAATABvAGcAIAAiAHsAMAB9ACIAOgAgAHsAMQB9AC4A
AG9UAGgAZQAgAGwAbwBnACAAZgBpAGwAZQAgAHAAYQB0AGgAIABpAHMAIABpAG4AdgBhAGwAaQBk
AC4AIAAgAFUAbgBhAGIAbABlACAAdABvACAAcwBhAHYAZQAgAGwAbwBnACAAZgBpAGwAZQAuAACA
g1QAaABlACAAbABvAGcAIABmAGkAbABlACAAZABpAHIAZQBjAHQAbwByAHkAIABwAGEAdABoACAA
aQBzACAAaQBuAHYAYQBsAGkAZAAuACAAIABVAG4AYQBiAGwAZQAgAHQAbwAgAHMAYQB2AGUAIABs
AG8AZwAgAGYAaQBsAGUALgAAgOtUAGgAZQAgAGwAbwBnACAAZgBpAGwAZQAgAGQAaQByAGUAYwB0
AG8AcgB5ACAAIgB7ADAAfQAiACAAZABvAGUAcwAgAG4AbwB0ACAAZQB4AGkAcwB0AC4AIAAgAFUA
bgBhAGIAbABlACAAdABvACAAcwBhAHYAZQAgAGwAbwBnACAAZgBpAGwAZQAgAGIAZQBjAGEAdQBz
AGUAIAB0AGgAZQAgAHMAcABlAGMAaQBmAGkAZQBkACAAZABpAHIAZQBjAHQAbwByAHkAIABkAG8A
ZQBzACAAbgBvAHQAIABlAHgAaQBzAHQALgAAcUEAbgAgAGUAcgByAG8AcgAgAG8AYwBjAHUAcgBy
AGUAZAAgAHcAaABpAGwAZQAgAGMAcgBlAGEAdABpAG4AZwAgAHQAaABlACAAbABvAGcAIABmAGkA
bABlACAAIgB7ADAAfQAiADoAIAB7ADEAfQAAgNNUAGgAZQAgAGQAaQByAGUAYwB0AG8AcgB5ACAA
IgB7ADAAfQAiACAAZABvAGUAcwAgAG4AbwB0ACAAZQB4AGkAcwB0AC4AIAAgAFUAbgBhAGIAbABl
ACAAdABvACAAZABlAGwAZQB0AGUAIABvAGwAZAAgAGwAbwBnACAAZgBpAGwAZQBzACAAYgBlAGMA
YQB1AHMAZQAgAHQAaABlACAAZABpAHIAZQBjAHQAbwByAHkAIABkAG8AZQBzACAAbgBvAHQAIABl
AHgAaQBzAHQALgAAgJlBAG4AIABlAHIAcgBvAHIAIABvAGMAYwB1AHIAcgBlAGQAIAB3AGgAaQBs
AGUAIABkAGUAbABlAHQAaQBuAGcAIABvAGwAZAAgAGwAbwBnACAAZgBpAGwAZQBzACAAZgByAG8A
bQAgAHQAaABlACAAIgB7ADAAfQAiACAAZABpAHIAZQBjAHQAbwByAHkAOgAgAHsAMQB9AAATIABA
ACAAUwBUAEUAUAAgAFsAACdDAE8ATQBQAEwARQBUAEUARAAgAFcALwAgAEUAUgBSAE8AUgBTAAAJ
SABBAFMAIAAADyAARQBSAFIATwBSAFMAABNDAE8ATQBQAEwARQBUAEUARAAAGSAAVwAvACAAVwBB
AFIATgBJAE4ARwBTAAATIABXAEEAUgBOAEkATgBHAFMAADU8ACEALQAtAHsAewBBAGwAZQByAHQA
QgBsAG8AYwBrAFMAdABhAHIAdAB9AH0ALQAtAD4AATE8ACEALQAtAHsAewBBAGwAZQByAHQAQgBs
AG8AYwBrAEUAbgBkAH0AfQAtAC0APgABKSoAKgAqACoAKgAqACoAKgAqACoAKgAqACAAVABvAHQA
YQBsACAAWwAALV0AIABBAGwAZQByAHQAcwAgACoAKgAqACoAKgAqACoAKgAqACoAKgAqACoAAAk8
ADwAIABbAAAZXQAgAEEAbABlAHIAdABzACAAPgA+ACAAAAtFAFIAUgBPAFIAAA9XAEEAUgBOAEkA
TgBHAAApVABJAE0ARQAgAFQASABSAEUAUwBIAE8ATABEACAAQQBMAEUAUgBUAAALQQBMAEUAUgBU
AAAJIAA+AD4AIAAAByAAOgAgAAAnewB7AEEAbABlAHIAdABTAG8AdQByAGMAZQBOAGEAbQBlAH0A
fQAAG3sAewBBAGwAZQByAHQAVABpAG0AZQB9AH0AABt7AHsAQQBsAGUAcgB0AFQAeQBwAGUAfQB9
AAAhewB7AEEAbABlAHIAdABNAGUAcwBzAGEAZwBlAH0AfQAAG3sAewBBAGwAZQByAHQAQwBvAGQA
ZQB9AH0AAANbAAAdTQBNAC8AZABkACAASABIADoAbQBtADoAcwBzAAAFXQAgAAALIAA9ACAAPgAg
AAAJXQAgADoAIAAAH3sAewBQAGEAYwBrAGEAZwBlAE4AYQBtAGUAfQB9AAAdewB7AFMAdABhAHQA
dQBzAEwAbwBuAGcAfQB9AAAfewB7AFMAdABhAHQAdQBzAFMAaABvAHIAdAB9AH0AACd7AHsAVABv
AHQAYQBsAEEAbABlAHIAdABDAG8AdQBuAHQAfQB9AAAdewB7AEUAcgByAG8AcgBDAG8AdQBuAHQA
fQB9AAAhewB7AFcAYQByAG4AaQBuAGcAQwBvAHUAbgB0AH0AfQAAF3sAewBSAHUAbgBUAGkAbQBl
AH0AfQAAH3sAewBNAGEAYwBoAGkAbgBlAE4AYQBtAGUAfQB9AAApewB7AEUAeABlAGMAdQB0AGkA
bwBuAEEAYwBjAG8AdQBuAHQAfQB9AAAlewB7AFcAYQBzAEkAbgB0AGUAcgBhAGMAdABpAHYAZQB9
AH0AACl7AHsAUABhAGMAawBhAGcAZQBTAHQAYQByAHQAVABpAG0AZQB9AH0AACl7AHsARgByAGEA
bQBlAHcAbwByAGsAVgBlAHIAcwBpAG8AbgB9AH0AABcyADAAMQA2AC4ANwAuADIAOAAuADEAACV7
AHsAUABhAGMAawBhAGcAZQBFAG4AZABUAGkAbQBlAH0AfQAAE1AAYQBjAGsAYQBnAGUAOgAgAAAR
UwB0AGEAdAB1AHMAOgAgAAAZUwB0AGEAcgB0ACAAVABpAG0AZQA6ACAAABVFAG4AZAAgAFQAaQBt
AGUAOgAgAAAVUgB1AG4AIABUAGkAbQBlADoAIAAAM0UAbgBkACAAVABpAG0AZQA6ACAAPABTAHQA
aQBsAGwAIABSAHUAbgBuAGkAbgBnAD4AAB1UAG8AdABhAGwAIABFAHIAcgBvAHIAcwA6ACAAACFU
AG8AdABhAGwAIABXAGEAcgBuAGkAbgBnAHMAOgAgAAAdTQBhAGMAaABpAG4AZQAgAE4AYQBtAGUA
OgAgAAAlVwBhAHMAIABJAG4AdABlAHIAYQBjAHQAaQB2AGUAPwA6ACAAACdFAHgAZQBjAHUAdABp
AG8AbgAgAEEAYwBjAG8AdQBuAHQAOgAgAAA1PAAhAC0ALQB7AHsARQByAHIAbwByAEIAbABvAGMA
awBTAHQAYQByAHQAfQB9AC0ALQA+AAExPAAhAC0ALQB7AHsARQByAHIAbwByAEIAbABvAGMAawBF
AG4AZAB9AH0ALQAtAD4AATk8ACEALQAtAHsAewBXAGEAcgBuAGkAbgBnAEIAbABvAGMAawBTAHQA
YQByAHQAfQB9AC0ALQA+AAE1PAAhAC0ALQB7AHsAVwBhAHIAbgBpAG4AZwBCAGwAbwBjAGsARQBu
AGQAfQB9AC0ALQA+AAE3PAAhAC0ALQB7AHsAQQBsAGUAcgB0AFMAbwB1AHIAYwBlAFMAdABhAHIA
dAB9AH0ALQAtAD4AATM8ACEALQAtAHsAewBBAGwAZQByAHQAUwBvAHUAcgBjAGUARQBuAGQAfQB9
AC0ALQA+AAExPAAhAC0ALQB7AHsAQQBsAGUAcgB0AFIAbwB3AFMAdABhAHIAdAB9AH0ALQAtAD4A
AS08ACEALQAtAHsAewBBAGwAZQByAHQAUgBvAHcARQBuAGQAfQB9AC0ALQA+AAENRgBGAEQANQBE
ADUAAD88AHQAcgA+ADwAdABkACAAdwBpAGQAdABoAD0AIgAxADAAMAAlACIAIABiAGcAYwBvAGwA
bwByAD0AIgAjAAAlIgA+ADwAYgA+AFMAbwB1AHIAYwBlACAAOgA8AC8AYgA+ACAAABU8AC8AdABk
AD4APAAvAHQAcgA+AAALRQByAHIAbwByAAAxPAB0AHIAPgA8AHQAZAAgAHcAaQBkAHQAaAA9ACIA
MQAwADAAJQAiAD4APABiAD4AABEgADoAIAA8AC8AYgA+AFsAAIDPPAB0AGEAYgBsAGUAIABiAG8A
cgBkAGUAcgA9ACIAMQAiACAAdwBpAGQAdABoAD0AIgAxADAAMAAlACIAIABzAHQAeQBsAGUAPQAi
AGIAbwByAGQAZQByAC0AYwBvAGwAbABhAHAAcwBlADoAIABjAG8AbABsAGEAcABzAGUAOwBmAG8A
bgB0AC0AZgBhAG0AaQBsAHkAOgAgAHYAZQByAGQAYQBuAGEAOwAgAGYAbwBuAHQALQBzAGkAegBl
ADoAIAAxADAAcAB0ACIAPgABgMk8AHQAcgA+ADwAdABkACAAdwBpAGQAdABoAD0AIgAxADAAMAAl
ACIAIABiAGcAYwBvAGwAbwByAD0AIgAjAEYARgAwADAAMAAwACIAPgA8AGYAbwBuAHQAIABjAG8A
bABvAHIAPQAiACMARgBGAEYARgBGAEYAIgAgAFMAaQB6AGUAPQAiADQAIgA+ADwAYgA+AEUAUgBS
AE8AUgBTADwALwBiAD4APAAvAGYAbwBuAHQAPgA8AC8AdABkAD4APAAvAHQAcgA+AAAZPAAvAHQA
YQBiAGwAZQA+ADwAQgBSAD4AAA1GAEYARgBGADgAMAAAD1cAYQByAG4AaQBuAGcAAIDNPAB0AHIA
PgA8AHQAZAAgAHcAaQBkAHQAaAA9ACIAMQAwADAAJQAiACAAYgBnAGMAbwBsAG8AcgA9ACIAIwBG
AEQANgAwADEAMwAiAD4APABmAG8AbgB0ACAAYwBvAGwAbwByAD0AIgAjAEYARgBGAEYARgBGACIA
IABTAGkAegBlAD0AIgA0ACIAPgA8AGIAPgBXAEEAUgBOAEkATgBHAFMAPAAvAGIAPgA8AC8AZgBv
AG4AdAA+ADwALwB0AGQAPgA8AC8AdAByAD4AAIF/PABiAHIAPgA8AGIAcgA+ADwAZgBvAG4AdAAg
AGYAYQBjAGUAPQAiAFQAYQBoAG8AbQBhACIAIABzAGkAegBlAD0AIgAxACIAPgBUAGgAaQBzACAA
cgBlAHAAbwByAHQAIAB3AGEAcwAgAGcAZQBuAGUAcgBhAHQAZQBkACAAYgB5ACAAPABhACAAaABy
AGUAZgA9ACIAaAB0AHQAcAA6AC8ALwB3AHcAdwAuAHAAcgBhAGcAbQBhAHQAaQBjAHcAbwByAGsA
cwAuAGMAbwBtAC8AcABhAGcAZQBzAC8APwBzAHIAYwA9AGIAaQB4AHAAcgBlAHMAcwAmAHQAYQBn
AD0ATgBGAEUAbQBhAGkAbAAmAHUAcgBsAD0ALwAiAD4AQgBJACAAeABQAHIAZQBzAHMAIABOAG8A
dABpAGYAaQBjAGEAdABpAG8AbgAgAEYAcgBhAG0AZQB3AG8AcgBrADwALwBhAD4AIAA0AC4AMAA8
AC8AZgBvAG4AdAA+AAANRgBGADAAMAAwADAAAA1GAEQANgAwADEAMwAADTAAMABGAEYAMAAwAAA7
PAB0AHIAPgA8AHQAZAA+ADwAcAA+ADwAYgA+ADwAZgBvAG4AdAAgAHMAaQB6AGUAPQAiADQAIgA+
AAAfIAA8AGYAbwBuAHQAIABjAG8AbABvAHIAPQAiACMAAAUiAD4AADk8AC8AZgBvAG4AdAA+ADwA
LwBmAG8AbgB0AD4APAAvAGIAPgA8AC8AdABkAD4APAAvAHQAcgA+AACA3TwAdAByAD4APAB0AGQA
IAB3AGkAZAB0AGgAPQAiADEAMAAwACUAIgAgAGIAZwBjAG8AbABvAHIAPQAiACMAMABCADYAQgBF
ADEAIgA+ADwAZgBvAG4AdAAgAGMAbwBsAG8AcgA9ACIAIwBGAEYARgBGAEYARgAiAD4APABiAD4A
UABhAGMAawBhAGcAZQAgAEUAeABlAGMAdQB0AGkAbwBuACAAUwB1AG0AbQBhAHIAeQA8AC8AYgA+
ADwALwBmAG8AbgB0AD4APAAvAHQAZAA+ADwALwB0AHIAPgAAKzwAdAByAD4APAB0AGQAIAB3AGkA
ZAB0AGgAPQAiADEAMAAwACUAIgA+AACAqzwAdAByAD4APAB0AGQAIAB3AGkAZAB0AGgAPQAiADEA
OAA5ACIAIABiAGcAYwBvAGwAbwByAD0AIgAjAEYAMgBGADIARgAyACIAPgA8AGIAPgBFAHgAZQBj
AHUAdABpAG8AbgAgAFMAdABhAHQAdQBzADwALwBiAD4APAAvAHQAZAA+ADwAdABkAD4AIAA8AGYA
bwBuAHQAIABjAG8AbABvAHIAPQAiACMAACM8AC8AZgBvAG4AdAA+ADwALwB0AGQAPgA8AC8AdABy
AD4AAICBPAB0AHIAPgA8AHQAZAAgAHcAaQBkAHQAaAA9ACIAMQA4ADkAIgAgAGIAZwBjAG8AbABv
AHIAPQAiACMARgAyAEYAMgBGADIAIgA+ADwAYgA+AFMAdABhAHIAdAAgAFQAaQBtAGUAPAAvAGIA
PgA8AC8AdABkAD4APAB0AGQAPgAAfTwAdAByAD4APAB0AGQAIAB3AGkAZAB0AGgAPQAiADEAOAA5
ACIAIABiAGcAYwBvAGwAbwByAD0AIgAjAEYAMgBGADIARgAyACIAPgA8AGIAPgBFAG4AZAAgAFQA
aQBtAGUAPAAvAGIAPgA8AC8AdABkAD4APAB0AGQAPgAAfTwAdAByAD4APAB0AGQAIAB3AGkAZAB0
AGgAPQAiADEAOAA5ACIAIABiAGcAYwBvAGwAbwByAD0AIgAjAEYAMgBGADIARgAyACIAPgA8AGIA
PgBSAHUAbgAgAFQAaQBtAGUAPAAvAGIAPgA8AC8AdABkAD4APAB0AGQAPgAAgIU8AHQAcgA+ADwA
dABkACAAdwBpAGQAdABoAD0AIgAxADgAOQAiACAAYgBnAGMAbwBsAG8AcgA9ACIAIwBGADIARgAy
AEYAMgAiAD4APABiAD4AVABvAHQAYQBsACAARQByAHIAbwByAHMAPAAvAGIAPgA8AC8AdABkAD4A
PAB0AGQAPgAAgIk8AHQAcgA+ADwAdABkACAAdwBpAGQAdABoAD0AIgAxADgAOQAiACAAYgBnAGMA
bwBsAG8AcgA9ACIAIwBGADIARgAyAEYAMgAiAD4APABiAD4AVABvAHQAYQBsACAAVwBhAHIAbgBp
AG4AZwBzADwALwBiAD4APAAvAHQAZAA+ADwAdABkAD4AAICFPAB0AHIAPgA8AHQAZAAgAHcAaQBk
AHQAaAA9ACIAMQA4ADkAIgAgAGIAZwBjAG8AbABvAHIAPQAiACMARgAyAEYAMgBGADIAIgA+ADwA
YgA+AE0AYQBjAGgAaQBuAGUAIABOAGEAbQBlADwALwBiAD4APAAvAHQAZAA+ADwAdABkAD4AAICP
PAB0AHIAPgA8AHQAZAAgAHcAaQBkAHQAaAA9ACIAMQA4ADkAIgAgAGIAZwBjAG8AbABvAHIAPQAi
ACMARgAyAEYAMgBGADIAIgA+ADwAYgA+AEUAeABlAGMAdQB0AGkAbwBuACAAQQBjAGMAbwB1AG4A
dAA8AC8AYgA+ADwALwB0AGQAPgA8AHQAZAA+AACAjTwAdAByAD4APAB0AGQAIAB3AGkAZAB0AGgA
PQAiADEAOAA5ACIAIABiAGcAYwBvAGwAbwByAD0AIgAjAEYAMgBGADIARgAyACIAPgA8AGIAPgBX
AGEAcwAgAEkAbgB0AGUAcgBhAGMAdABpAHYAZQA/ADwALwBiAD4APAAvAHQAZAA+ADwAdABkAD4A
ABE8AC8AdABhAGIAbABlAD4AAC08AC8AdABkAD4APAAvAHQAcgA+ADwALwB0AGEAYgBsAGUAPgA8
AEIAUgA+AAAPUwBVAEMAQwBFAFMAUwAACyAAZABhAHkALAAACSAAaAByACwAAAsgAG0AaQBuACwA
AAkgAHMAZQBjAAAPWwAwACAAcwBlAGMAXQAAXyAAcwBlAHQAdABpAG4AZwAgAGQAbwBlAHMAbgAn
AHQAIABlAHgAaQBzAHQAIABpAG4AIAByAHUAbgB0AGkAbQBlACAAcwBlAHQAdABpAG4AZwAgAGwA
aQBzAHQALgABM0UATgBBAEIATABFAF8AUgBPAFcAQwBPAFUATgBUAF8AVABIAFIARQBTAEgATwBM
AEQAACtFAE4AQQBCAEwARQBfAFQASQBNAEUAXwBUAEgAUgBFAFMASABPAEwARAAADVUAUgBHAEUA
TgBUAAAJVABFAFgAVAAAH0YASQBMAFQARQBSAEUARABfAEEATABFAFIAVABTAAARTgBGAF8AQwBI
AEUAQwBLAAAXQwA6AFwAUwBTAEkAUwBcAEwAbwBnAABHQwA6AFwAUwBTAEkAUwBcAEMAbwBuAGYA
aQBnAFwATgBGAF8ARQBtAGEAaQBsAFQAZQBtAHAAbABhAHQAZQAuAGgAdABtAABNVQBzAGUAcgA6
ADoAdgBhAHIAUwBTAEkAUwBPAHAAcwBOAEYAXwBPAHQAaABlAHIAQwBvAG4AZgBpAGcAUwBlAHQA
dABpAG4AZwBzAAADPQAAXUIASQAgAHgAUAByAGUAcwBzACAATgBvAHQAaQBmAGkAYwBhAHQAaQBv
AG4AIABGAHIAYQBtAGUAdwBvAHIAawAgAEUAdgBlAG4AdAAgAEgAYQBuAGQAbABlAHIAADFVAHMA
ZQByADoAOgB2AGEAcgBTAFMASQBTAE8AcABzAE4ARgBfAEMASABFAEMASwAAAAAAPmbKp4YmCUiA
nM0qrYBZ5wAIt3pcVhk04IkIsD9ffxHVCjoDIAABAwAAAQQAABIMBwYVEhgBEgwEAAASCAcGFRIY
ARIIBAAAEhEHBhUSGAESEQQAABIUBwYVEhgBEhQECAASDAQIABIIBAgAEhEECAASFAQgAQIcAyAA
CAQgABIVAyAADgIeAAcQAQEeAB4ABzABAQEQHgACEwAEIAATAAcGFRIZARMABCgAEwADBhIdAwYS
IQQAABIdBAAAEiEFAAEBEiEECAASHQQIABIhAwYSIAIGHAQAABIgBAgAEiAIiYRdzYCAzJECBg44
VQBzAGUAcgA6ADoAdgBhAHIAUwBTAEkAUwBPAHAAcwBOAEYAXwBBAGwAZQByAHQATABpAHMAdABA
VQBzAGUAcgA6ADoAdgBhAHIAUwBTAEkAUwBPAHAAcwBOAEYAXwBBAGwAZQByAHQATABpAHMAdABf
AEEAbABsAE5VAHMAZQByADoAOgB2AGEAcgBTAFMASQBTAE8AcABzAE4ARgBfAE4AbwB0AGkAZgBp
AGMAYQB0AGkAbwBuAF8AQwBvAHUAbgB0AGUAcgBWQgBJACAAeABQAHIAZQBzAHMAIABOAG8AdABp
AGYAaQBjAGEAdABpAG8AbgAgAEYAcgBhAG0AZQB3AG8AcgBrACAAUwBlAG4AZAAgAEEAbABlAHIA
dAACBgIJIAEVEi0BEjAOBSABDhIxCCAEAg4OETUOCCAEAg4OAhI5BiADCA4OCAYgAw4ODg4IIAUO
Dg4ODgIHIAQOAg4ICB4gEQ4OET0RPQ4ODg4CDhAIEAgQCBUSLQESMAIIAg4FIAIOCAgHIAIOET0R
PQUgAQ4RQQUgAhwcDgkgAQ4VEi0BEjAHIAMBDhwSRQYgAhwOEkUEIAASRQUgAQESRQUgAgEOHAQg
ARwOAgYIAwYRKAQAAAAABAEAAAADBhEsBAIAAAAEAwAAAAQEAAAAAwYRPQkgBQEOCA4OESwLIAYB
DggODhEsET0EIAEBCAQgAQEOBCAAET0FIAEBET0EIAARLAUgAQERLAMoAAgDKAAOBCgAET0EKAAR
LAUgAQERUQgBAAEAAAAAAAUgAgEODhgBAApNeVRlbXBsYXRlCDEwLjAuMC4wAAAGFRIYARIMBhUS
GAESCAYVEhgBEhEGFRIYARIUBAcBEgwEBwESCAQHARIRBAcBEhQTAQAOTXkuV2ViU2VydmljZXMA
ABABAAtNeS5Db21wdXRlcgAADAEAB015LlVzZXIAABMBAA5NeS5BcHBsaWNhdGlvbgAABAABHBwD
BwECAwcBCAYAARIVEW0EBwESFQMHAQ4FEAEAHgAECgEeAAQHAR4AByAEAQ4ODg5hAQA0U3lzdGVt
LldlYi5TZXJ2aWNlcy5Qcm90b2NvbHMuU29hcEh0dHBDbGllbnRQcm90b2NvbBJDcmVhdGVfX0lu
c3RhbmNlX18TRGlzcG9zZV9fSW5zdGFuY2VfXwAAAAYVEhgBEwAGFRIZARMABAoBEwAFIAEBEwAI
BwMTABMAEwAEIAEBAgUBAAAAAAQgABJ9BiACAQ4SfQYHAhIdEh0EBwESIQgBAAIAAAAAAAQAAQEc
BAcBEiAFIAASgIkEAAARPQYAAwgODgIEAAECDgYVEi0BEjAEAAEIHAQAAQIcBiABARKApQUgABKA
qQUgAg4ODgYgAQERgK0GAAMcAhwcBAABDhwDAAAOBgADDg4ODgQgAQ4IBQABDh0OBSACAQ4IBiAB
ARKAwQYgAQESgI0FAAEBEjEFIAASgMkFIAARgM0IIAUCCA4ODggEIAEODgUAAg4ODgUAAQgQCAUA
AggICEgHMhUSLQESMA4CAgICAhE9ET0ICAgCAgIIDg4IEoCNEoCNEkUSgJEIDg4ODg4ODg4ODg4O
CA4ODg4OEoCVDhKAlQ4ODh0OET0FIAASgOEFIAASgOkIIAESgPUSgPUIIAIBEhUdEhUFIAASgPkF
IAASgPEDIAAcBiABHBKA/QMgAAInBwsVEi0BEjAVEi0BEjASgN0SgOESgOUSgOkSgO0SMBIxHRIV
EoDxBCAAEjEEAAEODgUHAw4ODgUAAgEODgYgAgEOETUGAAMODhwcCAcDAhKBCRIxBQACDg4cBSAC
AQ4CByADAQ4CEjkJBwQOEoENAhIxBgACHQ4ODgUgARE9DQcAAggRPRE9EQcJCAgdDhKBGQ4SMQgd
DhE9BCABCA4FBwMIDggFIAIOCA4HBwUIDg4OCAUAAhwcHAQAAQ4IBiABEoEhDgUgABKBIQkgABUR
gSUBEwAHFRGBJQESMAYgAQ4SgS0FAAEOET0iBxAOEoEhEoEhDg4OEoEhDg4OEjESMBURgSUBEjAd
DhE9CDIHGw4ODhKBIRKBIQ4ODg4ODg4ODg4ODg4SMRIwEjAOFRGBJQESMB0OET0IFRGBJQESMAYg
ARFBET0FAAINDQgEAAEODQMgAA0FIAEOHQMJBwUODhIxCB0DBgABEoE5HAYgARKBPQ4EIAEcHAMH
ARwFIAETAAgFBwMODggEIAAdAwogAx0OHQMIEYFBBCABAg4KBwYOHQ4ODggdDgUgAQ4SIQUgAgEc
HAQHAhwOBiABHQ4dAwQAAQgOFQcNEkUOHBJFHQ4dDg4ODhIxCB0ODgUgABKBTQcgAQEQEoFJBiAB
EoFRHAQgAQEcCgcEAhKBSRIxEjEMBwYCHBwSgUkSMRIxBAcBET0EBwERLAgBAAgAAAAAAB4BAAEA
VAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwFHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjAB
AFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQMAQAHMS4wLjAuMAAAKQEA
JDhlY2Q3NDQ1LTcwODMtNDU3Mi1iNmVkLTJiZDVlOTU4YWZiZAAABQEAAQAAHwEAGkNvcHlyaWdo
dCBAIE1pY3Jvc29mdCAyMDE3AAAoAQAjc3RfMTYxZDFkMTFmYWQwNDA3NWE1YWM0MTg1YjY1OWVk
NjgAAA4BAAlNaWNyb3NvZnQAALyuAAAAAAAAAAAAAN6uAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAA
AADQrgAAAAAAAAAAAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
wAAAyAMAAAAAAAAAAAAAyAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBCgDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAAQDAAABADAAMAAwADAAMAA0
AGIAMAAAADQACgABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAATQBpAGMAcgBvAHMAbwBmAHQA
AABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAcwB0AF8AMQA2ADEAZAAx
AGQAMQAxAGYAYQBkADAANAAwADcANQBhADUAYQBjADQAMQA4ADUAYgA2ADUAOQBlAGQANgA4AAAA
MAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAAcAAoAAEASQBu
AHQAZQByAG4AYQBsAE4AYQBtAGUAAABzAHQAXwAxADYAMQBkADEAZAAxADEAZgBhAGQAMAA0ADAA
NwA1AGEANQBhAGMANAAxADgANQBiADYANQA5AGUAZAA2ADgALgBkAGwAbAAAAFwAGwABAEwAZQBn
AGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgAE0AaQBjAHIA
bwBzAG8AZgB0ACAAMgAwADEANwAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBh
AG0AZQAAAHMAdABfADEANgAxAGQAMQBkADEAMQBmAGEAZAAwADQAMAA3ADUAYQA1AGEAYwA0ADEA
OAA1AGIANgA1ADkAZQBkADYAOAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBl
AAAAAABzAHQAXwAxADYAMQBkADEAZAAxADEAZgBhAGQAMAA0ADAANwA1AGEANQBhAGMANAAxADgA
NQBiADYANQA5AGUAZAA2ADgAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADAALgAwAAAAOAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4AMAAuADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAADAAAAPA+AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{0F4D7CC9-37FA-4968-A538-F366CE5AC37C\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{0F4D7CC9-37FA-4968-A538-F366CE5AC37C}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceID]!=@[System::PackageID] &amp;&amp; @[System::SourceName]!=@[System::PackageName] &amp;&amp; SUBSTRING(@[System::SourceName], 1, 12)!=&quot;SSISOpsEhObj&quot; &amp;&amp; @[User::varSSISOps_DisableBIxAuditing]==false"
          DTS:From="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_Start"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{0F4D7CC9-37FA-4968-A538-F366CE5AC37C}"
          DTS:To="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_Task_OnPostExecute"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{298ABE95-7695-45CD-A53A-148DD078DE36\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{298ABE95-7695-45CD-A53A-148DD078DE36}"
          DTS:From="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_LogVariableOrConn"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{298ABE95-7695-45CD-A53A-148DD078DE36}"
          DTS:To="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_Package_OnPostExecute"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{EA693CE7-B28B-4476-A41E-957C60416A5E\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{EA693CE7-B28B-4476-A41E-957C60416A5E}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceID]==@[System::PackageID] &amp;&amp; @[System::SourceName]==@[System::PackageName] &amp;&amp; SUBSTRING(@[System::SourceName], 1, 12)!=&quot;SSISOpsEhObj&quot; &amp;&amp; @[User::varSSISOps_DisableBIxAuditing]==false"
          DTS:From="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_Start"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{EA693CE7-B28B-4476-A41E-957C60416A5E}"
          DTS:To="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_LogVariableOrConn"
          DTS:Value="2" />
      </DTS:PrecedenceConstraints>
    </DTS:EventHandler>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnPreExecute]"
      DTS:CreationName="OnPreExecute"
      DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
      DTS:DTSID="{53523AEF-9A15-485C-9A20-5B7197984691}"
      DTS:EventID="1934622720"
      DTS:EventName="OnPreExecute"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{35FFD08E-FBD5-4D5D-95FB-9A17E8C80113}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{4A351B64-71BE-4CFE-99FA-E0F9449A5230}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_ConnectionValues">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{0139F185-F189-4C2D-B1E0-9D3D1409F470}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_DfLayout">
          <DTS:VariableValue
            DTS:DataType="8">&lt;layout version="3" compressed="true"&gt;&lt;DTS:Executable xmlns:DTS = "www.microsoft.com/SqlServer/Dts" DTS:ExecutableType = "SSIS.Package.2"&gt;&lt;/DTS:Executable&gt;&lt;/layout&gt;</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. This variable (introduced in v3.2) controls logging of connection strings (in PreExcute and PostExecute Eventhandlers). Set this variable to True or -1 if you want to disable connectionstring logging."
          DTS:DTSID="{B665579F-27E5-40BD-AD0B-68314E090FD4}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_DisableConnLogging">
          <DTS:VariableValue
            DTS:DataType="11">0</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. This variable (introduced in 3.5.3) controls logging of the initial value of non-sensitive parameters.  Set this variable to True or -1 if you want to disable variable logging."
          DTS:DTSID="{421CAE4F-0495-43F2-8745-DCA1666A9077}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_DisableParameterInitialValueLogging"
          DTS:ReadOnly="True">
          <DTS:VariableValue
            DTS:DataType="11">0</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. This variable (introduced in v3.2) controls logging of variable values (in PreExcute and PostExecute Eventhandlers). Set this variable to True or -1 if you want to disable variable logging."
          DTS:DTSID="{1E640C1B-B1C9-4E2B-B416-10CCE4408C15}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_DisableVarLogging">
          <DTS:VariableValue
            DTS:DataType="11">0</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. Set this variable to list of ConnectionManagers you want to mask ConnectionStrings during logging process inside OnPreExecute Eventhandler. You can use comma separated list you can use wildcard &quot; * &quot; for pattern matching names are case in-sensitive. This option is helpful when you want to hide certain connection strings or file paths from users who are using BIxPress Monitoring Console or Reports. When masking is enabled, &quot;****&quot; is logged in the BIxPress Audit Database rather than actual connectionstring of specified connection managers. Note: You can configure list of variables you want to mask outside the package by configuring &quot;varSSISOps_FilteredConns&quot;. There are 2 places where you have to set this value (OnPreExecute, OnPostExecute)."
          DTS:DTSID="{2E2ABEE9-28DD-4C90-BF21-69B6968EB0CB}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_FilteredConns">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. This variable (introduced in 3.5.3) controls logging of the initial value of non-sensitive parameters.  Set this variable to True or -1 if you want to disable variable logging."
          DTS:DTSID="{C8D2CD33-6CA8-41FD-95E8-E17D528E7162}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_FilteredParams"
          DTS:ReadOnly="True">
          <DTS:VariableValue
            DTS:DataType="8">pFileTypeExtension,pJobInstanceParentID,pLocalRemotePath,pSFTPRemotePath</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. Set this variable to list of variables you want to mask during logging process. You can use comma separated list you can use wildcard &quot; * &quot; for pattern matching names are case insensitive. This option is used to mask variable values during logging process. This option is helpful when you have sensitive data (e.g. varFTP_Password) or variable value is extremly large to display (e.g. varXML_Document). When masking is enabled, &quot;****&quot; is logged in the BIxPress Audit Database rather than actual value of variable. Note: You can configure list of variables you want to mask outside the package by configuring &quot;varSSISOps_FilteredVars&quot;. There are 3 places where you have to set this value (OnPreExecute, OnPostExecute, OnVariableValueChanged)."
          DTS:DTSID="{5F7F6E80-B4A2-4247-B790-40A6C0DBF9D6}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_FilteredVars">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. Set this variable to configure how many characters will be logged for each variable. Default variable length for logging is 4000 anything after that will be truncated. -1 = Log full variable value . There are 3 places where you have to set this value (OnPreExecute, OnPostExecute OnVariableValueChanged)."
          DTS:DTSID="{9E00FB40-4D7A-471C-84B1-F94210396210}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_MaxVarCharsToLog">
          <DTS:VariableValue
            DTS:DataType="3">4000</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{B8203E75-885D-4E5B-BE90-BBBC7A6E0766}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_ParentSourceID">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{B96CD3A2-7661-416E-8E00-3B6A70F5AD71}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_PkgLayout">
          <DTS:VariableValue
            DTS:DataType="8">&lt;layout version="3" compressed="true"&gt;&lt;DTS:Executable xmlns:DTS = "www.microsoft.com/SqlServer/Dts" DTS:ExecutableType = "SSIS.Package.2"&gt;&lt;DTS:PackageVariable&gt;		&lt;DTS:Property DTS:Name = "PackageVariableValue" DTS:DataType = "8"&gt;&lt;![CDATA[H4sIAAAAAAAEAO1ce1PbSBL/KnO+qrukymPmqZlhgarRazdXeXAH2ftjs3Ul7AG0K0teSSawqf3u15KNkcFOCItzIWcKXNZo1N3Tr1/3jIq9Nye/uGFdoR9dWaVFvt+rfsso7R3s/QXjKBmeo7wYOXTisuI9ep9mGRoWeZ2kOZqUxcSVdeoqVJ8nNRoVMLVGyekp0EPlNK/TcfPgeXKRFuUA44O9w2T4a3Lm0MhV6VmOmwk4T8Zuvze/A2xfJlfFtH6RnxYHe9+XyeR8NoCCZJIM0/pqv8dZD12Os7za7w2zsiVQwT23+yodlkVVnNaDo9+yI1deuHLwIq/dWZnUsLRmJB26ahC27OHmK1haNoDxNMnS39tJ3yVV5cYn2dX+fam1Qs4l2h1X1Vnm7iNY+9hgtrgoP0tz93HWS2wWM3vndT3Z3dmphudunFSD8eLJYTHeeZ/mp5c7jBBv5zIZZ10hx/eXsdXSfYQ72HsNU+f2Okp/Bz0wqvoC7PVitLDxu6AYTzLX6BA9s9NRWj9/9yopf0X/KE6QrdD8tkPgYzDUQ8fF5KU7rfd7QIvxHtpZxUd6n8UnucPnRV7VST50HX5MsoFgWioqqNaiz9iAa824hDHJlW5FCWbh4Mq5PD+4ZOTKH1x6dg4kBMj7ooouJ0k+ciDbcTkFDodJ7rKZ4JLyvhY9dHNFmfrUOro6YXxAQMCZmMz0DRcDzRYDeo2+GL+jrxd5Wt8Ewrsf4esoAf3ACnMI6Yb/qySHmWXVEcDz+sw8QBNxklXLquCc9SknvYXrgIj8YyJ2TaXE4EYL2uuD6WR3YLUauJafUMPCdaJLN5yCNobjEarOHSRCWAgqXV2m7sIhl1+kZZGPXV6jiwQSyknWeNZpUY5vy0pNnymzWiDq0fsK9LI4Q9EN1yWf0H3urbE89cR9ORwWk2nWeEB0/PJt5couCw7hsEapVN5bqQsOEIBZcbbEQPYpkWu8l+jP5pC7923kr4hzSoGXnmWWaHR2zevT1AeHpRu6kQNy4PxVXYL719VPN99/7rooFQMm+2CXLpdBMIUMerA3A47d9god1UlZz8OuKPd7H66T7+7raZb90QO7jzq3SZ9Dymgfai5Ie7/5xsxA9pZpA9qdNe5SLYbnA0GRZfMov4HaztMvIbLnU5fIN0rbWUfq5tZt5kvjcHlXI52RlwnUH3OJx7uzGzCC/GKaj9L8zC8u24X328X/y4HB0wt3WFRp3ZY0Nr+aybmCZmfssa2P6LL95UCBowm1CQfwVjuA3qwD6K0DfNQB2G0HgATAmNyAA0ix0gGEt1EHaMl/NQ6AdX+mYurB79fkB3zZDyBeGd2AE4jVMMA3CwP8m4OBP1vJCsb6QtNFJUvUJyrZFYU902S5oqVNsHUq/XWF/d2GK0zqBB2WBXSrFYrLYoz+OU2hp0N1gaDKn0KJD9Yo0yF6dhQfH6J2/ttJViSj5++CzCU5mk5QmJato10he1q7EnWpgvLfha7tpmLQOorTzFXotGG1eKyzNgHNGnmM7okZ0AvXC0U3l43ev/jqO4uTvM/JuvJe3y1c/5R8Rw6akPl8OxxCIFwr//bT747j9k7D6nrf5jipfu1IrlSf0zVu5Zn/meCzR1rHms04vk1/tgvRdTAKbTT7WEH/hYT/rA6BKt6gl+KbgAazuj6gm60P6BeGhgUodIR9/Ix/Jw9xxvvULPJQc8nEY+ah+3tcx584H0C5qTYVBp/n20b32UZ630bPq4oevtmih/9/eLaA2kUKee3Z7aXWj+fZXRfRdECVXtQ44C9iruTV3vtZDsg1W66njLy1Q7iBpmy1a4rNuqZ4Kq75QKsud9WNXSmgpm52fDdgQyDPO9vpqzsstbznrjZo3TusnoKlbZ4XddvpzO197C5BhW02eFunGawbHR29OELXJ4Shu3BZMWkXfnK1iyBnlBnU2XWjqQF6/d6N3fn1mSWCvNHMqB1MpGQHfhmh3t/+emm/az/eXDSHde79Ljo+d2gyLSdF5VBxiurztEKTOc+0BdOqQdokg+QFU0eQqf5eoWenTVNz2uDtc+TGSQ5Lyc9m/c26VFcVzSETDLcSoNs/Lm9PCJafgdmTeRqdkQXew2lVF2PoOJrjhippIL9zrNAcXrXnrO3dRvQTWE1D6EauJB2tEQIeTuuGHnQ0eZK1y72WwFWDGwW2H0ExuSob2EDPhs8RalR8zSUoQKWzc1HUwEcJC+qEdA/FgELNme6KgJsBi6dMnzabWM1jxAk6pB7B8oRrLEbDBJ8YT2GR0NFQcmaGJ6zbt1BItR/bvv/MnVquxUAI7+ZMjWqz3Ho/fpqBsDbsBvvYyjTjqYFYmrS5NHOH1VNIMzudFwbgqvsqwc7cFQ72wrqKLkC4HyBkMoirtS8jDLrTqp/e5FFZFuXP93pHQW9fUXgqryi8Tl734W+WeT5YbQOrrMQBZxEWgaJY+zzEGipfawPBPCb/6OSKxdOrdk2WSSsSGetFEnNtBBZaxdiEkuPABsrGHjeRUg8k7XEiDCUx9qQkWAjrYR1zhnXowY2YMkUfSPrjsfCuAe03k+p1/Obkl/+8nTTvC1iYUb9Mq3oNv1sp+oMMpFBBaLFVgY+FjUEtwrOg9jiKFSNG+Stlf+wcfBeY7iZgsj7jLj3dTZZPY8v7tlV868fW1wQrZkMseBhgo6MIK5/6EeGxtUpsrbJpq3wM0G7h2J8BNpCsnr/fsoW3bxretPA9IsMIm5gDBimisQk8iaVnKLOQiEPjPRCDopgYQ6jEUDgHWHjEx1qGFEvfUyJU1BcmeiBpICN4LBiOtAZQtqEP8jOFQVif+IQxovgDSRMSydAPYixDwEsRSkBOH5Kd8mMpLOFS0/hxkbMbbMv42Wzytuh5T+RkkZZgPNB4EHAoKHiENXRl2KPMZ9QTkeexbY7+0sipWaBiQyKIqcZZqS+xFVDUxDzmOvYjHvl2a5UvbRXjKU5kYLHHCMS58j1sY+FhHjAjfOJR4m/rmadWz3yQcSioB9nbpwwyYEQ97Dem5YZYzgzh1g/+2FY033JFQ4NAqSjSmAUxpNtYQucYcYp9nwaegLJGWP3QskMIHQUixoqSplgKIZMrzbG2Ppc8gH6VmgeSDjzixVJ70FkF0F75ID80vRrHXhBJCvTN+mLpTgPte77hNMABYdD8E+iidSwkVqEfGh/EDiTdprYv3kAHULRaajCX4DfCGo21F/tgHx4KHinK421x9uQAxw+01SZS2DAPbAktE9bU9zERVMlIW24NuR/giC3gPE3AESGNWGAoDriBwPaVhuoDPmJKQ2gaGV2zM3YfwAmUH0aEY6liKFLhE8oZuARokzGRigi+snVYhQqGSGZi32JloQMBIIuxVirEnoGunNBm03Ulwmzzz1ecf9btKfw7KXMQe7t5901nHulrbT0qcGiaetQS04CPxqE0zBdUG8PIQ7fBrAwYDQi2xsRYUPjwBbRUUWQ9bsMgFPbBm3fSKGiuQ0x9G2ABTRn2DYH0qYnRcWyBdfi4O2zX0fAYp1MqCgPbHNXF3EC1bj2CfdlUdZb5kQ0jGQUrdb5NoxstrkMSWBbQFnShDIO+xzeBwlz7XChhAyi9t1b5qsBtZ/6PJg7+C+21daRyQgAA]]&gt;&lt;/DTS:Property&gt;	&lt;DTS:Property DTS:Name = "Namespace"&gt;dts-designer-1.0&lt;/DTS:Property&gt;&lt;/DTS:PackageVariable&gt;&lt;/DTS:Executable&gt;&lt;/layout&gt;</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{74716E24-7AED-42C3-9434-5891498D0A9B}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_SourceType">
          <DTS:VariableValue
            DTS:DataType="8">unknown</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{F1895D75-60A6-4D80-A254-05BFFC67A5E7}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_TaskList">
          <DTS:VariableValue
            DTS:DataType="8">&lt;xml AuditControlFlowVersion="6" EnableRowCountLogging="True" EnableRowCountLoggingForSource="True" EnableRowCountLoggingForDestination="True" EnableDataFlowMonitoring="True" MaxIterationCount="0" TrackAllVariables="True" TrackOnlyTagVariables="False" EnableVariableChangeTracking="True" EnableVariableChangeTrackingAdvFeatures="True" EnableVariableChangeTrackingAdvFeaturesADORec="False" LogConnectionMgrs="True"&gt;&lt;tsk id="{30d49737-fc51-4c9b-98ee-2c4ffcace8f2}" typ="SequenceContainer" p="" name="Completion (Audit)" on="1" /&gt;&lt;tsk id="{15637aa4-6be5-4b05-b221-e5a7e3d4c0d2}" typ="SQLTask" p="{30d49737-fc51-4c9b-98ee-2c4ffcace8f2}" name="Mark Job As Complete in Job" on="1" /&gt;&lt;tsk id="{5db9a9ef-d11f-4889-813d-3788fff4a359}" typ="SQLTask" p="{30d49737-fc51-4c9b-98ee-2c4ffcace8f2}" name="Mark Job as Complete in JobInstance" on="1" /&gt;&lt;tsk id="{739F23A9-C2AE-4F58-9C33-3ACCE1E472D9}" typ="SequenceContainer" p="" name="Data Process From Quidel to Value Centric (SFTP Data Upload)" on="1" /&gt;&lt;pc id="{D973A456-4B8C-40FE-8281-92DE8F707B90}" op="2" and="True" val="0" task1="{B4D03E51-87FD-4289-A040-A170FADB4A3C}" task2="{EC3DCB62-6DFE-473A-8640-158CF43AE361}" p="{739F23A9-C2AE-4F58-9C33-3ACCE1E472D9}" refId="Package\Data Process From Quidel to Value Centric (SFTP Data Upload).PrecedenceConstraints[Constraint]"/&gt;&lt;tsk id="{EC3DCB62-6DFE-473A-8640-158CF43AE361}" typ="ForEachLoopContainer" p="{739F23A9-C2AE-4F58-9C33-3ACCE1E472D9}" name="Clean up Directory After Data Processing" on="1" tag1="User::vDeleteFlatFiles"/&gt;&lt;tsk id="{3C3EABE5-D35E-4B51-8830-676F81B7D155}" typ="FileSystemTask" p="{EC3DCB62-6DFE-473A-8640-158CF43AE361}" name="Delete Flat Files from Directory" on="1" /&gt;&lt;tsk id="{B4D03E51-87FD-4289-A040-A170FADB4A3C}" typ="SequenceContainer" p="{739F23A9-C2AE-4F58-9C33-3ACCE1E472D9}" name="Send Quidel Account Files to Value Centric" on="1" /&gt;&lt;pc id="{621C10F8-4CF0-42BC-A95A-68F8452A2046}" op="2" and="True" val="0" task1="{0fd32877-7aad-45d7-b67f-089fec385707}" task2="{752a3516-1a00-487b-a8f9-76902cc6a267}" p="{B4D03E51-87FD-4289-A040-A170FADB4A3C}" refId="Package\Data Process From Quidel to Value Centric (SFTP Data Upload)\Send Quidel Account Files to Value Centric.PrecedenceConstraints[Constraint]"/&gt;&lt;tsk id="{0fd32877-7aad-45d7-b67f-089fec385707}" typ="PW.TASKFACTORY.FILEPROPERTIESTASK.FILEPROPERTIES" p="{B4D03E51-87FD-4289-A040-A170FADB4A3C}" name="TF File Properties Task" on="1" /&gt;&lt;tsk id="{752a3516-1a00-487b-a8f9-76902cc6a267}" typ="PW.TASKFACTORY.SFTPTASK.SFTPTASK" p="{B4D03E51-87FD-4289-A040-A170FADB4A3C}" name="Upload FlatFiles To Value Centric Server" on="1" /&gt;&lt;tsk id="{ef924a26-6d58-4762-a292-7d808ba85538}" typ="SequenceContainer" p="" name="Initialization" on="1" /&gt;&lt;tsk id="{fffea361-6e73-4bb0-baaf-4fea4126bdcc}" typ="ScriptTask" p="{ef924a26-6d58-4762-a292-7d808ba85538}" name="Validate Connection Managers" on="1" /&gt;&lt;tsk id="{e23317e3-3100-494d-9b72-a4baf5d2715f}" typ="SequenceContainer" p="" name="Initialization (Audit)" on="1" /&gt;&lt;pc id="{ef1ccafa-bbd9-4482-a6b1-bc2d0fca84c5}" op="2" and="True" val="0" task1="{d7c00494-8665-4eff-a562-33d06affa14d}" task2="{74992513-2312-4137-b53b-ca78163dd599}" p="{e23317e3-3100-494d-9b72-a4baf5d2715f}" refId="Package\Initialization (Audit).PrecedenceConstraints[Constraint]"/&gt;&lt;pc id="{11184a07-d9f3-4747-b715-2c95776ce626}" op="2" and="True" val="0" task1="{74992513-2312-4137-b53b-ca78163dd599}" task2="{57e5fc33-0a2f-49ea-8a06-5b387187cda8}" p="{e23317e3-3100-494d-9b72-a4baf5d2715f}" refId="Package\Initialization (Audit).PrecedenceConstraints[Constraint 1]"/&gt;&lt;pc id="{85271b64-4df6-425e-bd43-9ebb3b504188}" op="3" and="True" val="0" task1="{57e5fc33-0a2f-49ea-8a06-5b387187cda8}" task2="{08e3f981-de7f-4e96-ab00-b09f8e3dfcce}" p="{e23317e3-3100-494d-9b72-a4baf5d2715f}" refId="Package\Initialization (Audit).PrecedenceConstraints[Constraint 2]"/&gt;&lt;pc id="{96b96979-6ad4-40c7-81a0-8da8448bd596}" op="2" and="True" val="0" task1="{08e3f981-de7f-4e96-ab00-b09f8e3dfcce}" task2="{3836d38f-7167-4f62-aa73-01f9421c0254}" p="{e23317e3-3100-494d-9b72-a4baf5d2715f}" refId="Package\Initialization (Audit).PrecedenceConstraints[Constraint 3]"/&gt;&lt;tsk id="{08e3f981-de7f-4e96-ab00-b09f8e3dfcce}" typ="ScriptTask" p="{e23317e3-3100-494d-9b72-a4baf5d2715f}" name="Execute cmd shell and retrieve environment variable information" on="1" /&gt;&lt;tsk id="{3836d38f-7167-4f62-aa73-01f9421c0254}" typ="SQLTask" p="{e23317e3-3100-494d-9b72-a4baf5d2715f}" name="Log Environment" on="1" /&gt;&lt;tsk id="{d7c00494-8665-4eff-a562-33d06affa14d}" typ="SQLTask" p="{e23317e3-3100-494d-9b72-a4baf5d2715f}" name="Populate ETLUser" on="1" /&gt;&lt;tsk id="{74992513-2312-4137-b53b-ca78163dd599}" typ="SQLTask" p="{e23317e3-3100-494d-9b72-a4baf5d2715f}" name="Populate Joblog" on="1" /&gt;&lt;tsk id="{57e5fc33-0a2f-49ea-8a06-5b387187cda8}" typ="SQLTask" p="{e23317e3-3100-494d-9b72-a4baf5d2715f}" name="Populate new Job Instance" on="1" /&gt;&lt;pc id="{40DB2FD2-291F-4255-A664-C2C2B255CCCA}" op="2" and="True" val="0" task1="{ef924a26-6d58-4762-a292-7d808ba85538}" task2="{e23317e3-3100-494d-9b72-a4baf5d2715f}" p="" refId="Package.PrecedenceConstraints[Constraint]"/&gt;&lt;pc id="{4DA56330-C1D6-4DE0-ACBC-26C43B828926}" op="2" and="True" val="0" task1="{e23317e3-3100-494d-9b72-a4baf5d2715f}" task2="{739F23A9-C2AE-4F58-9C33-3ACCE1E472D9}" p="" refId="Package.PrecedenceConstraints[Constraint 1]"/&gt;&lt;pc id="{B5696CA1-1E86-4468-9906-86B9D99E0DD6}" op="2" and="True" val="0" task1="{739F23A9-C2AE-4F58-9C33-3ACCE1E472D9}" task2="{30d49737-fc51-4c9b-98ee-2c4ffcace8f2}" p="" refId="Package.PrecedenceConstraints[Constraint 2]"/&gt;&lt;/xml&gt;</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{8EE3FD3B-77D0-4F0B-AE59-4C83F8489965}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_VariableValues">
          <DTS:VariableValue
            DTS:DataType="8">User::vCurJobID,User::vCurJobInstanceID,User::vCurUserID,User::vDeletedRowCount,User::vDeletedTotalRowCount,User::vDeleteFlatFiles,User::vEnvironmentTEXT,User::vFileCreatedDate,User::vFileLastModifiedDate,User::vInsertedTotalRowCount,User::vLastRecordsProcessedDate,User::vLocalRemotePath,User::vPackageStartDate,User::vProcessingFullPathName,User::vRejectedTotalRowCount,User::vUpdatedTotalRowCount</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPreExecute]\SSISOpsEhObj_OnPreExecute_Start"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{B80A4D25-6E23-4524-8739-F3AF54EE195A}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_OnPreExecute_Start">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[User::varSSISOps_DisableBIxAuditing]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <ScriptProject
              Name="st_e0fed424054a4fca82b3b2c907175fe0"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="VisualBasic">
              <ProjectItem
                Name="My Project\AssemblyInfo.vb"
                Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("st_e0fed424054a4fca82b3b2c907175fe0")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("Microsoft")> 
<Assembly: AssemblyProduct("st_e0fed424054a4fca82b3b2c907175fe0")> 
<Assembly: AssemblyCopyright("Copyright @ Microsoft 2017")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("e97e09ee-59a9-4f13-b238-93aada8336eb")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.vb"
                Encoding="UTF8"><![CDATA[#Region "Imports"
Imports System
Imports System.Data
Imports System.Math
Imports System.Runtime.InteropServices
Imports Microsoft.SqlServer.Dts.Runtime
Imports System.Xml
#End Region

'ScriptMain is the entry point class of the script.  Do not change the name, attributes,
'or parent of this class.
<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute()> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
    Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

    Public Sub Main()

        ' Begin BI xPress Code

        Dim sXMLTaskInfo As String = Me.ReadVariable("varSSISOps_TaskList").ToString()
        
        If String.IsNullOrEmpty(sXMLTaskInfo) Then
            Me.WriteVariable("varSSISOps_SourceType", "UNKNOWN")
            Me.WriteVariable("varSSISOps_ParentSourceID", "")
            Return
        End If

        Using reader As New XmlTextReader(New System.IO.MemoryStream(System.Text.Encoding.UTF8.GetBytes(sXMLTaskInfo)))
            Dim bFound As Boolean = False
        
            Do While (reader.Read())
                Select Case reader.NodeType
                    Case XmlNodeType.Element ' The node is an Element
                        If reader.Name.ToLower = "tsk" Then
                            If Me.ReadVariable("System::SourceID").ToString().ToUpperInvariant() = reader.GetAttribute("id").ToUpperInvariant() Then
                                Me.WriteVariable("varSSISOps_SourceType", reader.GetAttribute("typ"))
                                Me.WriteVariable("varSSISOps_ParentSourceID", reader.GetAttribute("p"))
                                bFound = True
                                Exit Do
                            End If
                        End If
                End Select
            Loop
            
            If bFound = False Then
                Me.WriteVariable("varSSISOps_SourceType", "UNKNOWN")
                Me.WriteVariable("varSSISOps_ParentSourceID", String.Empty)
            End If
        End Using

        If ReadVariable("System::SourceID").ToString()=ReadVariable("System::PackageID").ToString() Then
            Dim sb As New System.Text.StringBuilder()
            Dim arrVariables() As String
            Dim bLogVar As Boolean = True
            Dim sVarList As String = Me.ReadVariable("User::varSSISOps_VariableValues").ToString()

            If String.IsNullOrEmpty(sVarList) Then
                bLogVar = False
            ElseIf Convert.ToBoolean(Me.ReadVariable("User::varSSISOps_DisableVarLogging")) Then
                bLogVar = False
            End If

            If bLogVar Then
                Dim filterList As String = Me.ReadVariable("User::varSSISOps_FilteredVars").ToString()
                Dim arrFilter() As String = filterList.Split(","c)
                arrVariables = sVarList.Split(","c)
                Dim oVal as Object

                For Each var As String In arrVariables
                    Try

                        Dim bSkip As Boolean = False
                        Dim comp As String = var

                        For Each f As String In arrFilter
                            comp = comp.ToLower().Trim()
                            f = f.ToLower().Trim()

                            If String.IsNullOrEmpty(f) Then
                                Continue For
                            End If
                            If comp.IndexOf("::") < 0 Then comp = "user::" & comp
                            If f.IndexOf("::") < 0 Then f = "user::" & f
                            If System.Text.RegularExpressions.Regex.IsMatch(comp,f.Replace("*","\w*"),Text.RegularExpressions.RegexOptions.IgnoreCase) Then
                                bSkip = True
                                Exit For
                            End If
                        Next

                        If bSkip Then
                            oVal = "*****"
                        Else
                            oVal = Me.ReadVariable(var)
                            If oVal IsNot Nothing Then
                                Dim s As String = oVal.ToString()
                                Dim iMaxCharsToLog As Integer = Convert.ToInt32(Me.ReadVariable("User::varSSISOps_MaxVarCharsToLog"))
                                Dim isLogFullValue As Boolean = iMaxCharsToLog < 1

                                If Not isLogFullValue AndAlso s.Length > iMaxCharsToLog Then
                                    oVal = s.Substring(0, iMaxCharsToLog) & " ...<VALUE TRUNCATED - Change value of [varSSISOps_MaxVarCharsToLog] to -1 from config file if you want to log full value (Not recommended for performance reason)>"
                                End If
                            End If
                        End If

                        If oVal IsNot Nothing Then
                            sb.AppendLine(var.PadRight(30, "."c) & "... " & oVal.ToString())
                        Else
                            sb.AppendLine(var.PadRight(30, "."c) & "... ")
                        End If
                    Catch ex As Exception
                        sb.AppendLine(var.PadRight(30, "."c) & "... {Error reading variable value: " & ex.Message & "}")
                    End Try
                Next

                Me.WriteVariable("User::varSSISOps_VariableValues", sb.ToString())
            End If

            Dim isDisableLogParameterInitialValues As Boolean

            If Boolean.TryParse(Me.ReadVariable("User::varSSISOps_DisableParameterInitialValueLogging").ToString(), isDisableLogParameterInitialValues) AndAlso Not isDisableLogParameterInitialValues Then
                Dim filteredParams As Object = Me.ReadVariable("User::varSSISOps_FilteredParams")
                Dim parameterList As String = If(filteredParams Is Nothing, String.Empty, filteredParams.ToString())
                Dim parameterNames As String() = parameterList.Split(New Char() {","C}, StringSplitOptions.RemoveEmptyEntries)
                Dim parameterNameValues As New System.Text.StringBuilder()

                For Each parameterName As String In parameterNames
                    Dim fullyQualifiedVariableName As String = If(parameterName.Contains("::"), parameterName, "$Package::" + parameterName)

                    If Not Dts.VariableDispenser.Contains(fullyQualifiedVariableName) Then Continue For

                    Dim parameterValue As Object = Me.ReadVariable(fullyQualifiedVariableName)
                    Dim parameterDisplayValue As String = If(parameterValue Is Nothing, String.Empty, parameterValue.ToString())

                    parameterNameValues.AppendFormat("{0}... {1}{2}", fullyQualifiedVariableName.TrimStart("$"C).PadRight(30, "."C), parameterDisplayValue, Environment.NewLine)
                Next

                If parameterNameValues.Length > 0 Then
                    Dim variableValuesValue As Object = Me.ReadVariable("varSSISOps_VariableValues")
                    Dim variableValuesDisplayValue As String = If(variableValuesValue Is Nothing, String.Empty, variableValuesValue.ToString())

                    Me.WriteVariable("User::varSSISOps_VariableValues", variableValuesDisplayValue + parameterNameValues.ToString())
                End If
            End If

            Dim sb1 As New System.Text.StringBuilder()
            Dim bLogConn As Boolean = Not Convert.ToBoolean(Me.ReadVariable("User::varSSISOps_DisableConnLogging")) 

            If bLogConn Then
                Dim filterList As String = Me.ReadVariable("User::varSSISOps_FilteredConns").ToString()
                Dim arrFilter() As String = filterList.Split(","c)
                Dim sDataSource As String
                For Each conn As ConnectionManager In Dts.Connections
                    Try

                        Dim bSkip As Boolean = False
                        Dim comp As String = conn.Name

                        For Each f As String In arrFilter
                            comp = comp.ToLower().Trim()
                            f = f.ToLower().Trim()

                            If String.IsNullOrEmpty(f) Then
                                Continue For
                            End If
                            If System.Text.RegularExpressions.Regex.IsMatch(comp,f.Replace("*","\w*"),Text.RegularExpressions.RegexOptions.IgnoreCase) Then
                                bSkip = True
                                Exit For
                            End If
                        Next

                        Dim sConnStr As String = conn.ConnectionString.ToString() 

                        If bSkip Then
                            sConnStr = "*****"
                            sDataSource = "*****"
                        Else
                            sDataSource = ""

                            Try
                                If conn.Properties.Contains("ServerName") Then
                                    sDataSource = conn.Properties("ServerName").GetValue(conn).ToString()
                                ElseIf conn.Properties.Contains("SqlServerName") Then
                                    sDataSource = conn.Properties("SqlServerName").GetValue(conn).ToString()
                                ElseIf conn.Properties.Contains("Host") Then
                                    sDataSource = conn.Properties("Host").GetValue(conn).ToString()
                                ElseIf conn.Properties.Contains("ServerHost") Then
                                    sDataSource = conn.Properties("ServerHost").GetValue(conn).ToString()
                                ElseIf conn.Properties.Contains("Server") Then
                                    sDataSource = conn.Properties("Server").GetValue(conn).ToString()
                                ElseIf conn.CreationName = "FLATFILE" OrElse (conn.CreationName = "FILE" AndAlso conn.ConnectionString.IndexOf(".") > 0) Then
                                    sDataSource = System.IO.Path.GetFileName(conn.ConnectionString)
                                End If
                            Catch ex As Exception
                            End Try
                        End If 

                        sb1.AppendLine(conn.Name.PadRight(30, "."c) & "... " & conn.CreationName.PadRight(10, " "c) & "  " & vbTab & sDataSource.PadRight(15, " "c) & "  " & vbTab & sConnStr)
                    Catch ex As Exception
                        sb1.AppendLine(conn.Name.PadRight(30, "."c) & "... {Error reading connection: " & ex.Message & "}")
                    End Try
                Next

                Me.WriteVariable("User::varSSISOps_ConnectionValues", sb1.ToString())
            End If

        End If


        ' End BI xPress Code

        Dts.TaskResult = ScriptResults.Success
    End Sub

#Region "ScriptResults declaration"

    Enum ScriptResults
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    End Enum

# End Region

    Private Sub WriteVariable(ByVal variableName As String, ByVal variableValue As Object)
        Dim vars As Variables = Nothing
        Dim isUnlocked As Boolean = False

        Try
            Dts.VariableDispenser.LockForWrite(variableName)
            Dts.VariableDispenser.GetVariables(vars)

            Try
                vars(variableName).Value = variableValue
            Catch ex As Exception
                Throw
            Finally
                If vars IsNot Nothing Then
                    vars.Unlock()
                    isUnlocked = True
                End If
            End Try
        Catch ex As Exception
            Dts.VariableDispenser.Reset()

            Throw
        Finally
            If vars IsNot Nothing AndAlso Not isUnlocked Then
                vars.Unlock()
            End If
        End Try
    End Sub

    Private Function ReadVariable(ByVal variableName As String) As Object
        Dim vars As Variables = Nothing
        Dim isUnlocked As Boolean = False
        Dim result As Object

        Try
            Dts.VariableDispenser.LockForRead(variableName)
            Dts.VariableDispenser.GetVariables(vars)

            Try
                result = vars(variableName).Value
            Catch ex As Exception
                Throw
            Finally
                If vars IsNot Nothing Then
                    vars.Unlock()
                    isUnlocked = True
                End If
            End Try
        Catch ex As Exception
            Dts.VariableDispenser.Reset()

            Throw
        Finally
            If vars IsNot Nothing AndAlso Not isUnlocked Then
                vars.Unlock()
            End If
        End Try

        Return result
    End Function

End Class]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>st_e0fed424054a4fca82b3b2c907175fe0</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>st_e0fed424054a4fca82b3b2c907175fe0</msb:DisplayName>
		<msb:ProjectId>{A2177FC5-47D2-493C-BB55-0CC12B8B239A}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_e0fed424054a4fca82b3b2c907175fe0.vbproj"/>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="st_e0fed424054a4fca82b3b2c907175fe0.vbproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{8de1fa57-2a9d-4be6-a618-da154045f6bb}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>st_e0fed424054a4fca82b3b2c907175fe0</RootNamespace>
    <AssemblyName>st_e0fed424054a4fca82b3b2c907175fe0</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />

        <Host Name="ScriptTask" IconIndex="">
        </Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
              <BinaryItem
                Name="st_e0fed424054a4fca82b3b2c907175fe0.dll">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
FA0WCgJvSQAACm9KAAAKA29lAAAKAm9JAAAKb0oAAAoSA29gAAAKCQNvYQAACm9mAAAKKBEAAAoM
3j8lKEEAAAoTBP4aCSwICW9jAAAKFwrc3iclKEEAAAoTBQJvSQAACm9KAAAKb2QAAAr+GgksCQYt
BglvYwAACtwIKgE0AAAAACcAFDsACh0AAAECACcAHkUADAAAAAAAAAQAT1MAGh0AAAECAAQAaW0A
DQAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1z
Y29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49
Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAA
AAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAA+AkA
ACN+AABkCgAA2AwAACNTdHJpbmdzAAAAADwXAACgBgAAI1VTANwdAAAQAAAAI0dVSUQAAADsHQAA
AAUAACNCbG9iAAAAAAAAAAIAAAFXHaIJCQ8AAAD6JTMAFgAAAQAAAEQAAAAKAAAADAAAABsAAAAH
AAAAcwAAAAIAAAA2AAAAEQAAAAQAAAAIAAAACQAAAAkAAAABAAAABgAAAAEAAAADAAAAAwAAAAIA
AAAAAK8MAQAAAAAACgBLASEBCgB/AWEBBgCPAYgBCgDnASEBBgBlAogBCgDnAr0CBgAdAwwDBgBK
AzUDDgCxA5wDEgAwBAcEBgCHBIgBDgC6BKQEDgDTBKQEDgAABegEBgAqBRcFCgBpBUIFCgCBBRMA
DgC2BZkFBgDrBcsFBgAJBogBBgAtBogBCgBGBhMABgCKBmsGBgCwBp4GBgDXBsYGBgDqBhcFFgAS
BwcHBgAsByAHBgA6B4gBGgCDB2MHFgCVBwcHGgChB2MHBgC2B4gBBgDLByAHBgDwB+YHBgD9B+YH
CgAiCEIFBgBjCIgBBgB3CIgBBgCJCIgBDgDPCLAIDgDVCLAICgAbCUIFBgBVCYgBBgBmCYgBEgCC
CQcEGgCcCWMHBgDOCYgBGgDzCWMHGgA+CmMHGgBbCmMHBgCKCuYHGgCbCmMHGgDBCmMHGgDlCmMH
BgAHC4gBEgAdCwcEBgB3C8sFBgCXC8sFBgDPC7ULBgDoC54GBgAFDGsGBgATDJ4GBgAuDJ4GBgBJ
DJ4GBgBiDJ4GBgB7DJ4GBgCYDJ4GAAAAAAEAAAAAAAEAAQAAAAAAKQA3AAUAAQABAAAAAABeADcA
CQABAAIAAAEQAGkANwANAAEAAwAFAQAAcwAAAA0ABQAIAAUBAACBAAAADQAFAA8AAAAAAJwAqAAN
AAYAEQAAARAA2QDkACUACAAVAAEAAAAIAeQAKQAKABgAAgEAABMBAAAtAAoAHAAxAKoBIAAxANMB
LQAxAPUBOgAxABoCRwAhAPYCkAARAC0DnQARAFYDoQARAMkDvwARANEDwwAGBowE5ABWgJQE5wBW
gJwE5wBQIAAAAAAGGFsBEwABAFggAAAAAAYYWwETAAEAYCAAAAAAERiWARcAAQCMIAAAAAATCJ0B
GwABAKQgAAAAABMIwwEoAAEAvCAAAAAAEwjsATUAAQDUIAAAAAATCAoCQgABAOwgAAAAAEYCUAJj
AAEACCEAAAAARgJZAmgAAgAcIQAAAACDAGoCbAACADQhAAAAAEYCcgJxAAIASCEAAAAAEQB7AngA
AgBkIQAAAAABAJkCgAADAIAhAAAAAAYYWwETAAQAiCEAAAAAAwitAosABAC8IQAAAAAGGFsBEwAE
ANAhAAAAAAMYWwETAAQA2CEAAAAAFghiA6UABAAUIgAAAAAWCHYDqgAEACgiAAAAABYIggOvAAQA
MCIAAAAAERiWARcABQBEIgAAAAAGGFsBEwAFAEwiAAAAABYI3gPGAAUAqCIAAAAABhhbARMABQCw
IgAAAAAGAEwEEwAFAHgrAAAAAAEAUQTZAAUANCwAAAAAAQB6BN8ABwAAAAEAVwIAAAEAkAIAAAEA
kAIAAAEAjgMAAAEAXwQAAAIAbAQAAAEAXwQJAFsBEwBhAFsB9QBxAFsBBAERAFsBEwB5AFsBEwAk
AFsBEwAsAFsBEwA0AFsBEwA8AFsBEwAkAK0CiwAsAK0CiwA0AK0CiwA8AK0CiwCBAFsBEwCJAFsB
EwCRAFsBUwGZAPoFngEZAFACYwAZAFkCaAApABsGqwEZAHICcQCpADcGuwEZAFsBEwCxAFsBywFE
APYCkABMAN4DiwBMAGEGSAJMAFsBEwC5AFsBVwIpALkGYgI5AFsBZwJJAFsBEwDJAN8GgwLJAOUG
gwLRAFsBEwBRAFsBEwAJAb0HjQIRAdQHkgIRAd0HmAIZAVsBngLZAFsBpALZAAQIqwLZABEIcQAJ
ARoIcQApASwIsAIJAToIcQDZAEsItwLZAFgIvAIJAV0IwAIxAW8IEwDhAFsBEwA5AX8IwwIJAY4I
yAIJAZQIcQAJAZkIzwIJAaEI1AIJAagI2gJJAeII4AI5AeoI6QIJAfIIaAAJAf0I7gIJAQcJ9AIJ
AaEI+gLhABAJAQNZAScJBwPpADcJcQAJAaEIDQNZAUMJFwDhAHICcQBhAV0JFQMJAY4IHAMJAXkJ
JgNRAJQJKwNxAa4JMQN5AXkJJgMJAcQJNwOBAdoJPQPhAOYJQQPhAPIIaABxAf8JSgOJAQ8KUAMB
AR0KVgPxABEIcQDxACkKcQAJAXICcQDxAEwKWwORAXkJYwCRAWcKYQOZAXAKaAPxAHkKcQChAY8K
bQMJAaEIcgOpAakKvAJxAbIKeAN5AcsKUwF5AdgKygOxAWcK0gO5AWEG2QOxAe4KEwB5AfUKEwB5
AfsKUwG5Ad4D6QPBAVsBVwLJAVsBEwDRAVsBeAPZAVsBEwDhAVsBUwHpAVsBUwHxAVsBUwH5AVsB
UwEBAlsBUwEJAlsBUwERAlsBUwEZAlsBUwEhAlsBUwEIACwA6wAIADAA8AApAIMAWAEuAIsD8AQu
AIMDxwQuAFsDIgQuAHsDpwQuAJMDXAIuAJsDxwQuAEsD+gMuAFMDAwQuAGMDagQuAGsDdwQuAOsA
XAIuADsDoQQuAHMDXAJAACsA8ABAABMA+wBDABMA+wBDABsACgFJAIMAdgFjABsACgFjABMA+wBp
AIMAaQGAACsA8ACDAHMA8ACDABsACgGDAHsA8ACJAIMAigGgACsA8ACjAMMA0wGjABMA+wDAACsA
8ADDABMA+wDDAOsAXALJABMAegLgACsA8ADpABMAegIAASsA8AAAARMA+wAJARsB8AAgASsA8AAg
ARMA+wAjATsDXAIjAUMD8ABAARMA+wBAASsA8ABgARMA+wBgASsA8ACAASsA8ACgASsA8ADAARMA
+wDAASsA8ADgASsA8AAAAhMA+wAAAisA8AA/AUQBSQFOAaMBpwGyAbcBxgHGAU4CbgJ1AogCfQPe
A+0DBAABAAYABQAHAAYACAAIAAAAfwFPAAAAOAJUAAAA5wFZAAAARAJeAAAAAAOYAAAAHQO1AAAA
lAO6AAAAjgPLAAIABAADAAIABQAFAAIABgAHAAIABwAJAAIADwALAAIAEgANAAIAEwAPAAEAFAAP
AAIAFwARAHUAdQCIACMBKgExATgBNQI8AgSAAAABAAAAAAAAAAAAAAAAAOQAAAAEAAAAAAAAAAAA
AAABAAoAAAAAAAoAAAAAAAAAAAAAAAoAEwAAAAAABAAAAAAAAAAAAAAAAQCIAQAAAAALAAAAAAAA
AAAAAADQAOgDAAAAAAQAAAAAAAAAAAAAAAEABwcAAAAACwAAAAAAAAAAAAAA0ABEBwAAAAAAAAAA
AQAAAD8LAAAFAAQABgAEAAoACQAAABAADACOAgAAEAAZAI4CAAAAABsAjgItAMEBLQBDAgAAAAAA
PE1vZHVsZT4AbXNjb3JsaWIATWljcm9zb2Z0LlZpc3VhbEJhc2ljAE15QXBwbGljYXRpb24Ac3Rf
ZTBmZWQ0MjQwNTRhNGZjYTgyYjNiMmM5MDcxNzVmZTAuTXkATXlDb21wdXRlcgBNeVByb2plY3QA
TXlXZWJTZXJ2aWNlcwBUaHJlYWRTYWZlT2JqZWN0UHJvdmlkZXJgMQBNeVJlc291cmNlcwBzdF9l
MGZlZDQyNDA1NGE0ZmNhODJiM2IyYzkwNzE3NWZlMC5NeS5SZXNvdXJjZXMATXlTZXR0aW5ncwBz
dF9lMGZlZDQyNDA1NGE0ZmNhODJiM2IyYzkwNzE3NWZlMABTY3JpcHRNYWluAFNjcmlwdFJlc3Vs
dHMATWljcm9zb2Z0LlZpc3VhbEJhc2ljLkFwcGxpY2F0aW9uU2VydmljZXMAQXBwbGljYXRpb25C
YXNlAC5jdG9yAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5EZXZpY2VzAENvbXB1dGVyAFN5c3RlbQBP
YmplY3QALmNjdG9yAGdldF9Db21wdXRlcgBtX0NvbXB1dGVyT2JqZWN0UHJvdmlkZXIAZ2V0X0Fw
cGxpY2F0aW9uAG1fQXBwT2JqZWN0UHJvdmlkZXIAVXNlcgBnZXRfVXNlcgBtX1VzZXJPYmplY3RQ
cm92aWRlcgBnZXRfV2ViU2VydmljZXMAbV9NeVdlYlNlcnZpY2VzT2JqZWN0UHJvdmlkZXIAQXBw
bGljYXRpb24AV2ViU2VydmljZXMARXF1YWxzAG8AR2V0SGFzaENvZGUAVHlwZQBHZXRUeXBlAFRv
U3RyaW5nAENyZWF0ZV9fSW5zdGFuY2VfXwBUAGluc3RhbmNlAERpc3Bvc2VfX0luc3RhbmNlX18A
Z2V0X0dldEluc3RhbmNlAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5NeVNlcnZpY2VzLkludGVybmFs
AENvbnRleHRWYWx1ZWAxAG1fQ29udGV4dABHZXRJbnN0YW5jZQBTeXN0ZW0uUmVzb3VyY2VzAFJl
c291cmNlTWFuYWdlcgBfcmVzTWdyAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAF9y
ZXNDdWx0dXJlAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAVmFs
dWUAQ3VsdHVyZQBTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBt
X1ZhbHVlAG1fU3luY09iamVjdABnZXRfVmFsdWUATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRU
YXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0
T2JqZWN0TW9kZWxCYXNlAE1haW4AV3JpdGVWYXJpYWJsZQB2YXJpYWJsZU5hbWUAdmFyaWFibGVW
YWx1ZQBSZWFkVmFyaWFibGUARW51bQB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQBTeXN0ZW0uQ29t
cG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRl
AFN5c3RlbS5Db2RlRG9tLkNvbXBpbGVyAEdlbmVyYXRlZENvZGVBdHRyaWJ1dGUAU3lzdGVtLkRp
YWdub3N0aWNzAERlYnVnZ2VySGlkZGVuQXR0cmlidXRlAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5D
b21waWxlclNlcnZpY2VzAFN0YW5kYXJkTW9kdWxlQXR0cmlidXRlAEhpZGVNb2R1bGVOYW1lQXR0
cmlidXRlAFN5c3RlbS5Db21wb25lbnRNb2RlbC5EZXNpZ24ASGVscEtleXdvcmRBdHRyaWJ1dGUA
U3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBSdW50aW1lSGVscGVycwBHZXRPYmplY3RW
YWx1ZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBBY3RpdmF0b3IAQ3JlYXRl
SW5zdGFuY2UATXlHcm91cENvbGxlY3Rpb25BdHRyaWJ1dGUAc2V0X1ZhbHVlAFN5c3RlbS5SdW50
aW1lLkludGVyb3BTZXJ2aWNlcwBDb21WaXNpYmxlQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9u
AEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uVGhyZWFkaW5nAE1vbml0b3IARW50ZXIARXhp
dABEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFN5c3RlbS5YbWwAWG1sVGV4dFJlYWRlcgBT
eXN0ZW0uVGV4dABTdHJpbmdCdWlsZGVyAEV4Y2VwdGlvbgBNaWNyb3NvZnQuU3FsU2VydmVyLk1h
bmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBDb25uZWN0aW9uTWFuYWdl
cgBYbWxOb2RlVHlwZQBDb25uZWN0aW9uRW51bWVyYXRvcgBTdHJpbmcASXNOdWxsT3JFbXB0eQBF
bmNvZGluZwBnZXRfVVRGOABHZXRCeXRlcwBTeXN0ZW0uSU8ATWVtb3J5U3RyZWFtAFN0cmVhbQBn
ZXRfTm9kZVR5cGUAZ2V0X05hbWUAVG9Mb3dlcgBPcGVyYXRvcnMAQ29tcGFyZVN0cmluZwBUb1Vw
cGVySW52YXJpYW50AEdldEF0dHJpYnV0ZQBSZWFkAEVtcHR5AElEaXNwb3NhYmxlAERpc3Bvc2UA
Q29udmVydABUb0Jvb2xlYW4AQ2hhcgBTcGxpdABUcmltAEluZGV4T2YAQ29uY2F0AFJlcGxhY2UA
U3lzdGVtLlRleHQuUmVndWxhckV4cHJlc3Npb25zAFJlZ2V4AFJlZ2V4T3B0aW9ucwBJc01hdGNo
AFRvSW50MzIAZ2V0X0xlbmd0aABTdWJzdHJpbmcAUGFkUmlnaHQAQXBwZW5kTGluZQBQcm9qZWN0
RGF0YQBTZXRQcm9qZWN0RXJyb3IAZ2V0X01lc3NhZ2UAQ2xlYXJQcm9qZWN0RXJyb3IAQm9vbGVh
bgBUcnlQYXJzZQBTdHJpbmdTcGxpdE9wdGlvbnMAQ29udGFpbnMAU2NyaXB0T2JqZWN0TW9kZWwA
Z2V0X0R0cwBWYXJpYWJsZURpc3BlbnNlcgBnZXRfVmFyaWFibGVEaXNwZW5zZXIAVHJpbVN0YXJ0
AEVudmlyb25tZW50AGdldF9OZXdMaW5lAEFwcGVuZEZvcm1hdABDb25uZWN0aW9ucwBnZXRfQ29u
bmVjdGlvbnMAR2V0RW51bWVyYXRvcgBnZXRfQ3VycmVudABnZXRfQ29ubmVjdGlvblN0cmluZwBE
dHNQcm9wZXJ0aWVzAGdldF9Qcm9wZXJ0aWVzAER0c1Byb3BlcnR5AGdldF9JdGVtAEdldFZhbHVl
AGdldF9DcmVhdGlvbk5hbWUAUGF0aABHZXRGaWxlTmFtZQBEdHNFbnVtZXJhdG9yAE1vdmVOZXh0
AHNldF9UYXNrUmVzdWx0AFZhcmlhYmxlcwBMb2NrRm9yV3JpdGUAR2V0VmFyaWFibGVzAFZhcmlh
YmxlAFVubG9jawBSZXNldABMb2NrRm9yUmVhZABDTFNDb21wbGlhbnRBdHRyaWJ1dGUAU1NJU1Nj
cmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAHN0X2UwZmVkNDI0MDU0YTRmY2E4MmIzYjJjOTA3
MTc1ZmUwLlJlc291cmNlcy5yZXNvdXJjZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0
ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5n
AFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUZpbGVWZXJzaW9uQXR0cmlidXRlAEd1
aWRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRB
dHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0
ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAc3Rf
ZTBmZWQ0MjQwNTRhNGZjYTgyYjNiMmM5MDcxNzVmZTAuZGxsAAAAMU0AeQAuAFIAZQBzAG8AdQBy
AGMAZQBzAC4ATQB5AFIAZQBzAG8AdQByAGMAZQBzAAAndgBhAHIAUwBTAEkAUwBPAHAAcwBfAFQA
YQBzAGsATABpAHMAdAAAK3YAYQByAFMAUwBJAFMATwBwAHMAXwBTAG8AdQByAGMAZQBUAHkAcABl
AAAPVQBOAEsATgBPAFcATgAAM3YAYQByAFMAUwBJAFMATwBwAHMAXwBQAGEAcgBlAG4AdABTAG8A
dQByAGMAZQBJAEQAAAEAB3QAcwBrAAAhUwB5AHMAdABlAG0AOgA6AFMAbwB1AHIAYwBlAEkARAAA
BWkAZAAAB3QAeQBwAAADcAAAI1MAeQBzAHQAZQBtADoAOgBQAGEAYwBrAGEAZwBlAEkARAAAP1UA
cwBlAHIAOgA6AHYAYQByAFMAUwBJAFMATwBwAHMAXwBWAGEAcgBpAGEAYgBsAGUAVgBhAGwAdQBl
AHMAAEVVAHMAZQByADoAOgB2AGEAcgBTAFMASQBTAE8AcABzAF8ARABpAHMAYQBiAGwAZQBWAGEA
cgBMAG8AZwBnAGkAbgBnAAA7VQBzAGUAcgA6ADoAdgBhAHIAUwBTAEkAUwBPAHAAcwBfAEYAaQBs
AHQAZQByAGUAZABWAGEAcgBzAAAFOgA6AAANdQBzAGUAcgA6ADoAAAMqAAAHXAB3ACoAAAsqACoA
KgAqACoAAENVAHMAZQByADoAOgB2AGEAcgBTAFMASQBTAE8AcABzAF8ATQBhAHgAVgBhAHIAQwBo
AGEAcgBzAFQAbwBMAG8AZwAAgUcgAC4ALgAuADwAVgBBAEwAVQBFACAAVABSAFUATgBDAEEAVABF
AEQAIAAtACAAQwBoAGEAbgBnAGUAIAB2AGEAbAB1AGUAIABvAGYAIABbAHYAYQByAFMAUwBJAFMA
TwBwAHMAXwBNAGEAeABWAGEAcgBDAGgAYQByAHMAVABvAEwAbwBnAF0AIAB0AG8AIAAtADEAIABm
AHIAbwBtACAAYwBvAG4AZgBpAGcAIABmAGkAbABlACAAaQBmACAAeQBvAHUAIAB3AGEAbgB0ACAA
dABvACAAbABvAGcAIABmAHUAbABsACAAdgBhAGwAdQBlACAAKABOAG8AdAAgAHIAZQBjAG8AbQBt
AGUAbgBkAGUAZAAgAGYAbwByACAAcABlAHIAZgBvAHIAbQBhAG4AYwBlACAAcgBlAGEAcwBvAG4A
KQA+AAEJLgAuAC4AIAAARy4ALgAuACAAewBFAHIAcgBvAHIAIAByAGUAYQBkAGkAbgBnACAAdgBh
AHIAaQBhAGIAbABlACAAdgBhAGwAdQBlADoAIAAAA30AAGlVAHMAZQByADoAOgB2AGEAcgBTAFMA
SQBTAE8AcABzAF8ARABpAHMAYQBiAGwAZQBQAGEAcgBhAG0AZQB0AGUAcgBJAG4AaQB0AGkAYQBs
AFYAYQBsAHUAZQBMAG8AZwBnAGkAbgBnAAA/VQBzAGUAcgA6ADoAdgBhAHIAUwBTAEkAUwBPAHAA
cwBfAEYAaQBsAHQAZQByAGUAZABQAGEAcgBhAG0AcwAAFSQAUABhAGMAawBhAGcAZQA6ADoAABt7
ADAAfQAuAC4ALgAgAHsAMQB9AHsAMgB9AAAzdgBhAHIAUwBTAEkAUwBPAHAAcwBfAFYAYQByAGkA
YQBiAGwAZQBWAGEAbAB1AGUAcwAAR1UAcwBlAHIAOgA6AHYAYQByAFMAUwBJAFMATwBwAHMAXwBE
AGkAcwBhAGIAbABlAEMAbwBuAG4ATABvAGcAZwBpAG4AZwAAPVUAcwBlAHIAOgA6AHYAYQByAFMA
UwBJAFMATwBwAHMAXwBGAGkAbAB0AGUAcgBlAGQAQwBvAG4AbgBzAAAVUwBlAHIAdgBlAHIATgBh
AG0AZQAAG1MAcQBsAFMAZQByAHYAZQByAE4AYQBtAGUAAAlIAG8AcwB0AAAVUwBlAHIAdgBlAHIA
SABvAHMAdAAADVMAZQByAHYAZQByAAARRgBMAEEAVABGAEkATABFAAAJRgBJAEwARQAAAy4AAAcg
ACAACQAAPy4ALgAuACAAewBFAHIAcgBvAHIAIAByAGUAYQBkAGkAbgBnACAAYwBvAG4AbgBlAGMA
dABpAG8AbgA6ACAAAENVAHMAZQByADoAOgB2AGEAcgBTAFMASQBTAE8AcABzAF8AQwBvAG4AbgBl
AGMAdABpAG8AbgBWAGEAbAB1AGUAcwAAguLEqau79EulPN2oj0gaPQAIt3pcVhk04IkIsD9ffxHV
CjoDIAABAwAAAQQAABIMBwYVEhgBEgwEAAASCAcGFRIYARIIBAAAEhEHBhUSGAESEQQAABIUBwYV
EhgBEhQECAASDAQIABIIBAgAEhEECAASFAQgAQIcAyAACAQgABIVAyAADgIeAAcQAQEeAB4ABzAB
AQEQHgACEwAEIAATAAcGFRIZARMABCgAEwADBhIdAwYSIQQAABIdBAAAEiEFAAEBEiEECAASHQQI
ABIhAwYSIAIGHAQAABIgBAgAEiAIiYRdzYCAzJEFIAIBDhwEIAEcDgIGCAMGESgEAAAAAAQBAAAA
BSABARE1CAEAAQAAAAAABSACAQ4OGAEACk15VGVtcGxhdGUIMTAuMC4wLjAAAAYVEhgBEgwGFRIY
ARIIBhUSGAESEQYVEhgBEhQEBwESDAQHARIIBAcBEhEEBwESFAQgAQEOEAEAC015LkNvbXB1dGVy
AAAMAQAHTXkuVXNlcgAAEwEADk15LkFwcGxpY2F0aW9uAAATAQAOTXkuV2ViU2VydmljZXMAAAQA
ARwcAwcBAgMHAQgGAAESFRFRBAcBEhUDBwEOBRABAB4ABAoBHgAEBwEeAAcgBAEODg4OYQEANFN5
c3RlbS5XZWIuU2VydmljZXMuUHJvdG9jb2xzLlNvYXBIdHRwQ2xpZW50UHJvdG9jb2wSQ3JlYXRl
X19JbnN0YW5jZV9fE0Rpc3Bvc2VfX0luc3RhbmNlX18AAAAGFRIYARMABhUSGQETAAQKARMABSAB
ARMACAcDEwATABMABCABAQIFAQAAAAAEIAASYQYgAgEOEmEGBwISHRIdBAcBEiEIAQACAAAAAAAE
AAEBHAQHARIgBAABAg4FAAASgIkFIAEdBQ4FIAEBHQUGIAEBEoCRBCAAEX0GAAMIDg4CBCABDg4D
IAACAgYOBAABAhwGIAEdDh0DBCABCA4FAAIODg4FIAIODg4IAAMCDg4RgKkEAAEIHAUgAg4ICAUg
Ag4IAwYAAw4ODg4FIAEScQ4FAAEBEnUHAAQODg4ODgYAAgIOEAIJIAIdDh0DEYC1BCABAg4FIAAS
gLkFIAASgL0FIAEOHQMDAAAOCCAEEnEOHBwcBSAAEoDFBSAAEoCBBCAAEnkFIAASgMkGIAESgM0c
BCABHBwEAAEODgUAAQ4dDgQgAQEITAc1DhJtAh0OAgICEnEScQ4dDg4cDgIODggCDhJ1HA4dDhJx
Dg4OHA4cHQ4ODhJ5Ag4ODhJ1EnURfR0DCB0OCB0OCB0OEoCBCB0OHQ4HIAEBEBKA2QYgARKA3RwE
IAEBHAoHBAISgNkSdRJ1AyAAHAwHBgIcHBKA2RJ1EnUIAQAIAAAAAAAeAQABAFQCFldyYXBOb25F
eGNlcHRpb25UaHJvd3MBRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdv
cmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0DAEABzEuMC4wLjAAACkBACRlOTdlMDllZS01
OWE5LTRmMTMtYjIzOC05M2FhZGE4MzM2ZWIAAAUBAAEAAB8BABpDb3B5cmlnaHQgQCBNaWNyb3Nv
ZnQgMjAxNwAAKAEAI3N0X2UwZmVkNDI0MDU0YTRmY2E4MmIzYjJjOTA3MTc1ZmUwAAAOAQAJTWlj
cm9zb2Z0AAAAvFAAAAAAAAAAAAAA3lAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAANBQAAAAAAAA
AAAAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAA
AAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAADIAwAAAAAA
AAAAAADIAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEA
AAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBs
AGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEKAMAAAEA
UwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAABAMAAAEAMAAwADAAMAAwADQAYgAwAAAANAAK
AAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAABNAGkAYwByAG8AcwBvAGYAdAAAAHAAJAABAEYA
aQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABzAHQAXwBlADAAZgBlAGQANAAyADQAMAA1
ADQAYQA0AGYAYwBhADgAMgBiADMAYgAyAGMAOQAwADcAMQA3ADUAZgBlADAAAAAwAAgAAQBGAGkA
bABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABwACgAAQBJAG4AdABlAHIAbgBh
AGwATgBhAG0AZQAAAHMAdABfAGUAMABmAGUAZAA0ADIANAAwADUANABhADQAZgBjAGEAOAAyAGIA
MwBiADIAYwA5ADAANwAxADcANQBmAGUAMAAuAGQAbABsAAAAXAAbAAEATABlAGcAYQBsAEMAbwBw
AHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAATQBpAGMAcgBvAHMAbwBmAHQA
IAAyADAAMQA3AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAcwB0
AF8AZQAwAGYAZQBkADQAMgA0ADAANQA0AGEANABmAGMAYQA4ADIAYgAzAGIAMgBjADkAMAA3ADEA
NwA1AGYAZQAwAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAHMAdABf
AGUAMABmAGUAZAA0ADIANAAwADUANABhADQAZgBjAGEAOAAyAGIAMwBiADIAYwA5ADAANwAxADcA
NQBmAGUAMAAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAu
ADAAAAA4AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4A
MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAMAAAA8DAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPreExecute]\SSISOpsEhObj_Package_OnPreExecute"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{360FCA09-802A-4329-845F-968007A53EBF}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_Package_OnPreExecute"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="OLEDB_ETLAudit"
              SQLTask:SqlStatementSource="EXEC [bix].[usp_SSISOps_Audit_OnPreExecute_61] @Scope='Package',@ExecutionID=?,@SourceID=?,@SourceName=?,@InteractiveMode=?,@UserName=?,@MachineName=?,@LogCustomValues=0,@LayoutXML=?,@TaskListXML=?,@DFLayoutXML=?,@Variables=?,@Connections=?,@GroupNames=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="System::SourceName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="System::InteractiveMode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="System::UserName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="5"
                SQLTask:DtsVariableName="System::MachineName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="6"
                SQLTask:DtsVariableName="User::varSSISOps_PkgLayout"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="7"
                SQLTask:DtsVariableName="User::varSSISOps_TaskList"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="8"
                SQLTask:DtsVariableName="User::varSSISOps_DfLayout"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="9"
                SQLTask:DtsVariableName="User::varSSISOps_VariableValues"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="10"
                SQLTask:DtsVariableName="User::varSSISOps_ConnectionValues"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="11"
                SQLTask:DtsVariableName="User::varSSISOps_GroupNames"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPreExecute]\SSISOpsEhObj_Task_OnPreExecute"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{25A90E9C-18BA-419D-837F-89B3D20A1762}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_Task_OnPreExecute"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="OLEDB_ETLAudit"
              SQLTask:SqlStatementSource="EXEC [bix].[usp_SSISOps_Audit_OnPreExecute_61] @Scope='Task',@ExecutionID=?,@SourceID=?,@ParentSourceID=?,@SourceName=?,@SourceType=?,@LogCustomValues=0" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::varSSISOps_ParentSourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="System::SourceName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="User::varSSISOps_SourceType"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnPreExecute].PrecedenceConstraints[{0E9C733A-8321-4536-8ED2-A3EFE76316D0\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{0E9C733A-8321-4536-8ED2-A3EFE76316D0}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceID]!=@[System::PackageID] &amp;&amp; @[System::SourceName]!=@[System::PackageName] &amp;&amp; SUBSTRING(@[System::SourceName], 1, 12)!=&quot;SSISOpsEhObj&quot; &amp;&amp; @[User::varSSISOps_DisableBIxAuditing]==false"
          DTS:From="Package.EventHandlers[OnPreExecute]\SSISOpsEhObj_OnPreExecute_Start"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{0E9C733A-8321-4536-8ED2-A3EFE76316D0}"
          DTS:To="Package.EventHandlers[OnPreExecute]\SSISOpsEhObj_Task_OnPreExecute"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnPreExecute].PrecedenceConstraints[{F28188E1-098F-4AEF-A5B7-57E0DEB12EDD\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{F28188E1-098F-4AEF-A5B7-57E0DEB12EDD}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceID]==@[System::PackageID] &amp;&amp; @[System::SourceName]==@[System::PackageName] &amp;&amp; SUBSTRING(@[System::SourceName], 1, 12)!=&quot;SSISOpsEhObj&quot; &amp;&amp; @[User::varSSISOps_DisableBIxAuditing]==false"
          DTS:From="Package.EventHandlers[OnPreExecute]\SSISOpsEhObj_OnPreExecute_Start"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{F28188E1-098F-4AEF-A5B7-57E0DEB12EDD}"
          DTS:To="Package.EventHandlers[OnPreExecute]\SSISOpsEhObj_Package_OnPreExecute"
          DTS:Value="2" />
      </DTS:PrecedenceConstraints>
    </DTS:EventHandler>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnVariableValueChanged]"
      DTS:CreationName="OnVariableValueChanged"
      DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
      DTS:DTSID="{DBB1DF43-5A9B-440B-9084-5644644C0738}"
      DTS:EventID="6619250"
      DTS:EventName="OnVariableValueChanged"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{61A65717-CB53-42AE-81ED-3D29A6C6E811}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{8FA7342D-AD76-4ACC-8A4C-8D664401B66D}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_CurValue">
          <DTS:VariableValue
            DTS:DataSubType="ManagedSerializable"
            DTS:DataType="13">
            <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
              <SOAP-ENV:Body>
                <xsd:anyType
                  id="ref-1"></xsd:anyType>
              </SOAP-ENV:Body>
            </SOAP-ENV:Envelope>
          </DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. Set this variable to list of variables you want to mask during logging process. You can use comma separated list you can use wildcard &quot; * &quot; for pattern matching names are case insensitive. This option is used to mask variable values during logging process. This option is helpful when you have sensitive data (e.g. varFTP_Password) or variable value is extremly large to display (e.g. varXML_Document). When masking is enabled, &quot;****&quot; is logged in the BIxPress Audit Database rather than actual value of variable. Note: You can configure list of variables you want to mask outside the package by configuring &quot;varSSISOps_FilteredVars&quot;. There are 3 places where you have to set this value (OnPreExecute, OnPostExecute, OnVariableValueChanged)."
          DTS:DTSID="{48E5067C-EB77-4D3B-9603-564C1037B885}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_FilteredVars">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. Set this variable to configure how many characters will be logged for each variable. Default variable length for logging is 4000 anything after that will be truncated. -1 = Log full variable value . There are 3 places where you have to set this value (OnPreExecute, OnPostExecute OnVariableValueChanged)."
          DTS:DTSID="{1A4487CA-9E69-4110-A8E8-F1284B7EF22A}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_MaxVarCharsToLog">
          <DTS:VariableValue
            DTS:DataType="3">4000</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnVariableValueChanged]\SSISOpsEhObj_OnVariableValueChanged_Start"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{6F94DAB7-C069-4BCF-B637-BEA1B813A019}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_OnVariableValueChanged_Start"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[User::varSSISOps_DisableBIxAuditing]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <ScriptProject
              Name="st_ca19c9d4e1124e2aab15b7e046bff6a1"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="VisualBasic">
              <ProjectItem
                Name="st_ca19c9d4e1124e2aab15b7e046bff6a1.vbproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{2213c395-b63e-4cda-91fd-3b3224690351}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>st_ca19c9d4e1124e2aab15b7e046bff6a1</RootNamespace>
    <AssemblyName>st_ca19c9d4e1124e2aab15b7e046bff6a1</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />

        <Host Name="ScriptTask" IconIndex="">
        </Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="My Project\AssemblyInfo.vb"
                Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("st_ca19c9d4e1124e2aab15b7e046bff6a1")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("Microsoft")> 
<Assembly: AssemblyProduct("st_ca19c9d4e1124e2aab15b7e046bff6a1")> 
<Assembly: AssemblyCopyright("Copyright @ Microsoft 2017")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("943f0aa6-3ca8-44a8-96cd-b0d797e3f829")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.vb"
                Encoding="UTF8"><![CDATA[#Region "Imports"
Imports System
Imports System.Data
Imports System.Math
Imports System.Runtime.InteropServices
Imports Microsoft.SqlServer.Dts.Runtime
#End Region

'ScriptMain is the entry point class of the script.  Do not change the name, attributes,
'or parent of this class.
<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute()> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
    Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

    Public Sub Main()

        ' Begin BI xPress Code

        Try
        Dim var As String = ReadVariable("System::VariableName").ToString()
        Dim filterList As String = ReadVariable("User::varSSISOps_FilteredVars").ToString()
        Dim arrFilter() As String = filterList.Split(",".ToCharArray(), StringSplitOptions.RemoveEmptyEntries)

                        Dim bSkip As Boolean = False
                        Dim comp As String = var

                        For Each f As String In arrFilter
                            comp = comp.ToLower().Trim()
                            f = f.ToLower().Trim()

                            If String.IsNullOrEmpty(f) Then
                                Continue For
                            End If
                            If comp.IndexOf("::") < 0 Then comp = "user::" & comp
                            If f.IndexOf("::") < 0 Then f = "user::" & f
                            If System.Text.RegularExpressions.Regex.IsMatch(comp,f.Replace("*","\w*"),Text.RegularExpressions.RegexOptions.IgnoreCase) Then
                                bSkip = True
                                Exit For
                            End If
                        Next

            If bSkip Then
                WriteVariable("User::varSSISOps_CurValue", "*****")
                Exit Sub
            End If
            Dim val As Object = ReadVariable("System::VariableValue")
            If (Not (val Is DBNull.Value)) AndAlso val IsNot Nothing Then
                Dim s As String = val.ToString()
                Dim iMaxCharsToLog As Integer = Convert.ToInt32(ReadVariable("User::varSSISOps_MaxVarCharsToLog"))
                Dim bLogFullValue As Boolean = If(iMaxCharsToLog <= 0, True, False)
                If bLogFullValue OrElse s.Length <= iMaxCharsToLog Then
                    WriteVariable("User::varSSISOps_CurValue", s)
                Else
                    WriteVariable("User::varSSISOps_CurValue", s.Substring(0, iMaxCharsToLog) & " ...<VALUE TRUNCATED - Change value of [varSSISOps_MaxVarCharsToLog] to -1 from config file if you want to log full value (Not recommended for performance reason)>")
                End If
            Else
                WriteVariable("User::varSSISOps_CurValue", "")
            End If
        Catch ex As Exception
            Dts.Events.FireWarning(0, "VariableValueChanged", "Can not log value for [" & ReadVariable("System::VariableName").ToString() & "]", "", 0)
        End Try



        ' End BI xPress Code

        Dts.TaskResult = ScriptResults.Success
    End Sub

#Region "ScriptResults declaration"

    Enum ScriptResults
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    End Enum

# End Region

    Private Sub WriteVariable(ByVal variableName As String, ByVal variableValue As Object)
        Dim vars As Variables = Nothing
        Dim isUnlocked As Boolean = False

        Try
            Dts.VariableDispenser.LockForWrite(variableName)
            Dts.VariableDispenser.GetVariables(vars)

            Try
                vars(variableName).Value = variableValue
            Catch ex As Exception
                Throw
            Finally
                If vars IsNot Nothing Then
                    vars.Unlock()
                    isUnlocked = True
                End If
            End Try
        Catch ex As Exception
            Dts.VariableDispenser.Reset()

            Throw
        Finally
            If vars IsNot Nothing AndAlso Not isUnlocked Then
                vars.Unlock()
            End If
        End Try
    End Sub

    Private Function ReadVariable(ByVal variableName As String) As Object
        Dim vars As Variables = Nothing
        Dim isUnlocked As Boolean = False
        Dim result As Object

        Try
            Dts.VariableDispenser.LockForRead(variableName)
            Dts.VariableDispenser.GetVariables(vars)

            Try
                result = vars(variableName).Value
            Catch ex As Exception
                Throw
            Finally
                If vars IsNot Nothing Then
                    vars.Unlock()
                    isUnlocked = True
                End If
            End Try
        Catch ex As Exception
            Dts.VariableDispenser.Reset()

            Throw
        Finally
            If vars IsNot Nothing AndAlso Not isUnlocked Then
                vars.Unlock()
            End If
        End Try

        Return result
    End Function

End Class]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>st_ca19c9d4e1124e2aab15b7e046bff6a1</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>st_ca19c9d4e1124e2aab15b7e046bff6a1</msb:DisplayName>
		<msb:ProjectId>{5DA94EF7-A85E-4CCA-A0EF-A10091A918DE}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_ca19c9d4e1124e2aab15b7e046bff6a1.vbproj"/>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
              <BinaryItem
                Name="st_ca19c9d4e1124e2aab15b7e046bff6a1.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAJTAxlgAAAAAAAAAAOAAAiELAQsAACQAAAAIAAAAAAAAnkIA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAIAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAERCAABXAAAAAGAAACAEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAApCIAAAAgAAAAJAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAACAEAAAAYAAAAAYAAAAmAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAALAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACA
QgAAAAAAAEgAAAACAAUA7CYAAFgbAAABAAAAAAAAADQmAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKAEAAAoqHgIoBAAACiqmcwYAAAqAAQAABHMHAAAKgAIA
AARzCAAACoADAAAEcwkAAAqABAAABCoAABMwAQALAAAAAQAAEX4BAAAEbwoAAAoqABMwAQALAAAA
AgAAEX4CAAAEbwsAAAoqABMwAQALAAAAAwAAEX4DAAAEbwwAAAoqABMwAQALAAAABAAAEX4EAAAE
bw0AAAoqABMwAgANAAAABQAAEQIDKBEAAAooEgAACioAAAATMAEABwAAAAYAABECKBMAAAoqABMw
AQALAAAABwAAEdAFAAACKBQAAAoqABMwAQAHAAAACAAAEQIoFQAACioAEzABABAAAAAJAAARAowB
AAAbLQYoAQAAKyoCKhMwAgAQAAAACgAAEQMSAP4VAgAAGwaBAgAAGyoeAigXAAAKKhMwAgAoAAAA
CwAAEQJ7GQAACm8aAAAKCweMAwAAGy0SKAIAACsLAnsZAAAKB28bAAAKBypKAigXAAAKAnMcAAAK
fRkAAAoqAB4CKBcAAAoqEzACAC0AAAAMAAARfgYAAAQtIHIBAABw0AcAAAIoFAAACm8eAAAKcx8A
AAoLB4AGAAAEfgYAAAQqAAAAEzABAAYAAAANAAARfgcAAAQqAAAeAoAHAAAEKkJzFwAACigRAAAK
gAkAAAQqAAAAHgIoIAAACiobMAEAPwAAAA4AABF+CAAABC0yfgkAAAQoEQAACighAAAKfggAAAQt
HHMWAAAGgAgAAATeEH4JAAAEKBEAAAooIgAACtx+CAAABCoAARAAAAIAHQAMKQAQAAAAAB4CKCQA
AAoqGzAGAOEBAAAPAAARAnIzAABwbxsAAAZvFQAAChMFAnJdAABwbxsAAAZvFQAACg0JcpkAAHBv
JQAAChdvJgAACgoWCxEFDAYTDBYTCziHAAAAEQwRC5oTBghvJwAACm8oAAAKDBEGbycAAApvKAAA
ChMGEQYoKQAACiwCK1UIcp0AAHBvKgAAChYvDHKjAABwCCgrAAAKDBEGcp0AAHBvKgAAChYvDnKj
AABwEQYoKwAAChMGCBEGcrEAAHBytQAAcG8sAAAKFygtAAAKLAQXCysREQsX1hMLEQsRDI63P27/
//8HLBUCcr0AAHBy8QAAcG8aAAAG3fEAAAACcv0AAHBvGwAABigRAAAKEwQRBH4uAAAKLm4RBCxq
EQRvFQAAChMJAnIpAQBwbxsAAAYoEQAACigvAAAKEwgRCBYxAxYrARcTBxEHLQsRCW8wAAAKEQgw
DwJyvQAAcBEJbxoAAAbefQJyvQAAcBEJFhEIbzEAAApybQEAcCgrAAAKbxoAAAbeXAJyvQAAcHK2
AgBwbxoAAAbeSiUoMgAAChMKAm8zAAAKbzQAAAoWcrgCAHBy4gIAcAJyMwAAcG8bAAAGbxUAAApy
EgMAcCg1AAAKcrYCAHAWbzYAAAooNwAACt4AAm8zAAAKFm84AAAKKgAAAEEcAAAAAAAAAAAAAIoB
AACKAQAASgAAABsAAAEbMAIAeQAAABAAABEUCxYKAm8zAAAKbzkAAAoDbzoAAAoCbzMAAApvOQAA
ChIBbzsAAAoHA288AAAKBCgRAAAKbz0AAArePSUoMgAACgz+GgcsCAdvPgAAChcK3N4mJSgyAAAK
DQJvMwAACm85AAAKbz8AAAr+GgcsCQYtBgdvPgAACtwqAAAAATQAAAAAJwAUOwAJGwAAAQIAJwAd
RAAMAAAAAAAABABOUgAZGwAAAQIABABnawANAAAAABswAgB8AAAAEQAAERQNFgoCbzMAAApvOQAA
CgNvQAAACgJvMwAACm85AAAKEgNvOwAACgkDbzwAAApvQQAACigRAAAKDN4/JSgyAAAKEwT+Ggks
CAlvPgAAChcK3N4nJSgyAAAKEwUCbzMAAApvOQAACm8/AAAK/hoJLAkGLQYJbz4AAArcCCoBNAAA
AAAnABQ7AAobAAABAgAnAB5FAAwAAAAAAAAEAE9TABobAAABAgAEAGltAA0AAAAAtAAAAM7K774B
AAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lv
bj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUw
ODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQ
tAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAKQIAAAjfgAAEAkAAOAKAAAj
U3RyaW5ncwAAAADwEwAAGAMAACNVUwAIFwAAEAAAACNHVUlEAAAAGBcAAEAEAAAjQmxvYgAAAAAA
AAACAAABVx2iCQkPAAAA+iUzABYAAAEAAAA0AAAACgAAAAwAAAAbAAAABwAAAE4AAAACAAAANgAA
ABEAAAAEAAAACAAAAAkAAAAJAAAAAQAAAAUAAAABAAAAAwAAAAMAAAACAAAAAAC1CgEAAAAAAAoA
SwEhAQoAfwFhAQYAjwGIAQoA5wEhAQYAZQKIAQoA5wK9AgYAHQMMAwYASgM1Aw4AsQOcAxIAMAQH
BAYAhwSIAQ4AugSkBA4A0wSkBA4AAAXoBAYAKgUXBQoAaQVCBQoAgQUTAA4AtgWZBQYA6wXLBQYA
CQaIAQYALQaIAQoARgYTAAYAigZrBgYAsAaeBgYA1wbGBgYA6gYXBQYABweIAQYAEQeIAQYAJAeI
AQ4AjgdvBw4AlAdvBwYAqQeIAQYAsAeIAQoA1QdCBRIA8QcHBBIACwgHBBYAlgh2CBYAoAh2CBYA
4gh2CAYADQmIARIAIwkHBAYAfQnLBQYAnQnLBQYA1Qm7CQYA7gmeBgYACwprBgYAGQqeBgYANAqe
BgYATwqeBgYAaAqeBgYAgQqeBgYAngqeBgAAAAABAAAAAAABAAEAAAAAACkANwAFAAEAAQAAAAAA
XgA3AAkAAQACAAABEABpADcADQABAAMABQEAAHMAAAANAAUACAAFAQAAgQAAAA0ABQAPAAAAAACc
AKgADQAGABEAAAEQANkA5AAlAAgAFQABAAAACAHkACkACgAYAAIBAAATAQAALQAKABwAMQCqASAA
MQDTAS0AMQD1AToAMQAaAkcAIQD2ApAAEQAtA50AEQBWA6EAEQDJA78AEQDRA8MABgaMBOQAVoCU
BOcAVoCcBOcAUCAAAAAABhhbARMAAQBYIAAAAAAGGFsBEwABAGAgAAAAABEYlgEXAAEAjCAAAAAA
EwidARsAAQCkIAAAAAATCMMBKAABALwgAAAAABMI7AE1AAEA1CAAAAAAEwgKAkIAAQDsIAAAAABG
AlACYwABAAghAAAAAEYCWQJoAAIAHCEAAAAAgwBqAmwAAgA0IQAAAABGAnICcQACAEghAAAAABEA
ewJ4AAIAZCEAAAAAAQCZAoAAAwCAIQAAAAAGGFsBEwAEAIghAAAAAAMIrQKLAAQAvCEAAAAABhhb
ARMABADQIQAAAAADGFsBEwAEANghAAAAABYIYgOlAAQAFCIAAAAAFgh2A6oABAAoIgAAAAAWCIID
rwAEADAiAAAAABEYlgEXAAUARCIAAAAABhhbARMABQBMIgAAAAAWCN4DxgAFAKgiAAAAAAYYWwET
AAUAsCIAAAAABgBMBBMABQC8JAAAAAABAFEE2QAFAHglAAAAAAEAegTfAAcAAAABAFcCAAABAJAC
AAABAJACAAABAI4DAAABAF8EAAACAGwEAAABAF8ECQBbARMAYQBbAfUAcQBbAQQBEQBbARMAeQBb
ARMAJABbARMALABbARMANABbARMAPABbARMAJACtAosALACtAosANACtAosAPACtAosAgQBbARMA
iQBbARMAkQBbAVMBmQD6BZ4BGQBQAmMAGQBZAmgAKQAbBqsBGQByAnEAqQA3BrsBGQBbARMAsQBb
AcsBRAD2ApAATADeA4sATABhBkgCTABbARMAuQBbAVcCKQC5BmICOQBbAWcCSQBbARMAyQDfBoMC
yQDlBoMC0QBbARMAUQBbARMA4QAYB40C4QA3B5IC4QA9B3EA4QBFB3EA4QBKB5sC4QBYB6AC4QBg
B6UC4QBnB6sC8QChB7ECAQGOA7kCCQG4B74C4QDAB2gA4QDLB8MCEQHhB8kCUQADCM8CGQEfCNUC
4QBgB9sCIQEqCOICEQE2CBcAGQFICOsCGQGyCAMDMQHICFMBMQHVCAkDKQHrCBEDOQFhBhgDKQH0
CBMAMQH7CBMAMQEBCVMBOQHeAygDQQFbAVcCSQFbARMAUQFbAesCWQFbARMAYQFbAVMBaQFbAVMB
cQFbAVMBeQFbAVMBgQFbAVMBiQFbAVMBkQFbAVMBmQFbAVMBoQFbAVMBCAAsAOsACAAwAPAAKQCD
AGwBLgBjAi8ELgBzAgYELgBbAgYELgArAkIDLgBTAuYDLgBrAlwCLgAjAjkDLgAzAmEDLgA7AqkD
LgBDArYDLgDrAFwCLgATAuADLgBLAlwCQAArAPAAQAATAPsAQwAbAAoBQwATAPsASQCDAIoBYwAb
AAoBYwATAPsAaQCDAH0BgAArAPAAgwBzAPAAgwAbAAoBgwB7APAAiQCDAFgBoAArAPAAowDDANMB
owATAPsAwAArAPAAwwATAPsAwwDrAFwCyQATAHoC4AArAPAA6QATAHoCAAETAPsAAAErAPAACQEb
AfAAIAETAPsAIAErAPAAIwETAlwCIwEbAvAAQAErAPAAQAETAPsAYAETAPsAYAErAPAAgAErAPAA
oAErAPAAwAErAPAAwAETAPsA4AErAPAAAAIrAPAAAAITAPsAPwFEAUkBTgGjAacBsgG3AcYBxgFO
Am4CdQKIAvACHQMsAwQAAQAGAAUABwAGAAgACAAAAH8BTwAAADgCVAAAAOcBWQAAAEQCXgAAAAAD
mAAAAB0DtQAAAJQDugAAAI4DywACAAQAAwACAAUABQACAAYABwACAAcACQACAA8ACwACABIADQAC
ABMADwABABQADwACABcAEQB1AHUAiAAjASoBMQE4ATUCPAIEgAAAAQAAAAAAAAAAAAAAAADkAAAA
BAAAAAAAAAAAAAAAAQAKAAAAAAAKAAAAAAAAAAAAAAAKABMAAAAAAAQAAAAAAAAAAAAAAAEAiAEA
AAAACwAAAAAAAAAAAAAA0ADoAwAAAAALAAAAAAAAAAAAAADQAFcIAAAAAAAAAAABAAAARQkAAAUA
BAAGAAQACgAJAAAAEAAMAI4CAAAQABkAjgIAAAAAGwCOAi0AwQEtAEMCAAAAPE1vZHVsZT4AbXNj
b3JsaWIATWljcm9zb2Z0LlZpc3VhbEJhc2ljAE15QXBwbGljYXRpb24Ac3RfY2ExOWM5ZDRlMTEy
NGUyYWFiMTViN2UwNDZiZmY2YTEuTXkATXlDb21wdXRlcgBNeVByb2plY3QATXlXZWJTZXJ2aWNl
cwBUaHJlYWRTYWZlT2JqZWN0UHJvdmlkZXJgMQBNeVJlc291cmNlcwBzdF9jYTE5YzlkNGUxMTI0
ZTJhYWIxNWI3ZTA0NmJmZjZhMS5NeS5SZXNvdXJjZXMATXlTZXR0aW5ncwBzdF9jYTE5YzlkNGUx
MTI0ZTJhYWIxNWI3ZTA0NmJmZjZhMQBTY3JpcHRNYWluAFNjcmlwdFJlc3VsdHMATWljcm9zb2Z0
LlZpc3VhbEJhc2ljLkFwcGxpY2F0aW9uU2VydmljZXMAQXBwbGljYXRpb25CYXNlAC5jdG9yAE1p
Y3Jvc29mdC5WaXN1YWxCYXNpYy5EZXZpY2VzAENvbXB1dGVyAFN5c3RlbQBPYmplY3QALmNjdG9y
AGdldF9Db21wdXRlcgBtX0NvbXB1dGVyT2JqZWN0UHJvdmlkZXIAZ2V0X0FwcGxpY2F0aW9uAG1f
QXBwT2JqZWN0UHJvdmlkZXIAVXNlcgBnZXRfVXNlcgBtX1VzZXJPYmplY3RQcm92aWRlcgBnZXRf
V2ViU2VydmljZXMAbV9NeVdlYlNlcnZpY2VzT2JqZWN0UHJvdmlkZXIAQXBwbGljYXRpb24AV2Vi
U2VydmljZXMARXF1YWxzAG8AR2V0SGFzaENvZGUAVHlwZQBHZXRUeXBlAFRvU3RyaW5nAENyZWF0
ZV9fSW5zdGFuY2VfXwBUAGluc3RhbmNlAERpc3Bvc2VfX0luc3RhbmNlX18AZ2V0X0dldEluc3Rh
bmNlAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5NeVNlcnZpY2VzLkludGVybmFsAENvbnRleHRWYWx1
ZWAxAG1fQ29udGV4dABHZXRJbnN0YW5jZQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdl
cgBfcmVzTWdyAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAF9yZXNDdWx0dXJlAGdl
dF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAVmFsdWUAQ3VsdHVyZQBT
eXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBtX1ZhbHVlAG1fU3lu
Y09iamVjdABnZXRfVmFsdWUATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxC
YXNlAE1haW4AV3JpdGVWYXJpYWJsZQB2YXJpYWJsZU5hbWUAdmFyaWFibGVWYWx1ZQBSZWFkVmFy
aWFibGUARW51bQB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwA
RWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAFN5c3RlbS5Db2Rl
RG9tLkNvbXBpbGVyAEdlbmVyYXRlZENvZGVBdHRyaWJ1dGUAU3lzdGVtLkRpYWdub3N0aWNzAERl
YnVnZ2VySGlkZGVuQXR0cmlidXRlAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5Db21waWxlclNlcnZp
Y2VzAFN0YW5kYXJkTW9kdWxlQXR0cmlidXRlAEhpZGVNb2R1bGVOYW1lQXR0cmlidXRlAFN5c3Rl
bS5Db21wb25lbnRNb2RlbC5EZXNpZ24ASGVscEtleXdvcmRBdHRyaWJ1dGUAU3lzdGVtLlJ1bnRp
bWUuQ29tcGlsZXJTZXJ2aWNlcwBSdW50aW1lSGVscGVycwBHZXRPYmplY3RWYWx1ZQBSdW50aW1l
VHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBBY3RpdmF0b3IAQ3JlYXRlSW5zdGFuY2UATXlH
cm91cENvbGxlY3Rpb25BdHRyaWJ1dGUAc2V0X1ZhbHVlAFN5c3RlbS5SdW50aW1lLkludGVyb3BT
ZXJ2aWNlcwBDb21WaXNpYmxlQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5AGdl
dF9Bc3NlbWJseQBTeXN0ZW0uVGhyZWFkaW5nAE1vbml0b3IARW50ZXIARXhpdABEZWJ1Z2dlck5v
blVzZXJDb2RlQXR0cmlidXRlAEV4Y2VwdGlvbgBTdHJpbmcAVG9DaGFyQXJyYXkAU3RyaW5nU3Bs
aXRPcHRpb25zAFNwbGl0AFRvTG93ZXIAVHJpbQBJc051bGxPckVtcHR5AEluZGV4T2YAQ29uY2F0
AFJlcGxhY2UAU3lzdGVtLlRleHQuUmVndWxhckV4cHJlc3Npb25zAFJlZ2V4AFJlZ2V4T3B0aW9u
cwBJc01hdGNoAERCTnVsbABDb252ZXJ0AFRvSW50MzIAZ2V0X0xlbmd0aABTdWJzdHJpbmcAUHJv
amVjdERhdGEAU2V0UHJvamVjdEVycm9yAFNjcmlwdE9iamVjdE1vZGVsAGdldF9EdHMARXZlbnRz
T2JqZWN0V3JhcHBlcgBnZXRfRXZlbnRzAEZpcmVXYXJuaW5nAENsZWFyUHJvamVjdEVycm9yAHNl
dF9UYXNrUmVzdWx0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5SdW50aW1lAFZhcmlhYmxlcwBWYXJpYWJsZURpc3BlbnNlcgBnZXRfVmFyaWFi
bGVEaXNwZW5zZXIATG9ja0ZvcldyaXRlAEdldFZhcmlhYmxlcwBWYXJpYWJsZQBnZXRfSXRlbQBV
bmxvY2sAUmVzZXQATG9ja0ZvclJlYWQAQ0xTQ29tcGxpYW50QXR0cmlidXRlAFNTSVNTY3JpcHRU
YXNrRW50cnlQb2ludEF0dHJpYnV0ZQBzdF9jYTE5YzlkNGUxMTI0ZTJhYWIxNWI3ZTA0NmJmZjZh
MS5SZXNvdXJjZXMucmVzb3VyY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAUnVu
dGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJn
ZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlGaWxlVmVyc2lvbkF0dHJpYnV0ZQBHdWlkQXR0
cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmli
dXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNz
ZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAHN0X2NhMTlj
OWQ0ZTExMjRlMmFhYjE1YjdlMDQ2YmZmNmExLmRsbAAAAAAAMU0AeQAuAFIAZQBzAG8AdQByAGMA
ZQBzAC4ATQB5AFIAZQBzAG8AdQByAGMAZQBzAAApUwB5AHMAdABlAG0AOgA6AFYAYQByAGkAYQBi
AGwAZQBOAGEAbQBlAAA7VQBzAGUAcgA6ADoAdgBhAHIAUwBTAEkAUwBPAHAAcwBfAEYAaQBsAHQA
ZQByAGUAZABWAGEAcgBzAAADLAAABToAOgAADXUAcwBlAHIAOgA6AAADKgAAB1wAdwAqAAAzVQBz
AGUAcgA6ADoAdgBhAHIAUwBTAEkAUwBPAHAAcwBfAEMAdQByAFYAYQBsAHUAZQAACyoAKgAqACoA
KgAAK1MAeQBzAHQAZQBtADoAOgBWAGEAcgBpAGEAYgBsAGUAVgBhAGwAdQBlAABDVQBzAGUAcgA6
ADoAdgBhAHIAUwBTAEkAUwBPAHAAcwBfAE0AYQB4AFYAYQByAEMAaABhAHIAcwBUAG8ATABvAGcA
AIFHIAAuAC4ALgA8AFYAQQBMAFUARQAgAFQAUgBVAE4AQwBBAFQARQBEACAALQAgAEMAaABhAG4A
ZwBlACAAdgBhAGwAdQBlACAAbwBmACAAWwB2AGEAcgBTAFMASQBTAE8AcABzAF8ATQBhAHgAVgBh
AHIAQwBoAGEAcgBzAFQAbwBMAG8AZwBdACAAdABvACAALQAxACAAZgByAG8AbQAgAGMAbwBuAGYA
aQBnACAAZgBpAGwAZQAgAGkAZgAgAHkAbwB1ACAAdwBhAG4AdAAgAHQAbwAgAGwAbwBnACAAZgB1
AGwAbAAgAHYAYQBsAHUAZQAgACgATgBvAHQAIAByAGUAYwBvAG0AbQBlAG4AZABlAGQAIABmAG8A
cgAgAHAAZQByAGYAbwByAG0AYQBuAGMAZQAgAHIAZQBhAHMAbwBuACkAPgABAQApVgBhAHIAaQBh
AGIAbABlAFYAYQBsAHUAZQBDAGgAYQBuAGcAZQBkAAAvQwBhAG4AIABuAG8AdAAgAGwAbwBnACAA
dgBhAGwAdQBlACAAZgBvAHIAIABbAAADXQAAAAAe86oZfAweTbG8+LpASoIqAAi3elxWGTTgiQiw
P19/EdUKOgMgAAEDAAABBAAAEgwHBhUSGAESDAQAABIIBwYVEhgBEggEAAASEQcGFRIYARIRBAAA
EhQHBhUSGAESFAQIABIMBAgAEggECAASEQQIABIUBCABAhwDIAAIBCAAEhUDIAAOAh4ABxABAR4A
HgAHMAEBARAeAAITAAQgABMABwYVEhkBEwAEKAATAAMGEh0DBhIhBAAAEh0EAAASIQUAAQESIQQI
ABIdBAgAEiEDBhIgAgYcBAAAEiAECAASIAiJhF3NgIDMkQUgAgEOHAQgARwOAgYIAwYRKAQAAAAA
BAEAAAAFIAEBETUIAQABAAAAAAAFIAIBDg4YAQAKTXlUZW1wbGF0ZQgxMC4wLjAuMAAABhUSGAES
DAYVEhgBEggGFRIYARIRBhUSGAESFAQHARIMBAcBEggEBwESEQQHARIUBCABAQ4TAQAOTXkuV2Vi
U2VydmljZXMAABABAAtNeS5Db21wdXRlcgAADAEAB015LlVzZXIAABMBAA5NeS5BcHBsaWNhdGlv
bgAABAABHBwDBwECAwcBCAYAARIVEVEEBwESFQMHAQ4FEAEAHgAECgEeAAQHAR4AByAEAQ4ODg5h
AQA0U3lzdGVtLldlYi5TZXJ2aWNlcy5Qcm90b2NvbHMuU29hcEh0dHBDbGllbnRQcm90b2NvbBJD
cmVhdGVfX0luc3RhbmNlX18TRGlzcG9zZV9fSW5zdGFuY2VfXwAAAAYVEhgBEwAGFRIZARMABAoB
EwAFIAEBEwAIBwMTABMAEwAEIAEBAgUBAAAAAAQgABJhBiACAQ4SYQYHAhIdEh0EBwESIQgBAAIA
AAAAAAQAAQEcBAcBEiAEIAAdAwggAh0OHQMRdQQAAQIOBCABCA4FAAIODg4FIAIODg4HAAMCDg4R
fQQGEoCBBAABCBwFIAIOCAgFAAEBEm0FIAASgI0FIAASgJEGAAMODg4OCCAFAQgODg4IBCABAQgS
Bw0dDgIODhwODgIIDhJtCB0OBSAAEoCZByABARASgJUGIAESgJ0cBCABARwKBwQCEoCVEm0SbQMg
ABwMBwYCHBwSgJUSbRJtCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAUcB
ABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5F
VCBGcmFtZXdvcmsgNAwBAAcxLjAuMC4wAAApAQAkOTQzZjBhYTYtM2NhOC00NGE4LTk2Y2QtYjBk
Nzk3ZTNmODI5AAAFAQABAAAfAQAaQ29weXJpZ2h0IEAgTWljcm9zb2Z0IDIwMTcAACgBACNzdF9j
YTE5YzlkNGUxMTI0ZTJhYWIxNWI3ZTA0NmJmZjZhMQAADgEACU1pY3Jvc29mdAAAAABsQgAAAAAA
AAAAAACOQgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgEIAAAAAAAAAAAAAAAAAAAAAAAAAAF9D
b3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAA
ABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA
yAMAAAAAAAAAAAAAyAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4A
AAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEA
cgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACw
BCgDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAAQDAAABADAAMAAwADAAMAA0AGIA
MAAAADQACgABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAATQBpAGMAcgBvAHMAbwBmAHQAAABw
ACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAcwB0AF8AYwBhADEAOQBjADkA
ZAA0AGUAMQAxADIANABlADIAYQBhAGIAMQA1AGIANwBlADAANAA2AGIAZgBmADYAYQAxAAAAMAAI
AAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAAcAAoAAEASQBuAHQA
ZQByAG4AYQBsAE4AYQBtAGUAAABzAHQAXwBjAGEAMQA5AGMAOQBkADQAZQAxADEAMgA0AGUAMgBh
AGEAYgAxADUAYgA3AGUAMAA0ADYAYgBmAGYANgBhADEALgBkAGwAbAAAAFwAGwABAEwAZQBnAGEA
bABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgAE0AaQBjAHIAbwBz
AG8AZgB0ACAAMgAwADEANwAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0A
ZQAAAHMAdABfAGMAYQAxADkAYwA5AGQANABlADEAMQAyADQAZQAyAGEAYQBiADEANQBiADcAZQAw
ADQANgBiAGYAZgA2AGEAMQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAA
AABzAHQAXwBjAGEAMQA5AGMAOQBkADQAZQAxADEAMgA0AGUAMgBhAGEAYgAxADUAYgA3AGUAMAA0
ADYAYgBmAGYANgBhADEAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4A
MAAuADAALgAwAAAAOAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAw
AC4AMAAuADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAAKAyAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnVariableValueChanged]\SSISOpsEhObj_Task_OnVariableValueChanged"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{DFAA86C9-D34E-4E5B-897A-98D9DFB1474B}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_Task_OnVariableValueChanged"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="OLEDB_ETLAudit"
              SQLTask:SqlStatementSource="EXEC [bix].[usp_SSISOps_Audit_OnVariableValueChanged_61] @ExecutionID=?,@SourceID=?,@VariableName=?,@VariableValue=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="System::VariableName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::varSSISOps_CurValue"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnVariableValueChanged].PrecedenceConstraints[{628B976F-C826-4478-B910-4E793234765C\}]"
          DTS:CreationName=""
          DTS:DTSID="{628B976F-C826-4478-B910-4E793234765C}"
          DTS:From="Package.EventHandlers[OnVariableValueChanged]\SSISOpsEhObj_OnVariableValueChanged_Start"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{628B976F-C826-4478-B910-4E793234765C}"
          DTS:To="Package.EventHandlers[OnVariableValueChanged]\SSISOpsEhObj_Task_OnVariableValueChanged"
          DTS:Value="2" />
      </DTS:PrecedenceConstraints>
    </DTS:EventHandler>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnWarning]"
      DTS:CreationName="OnWarning"
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. SSISOps : DON'T CHANGE PREFIX. "
      DTS:DTSID="{A5BAD4FE-7494-4844-B1FF-89003BB1EA8D}"
      DTS:EventID="579799854"
      DTS:EventName="OnWarning"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{102C0D31-4E2C-4E09-9CBC-8C68C89E9A5B}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
          DTS:DTSID="{5A625388-BC4D-4C3C-92C6-0AE31E2C42ED}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOpsNF_CHECK">
          <DTS:VariableValue
            DTS:DataType="8">{BE9EF9F8-824A-4381-AD87-02609D35195A}</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnWarning]\SSISOpsEhObj_OnWarning_Start"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{A4C63B30-AB49-40C9-9B6A-9FE88AF57D6D}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_OnWarning_Start"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[User::varSSISOps_DisableBIxAuditing]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <ScriptProject
              Name="st_d90d9a7b9c254251ac569f6034006ccc"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="VisualBasic">
              <ProjectItem
                Name="My Project\AssemblyInfo.vb"
                Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("st_d90d9a7b9c254251ac569f6034006ccc")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("Microsoft")> 
<Assembly: AssemblyProduct("st_d90d9a7b9c254251ac569f6034006ccc")> 
<Assembly: AssemblyCopyright("Copyright @ Microsoft 2017")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("23fb73a2-88d7-46d0-a331-a4b59c64529f")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.vb"
                Encoding="UTF8"><![CDATA[#Region "Imports"
Imports System
Imports System.Data
Imports System.Math
Imports System.Runtime.InteropServices
Imports Microsoft.SqlServer.Dts.Runtime
#End Region

'ScriptMain is the entry point class of the script.  Do not change the name, attributes,
'or parent of this class.
<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute()> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
    Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

    Public Sub Main()

        ' Begin BI xPress Code



        ' End BI xPress Code

        Dts.TaskResult = ScriptResults.Success
    End Sub

#Region "ScriptResults declaration"

    Enum ScriptResults
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    End Enum

# End Region

    Private Sub WriteVariable(ByVal variableName As String, ByVal variableValue As Object)
        Dim vars As Variables = Nothing
        Dim isUnlocked As Boolean = False

        Try
            Dts.VariableDispenser.LockForWrite(variableName)
            Dts.VariableDispenser.GetVariables(vars)

            Try
                vars(variableName).Value = variableValue
            Catch ex As Exception
                Throw
            Finally
                If vars IsNot Nothing Then
                    vars.Unlock()
                    isUnlocked = True
                End If
            End Try
        Catch ex As Exception
            Dts.VariableDispenser.Reset()

            Throw
        Finally
            If vars IsNot Nothing AndAlso Not isUnlocked Then
                vars.Unlock()
            End If
        End Try
    End Sub

    Private Function ReadVariable(ByVal variableName As String) As Object
        Dim vars As Variables = Nothing
        Dim isUnlocked As Boolean = False
        Dim result As Object

        Try
            Dts.VariableDispenser.LockForRead(variableName)
            Dts.VariableDispenser.GetVariables(vars)

            Try
                result = vars(variableName).Value
            Catch ex As Exception
                Throw
            Finally
                If vars IsNot Nothing Then
                    vars.Unlock()
                    isUnlocked = True
                End If
            End Try
        Catch ex As Exception
            Dts.VariableDispenser.Reset()

            Throw
        Finally
            If vars IsNot Nothing AndAlso Not isUnlocked Then
                vars.Unlock()
            End If
        End Try

        Return result
    End Function

End Class]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>st_d90d9a7b9c254251ac569f6034006ccc</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>st_d90d9a7b9c254251ac569f6034006ccc</msb:DisplayName>
		<msb:ProjectId>{310BA457-2B85-40FF-B6A2-12D7FAE13F32}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_d90d9a7b9c254251ac569f6034006ccc.vbproj"/>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="st_d90d9a7b9c254251ac569f6034006ccc.vbproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{fe17e829-6c41-4177-8d9b-6c6e085e8f1c}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>st_d90d9a7b9c254251ac569f6034006ccc</RootNamespace>
    <AssemblyName>st_d90d9a7b9c254251ac569f6034006ccc</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />

        <Host Name="ScriptTask" IconIndex="">
        </Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
              <BinaryItem
                Name="st_d90d9a7b9c254251ac569f6034006ccc.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAI7AxlgAAAAAAAAAAOAAAiELAQsAABwAAAAIAAAAAAAAzjsA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAIAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAHw7AABPAAAAAEAAACAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA1BsAAAAgAAAAHAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAACAEAAAAQAAAAAYAAAAeAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACw
OwAAAAAAAEgAAAACAAUA8CQAAIwWAAABAAAAAAAAADgkAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKAEAAAoqHgIoBAAACiqmcwYAAAqAAQAABHMHAAAKgAIA
AARzCAAACoADAAAEcwkAAAqABAAABCoAABMwAQALAAAAAQAAEX4BAAAEbwoAAAoqABMwAQALAAAA
AgAAEX4CAAAEbwsAAAoqABMwAQALAAAAAwAAEX4DAAAEbwwAAAoqABMwAQALAAAABAAAEX4EAAAE
bw0AAAoqABMwAgANAAAABQAAEQIDKBEAAAooEgAACioAAAATMAEABwAAAAYAABECKBMAAAoqABMw
AQALAAAABwAAEdAFAAACKBQAAAoqABMwAQAHAAAACAAAEQIoFQAACioAEzABABAAAAAJAAARAowB
AAAbLQYoAQAAKyoCKhMwAgAQAAAACgAAEQMSAP4VAgAAGwaBAgAAGyoeAigXAAAKKhMwAgAoAAAA
CwAAEQJ7GQAACm8aAAAKCweMAwAAGy0SKAIAACsLAnsZAAAKB28bAAAKBypKAigXAAAKAnMcAAAK
fRkAAAoqAB4CKBcAAAoqEzACAC0AAAAMAAARfgYAAAQtIHIBAABw0AcAAAIoFAAACm8eAAAKcx8A
AAoLB4AGAAAEfgYAAAQqAAAAEzABAAYAAAANAAARfgcAAAQqAAAeAoAHAAAEKkJzFwAACigRAAAK
gAkAAAQqAAAAHgIoIAAACiobMAEAPwAAAA4AABF+CAAABC0yfgkAAAQoEQAACighAAAKfggAAAQt
HHMWAAAGgAgAAATeEH4JAAAEKBEAAAooIgAACtx+CAAABCoAARAAAAIAHQAMKQAQAAAAAB4CKCQA
AAoqNgJvJQAAChZvJgAACioAABswAgB5AAAADwAAERQLFgoCbyUAAApvJwAACgNvKAAACgJvJQAA
Cm8nAAAKEgFvKQAACgcDbyoAAAoEKBEAAApvKwAACt49JSgsAAAKDP4aBywIB28uAAAKFwrc3iYl
KCwAAAoNAm8lAAAKbycAAApvLwAACv4aBywJBi0GB28uAAAK3CoAAAABNAAAAAAnABQ7AAkdAAAB
AgAnAB1EAAwAAAAAAAAEAE5SABkdAAABAgAEAGdrAA0AAAAAGzACAHwAAAAQAAARFA0WCgJvJQAA
Cm8nAAAKA28wAAAKAm8lAAAKbycAAAoSA28pAAAKCQNvKgAACm8xAAAKKBEAAAoM3j8lKCwAAAoT
BP4aCSwICW8uAAAKFwrc3iclKCwAAAoTBQJvJQAACm8nAAAKby8AAAr+GgksCQYtBglvLgAACtwI
KgE0AAAAACcAFDsACh0AAAECACcAHkUADAAAAAAAAAQAT1MAGh0AAAECAAQAaW0ADQAAAAC0AAAA
zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBW
ZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYx
OTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBB
RFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAGAgAACN+AACECAAA
8AkAACNTdHJpbmdzAAAAAHQSAAA0AAAAI1VTAKgSAAAQAAAAI0dVSUQAAAC4EgAA1AMAACNCbG9i
AAAAAAAAAAIAAAFXHaIJCQ8AAAD6JTMAFgAAAQAAAC0AAAAKAAAADAAAABsAAAAHAAAAPgAAAAIA
AAA2AAAAEAAAAAQAAAAIAAAACQAAAAkAAAABAAAABQAAAAEAAAADAAAAAwAAAAIAAAAAAMYJAQAA
AAAACgBLASEBCgB/AWEBBgCPAYgBCgDnASEBBgBlAogBCgDnAr0CBgAdAwwDBgBKAzUDDgCxA5wD
EgAwBAcEBgCHBIgBDgC6BKQEDgDTBKQEDgAABegEBgAqBRcFCgBpBUIFCgCBBRMADgC2BZkFBgDr
BcsFBgAJBogBBgAtBogBCgBGBhMABgCKBmsGBgCwBp4GBgDXBsYGBgDqBhcFEgAHBwcEFgBvB08H
BgB5B4gBFgCDB08HFgDFB08HCgDXB0IFBgAeCIgBEgA0CAcEBgCOCMsFBgCuCMsFBgDmCMwIBgD/
CJ4GBgAcCWsGBgAqCZ4GBgBFCZ4GBgBgCZ4GBgB5CZ4GBgCSCZ4GBgCvCZ4GAAAAAAEAAAAAAAEA
AQAAAAAAKQA3AAUAAQABAAAAAABeADcACQABAAIAAAEQAGkANwANAAEAAwAFAQAAcwAAAA0ABQAI
AAUBAACBAAAADQAFAA8AAAAAAJwAqAANAAYAEQAAARAA2QDkACUACAAVAAEAAAAIAeQAKQAKABgA
AgEAABMBAAAtAAoAHAAxAKoBIAAxANMBLQAxAPUBOgAxABoCRwAhAPYCkAARAC0DnQARAFYDoQAR
AMkDvwARANEDwwAGBowE5ABWgJQE5wBWgJwE5wBQIAAAAAAGGFsBEwABAFggAAAAAAYYWwETAAEA
YCAAAAAAERiWARcAAQCMIAAAAAATCJ0BGwABAKQgAAAAABMIwwEoAAEAvCAAAAAAEwjsATUAAQDU
IAAAAAATCAoCQgABAOwgAAAAAEYCUAJjAAEACCEAAAAARgJZAmgAAgAcIQAAAACDAGoCbAACADQh
AAAAAEYCcgJxAAIASCEAAAAAEQB7AngAAgBkIQAAAAABAJkCgAADAIAhAAAAAAYYWwETAAQAiCEA
AAAAAwitAosABAC8IQAAAAAGGFsBEwAEANAhAAAAAAMYWwETAAQA2CEAAAAAFghiA6UABAAUIgAA
AAAWCHYDqgAEACgiAAAAABYIggOvAAQAMCIAAAAAERiWARcABQBEIgAAAAAGGFsBEwAFAEwiAAAA
ABYI3gPGAAUAqCIAAAAABhhbARMABQCwIgAAAAAGAEwEEwAFAMAiAAAAAAEAUQTZAAUAfCMAAAAA
AQB6BN8ABwAAAAEAVwIAAAEAkAIAAAEAkAIAAAEAjgMAAAEAXwQAAAIAbAQAAAEAXwQJAFsBEwBh
AFsB9QBxAFsBBAERAFsBEwB5AFsBEwAkAFsBEwAsAFsBEwA0AFsBEwA8AFsBEwAkAK0CiwAsAK0C
iwA0AK0CiwA8AK0CiwCBAFsBEwCJAFsBEwCRAFsBUwGZAPoFngEZAFACYwAZAFkCaAApABsGqwEZ
AHICcQCpADcGuwEZAFsBEwCxAFsBywFEAPYCkABMAN4DiwBMAGEGSAJMAFsBEwC5AFsBVwIpALkG
YgI5AFsBZwJJAFsBEwDJAN8GgwLJAOUGgwLRAFsBEwBRAFsBEwBRABkHjQLZACEHkgLZAJUHlwLx
AKsHUwHxALgHnALhAM4HowL5AGEGqQIBAeMHrgIBAfMHFwDhAAUIEwDxAAwIEwDxABIIUwH5AN4D
vgIJAVsBVwIRAVsBEwAZAVsBkgIhAVsBEwApAVsBUwExAVsBUwE5AVsBUwFBAVsBUwFJAVsBUwFR
AVsBUwFZAVsBUwFhAVsBUwFpAVsBUwEIACwA6wAIADAA8AApAIMAWAEuAOMBxAMuANsBmwMuANMB
ewMuAKsB1wIuALMB9gIuAMsBXAIuAPMBmwMuAKMBzgIuAOsBXAIuALsBPgMuAMMBSwMuAOsAXAIu
AJMBdQNAACsA8ABAABMA+wBDABMA+wBDABsACgFJAIMAdgFjABsACgFjABMA+wBpAIMAaQGAACsA
8ACDABsACgGDAHsA8ACDAHMA8ACJAIMAigGgACsA8ACjAMMA0wGjABMA+wDAACsA8ADDABMA+wDD
AOsAXALJABMAegLgACsA8ADpABMAegIAARMA+wAAASsA8AAJARsB8AAgARMA+wAgASsA8AAjAZsB
8AAjAZMBXAJAARMA+wBAASsA8ABgASsA8ABgARMA+wCAASsA8ACgASsA8ADAASsA8ADAARMA+wDg
ASsA8AAAAhMA+wAAAisA8AA/AUQBSQFOAaMBpwGyAbcBxgHGAU4CbgJ1AogCtALCAgQAAQAGAAUA
BwAGAAgACAAAAH8BTwAAADgCVAAAAOcBWQAAAEQCXgAAAAADmAAAAB0DtQAAAJQDugAAAI4DywAC
AAQAAwACAAUABQACAAYABwACAAcACQACAA8ACwACABIADQACABMADwABABQADwACABcAEQB1AHUA
iAAjASoBMQE4ATUCPAIEgAAAAQAAAAAAAAAAAAAAAADkAAAABAAAAAAAAAAAAAAAAQAKAAAAAAAK
AAAAAAAAAAAAAAAKABMAAAAAAAQAAAAAAAAAAAAAAAEAiAEAAAAACwAAAAAAAAAAAAAA0ADoAwAA
AAALAAAAAAAAAAAAAADQADAHAAAAAAAAAAABAAAAVggAAAUABAAGAAQACgAJAAAAEAAMAI4CAAAQ
ABkAjgIAAAAAGwCOAi0AwQEtAEMCAAAAPE1vZHVsZT4AbXNjb3JsaWIATWljcm9zb2Z0LlZpc3Vh
bEJhc2ljAE15QXBwbGljYXRpb24Ac3RfZDkwZDlhN2I5YzI1NDI1MWFjNTY5ZjYwMzQwMDZjY2Mu
TXkATXlDb21wdXRlcgBNeVByb2plY3QATXlXZWJTZXJ2aWNlcwBUaHJlYWRTYWZlT2JqZWN0UHJv
dmlkZXJgMQBNeVJlc291cmNlcwBzdF9kOTBkOWE3YjljMjU0MjUxYWM1NjlmNjAzNDAwNmNjYy5N
eS5SZXNvdXJjZXMATXlTZXR0aW5ncwBzdF9kOTBkOWE3YjljMjU0MjUxYWM1NjlmNjAzNDAwNmNj
YwBTY3JpcHRNYWluAFNjcmlwdFJlc3VsdHMATWljcm9zb2Z0LlZpc3VhbEJhc2ljLkFwcGxpY2F0
aW9uU2VydmljZXMAQXBwbGljYXRpb25CYXNlAC5jdG9yAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5E
ZXZpY2VzAENvbXB1dGVyAFN5c3RlbQBPYmplY3QALmNjdG9yAGdldF9Db21wdXRlcgBtX0NvbXB1
dGVyT2JqZWN0UHJvdmlkZXIAZ2V0X0FwcGxpY2F0aW9uAG1fQXBwT2JqZWN0UHJvdmlkZXIAVXNl
cgBnZXRfVXNlcgBtX1VzZXJPYmplY3RQcm92aWRlcgBnZXRfV2ViU2VydmljZXMAbV9NeVdlYlNl
cnZpY2VzT2JqZWN0UHJvdmlkZXIAQXBwbGljYXRpb24AV2ViU2VydmljZXMARXF1YWxzAG8AR2V0
SGFzaENvZGUAVHlwZQBHZXRUeXBlAFRvU3RyaW5nAENyZWF0ZV9fSW5zdGFuY2VfXwBUAGluc3Rh
bmNlAERpc3Bvc2VfX0luc3RhbmNlX18AZ2V0X0dldEluc3RhbmNlAE1pY3Jvc29mdC5WaXN1YWxC
YXNpYy5NeVNlcnZpY2VzLkludGVybmFsAENvbnRleHRWYWx1ZWAxAG1fQ29udGV4dABHZXRJbnN0
YW5jZQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgBfcmVzTWdyAFN5c3RlbS5HbG9i
YWxpemF0aW9uAEN1bHR1cmVJbmZvAF9yZXNDdWx0dXJlAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0
X0N1bHR1cmUAc2V0X0N1bHR1cmUAVmFsdWUAQ3VsdHVyZQBTeXN0ZW0uQ29uZmlndXJhdGlvbgBB
cHBsaWNhdGlvblNldHRpbmdzQmFzZQBtX1ZhbHVlAG1fU3luY09iamVjdABnZXRfVmFsdWUATWlj
cm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tz
LlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAE1haW4AV3JpdGVWYXJpYWJs
ZQB2YXJpYWJsZU5hbWUAdmFyaWFibGVWYWx1ZQBSZWFkVmFyaWFibGUARW51bQB2YWx1ZV9fAFN1
Y2Nlc3MARmFpbHVyZQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmli
dXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAFN5c3RlbS5Db2RlRG9tLkNvbXBpbGVyAEdlbmVyYXRl
ZENvZGVBdHRyaWJ1dGUAU3lzdGVtLkRpYWdub3N0aWNzAERlYnVnZ2VySGlkZGVuQXR0cmlidXRl
AE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5Db21waWxlclNlcnZpY2VzAFN0YW5kYXJkTW9kdWxlQXR0
cmlidXRlAEhpZGVNb2R1bGVOYW1lQXR0cmlidXRlAFN5c3RlbS5Db21wb25lbnRNb2RlbC5EZXNp
Z24ASGVscEtleXdvcmRBdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBS
dW50aW1lSGVscGVycwBHZXRPYmplY3RWYWx1ZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJv
bUhhbmRsZQBBY3RpdmF0b3IAQ3JlYXRlSW5zdGFuY2UATXlHcm91cENvbGxlY3Rpb25BdHRyaWJ1
dGUAc2V0X1ZhbHVlAFN5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcwBDb21WaXNpYmxlQXR0
cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uVGhy
ZWFkaW5nAE1vbml0b3IARW50ZXIARXhpdABEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFNj
cmlwdE9iamVjdE1vZGVsAGdldF9EdHMAc2V0X1Rhc2tSZXN1bHQATWljcm9zb2Z0LlNxbFNlcnZl
ci5NYW5hZ2VkRFRTAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVmFyaWFibGVzAEV4
Y2VwdGlvbgBWYXJpYWJsZURpc3BlbnNlcgBnZXRfVmFyaWFibGVEaXNwZW5zZXIATG9ja0Zvcldy
aXRlAEdldFZhcmlhYmxlcwBWYXJpYWJsZQBnZXRfSXRlbQBQcm9qZWN0RGF0YQBTZXRQcm9qZWN0
RXJyb3IAQ2xlYXJQcm9qZWN0RXJyb3IAVW5sb2NrAFJlc2V0AExvY2tGb3JSZWFkAENMU0NvbXBs
aWFudEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAc3RfZDkwZDlh
N2I5YzI1NDI1MWFjNTY5ZjYwMzQwMDZjY2MuUmVzb3VyY2VzLnJlc291cmNlcwBDb21waWxhdGlv
blJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFN5c3Rl
bS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Rmls
ZVZlcnNpb25BdHRyaWJ1dGUAR3VpZEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0
ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNz
ZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1i
bHlUaXRsZUF0dHJpYnV0ZQBzdF9kOTBkOWE3YjljMjU0MjUxYWM1NjlmNjAzNDAwNmNjYy5kbGwA
AAAAMU0AeQAuAFIAZQBzAG8AdQByAGMAZQBzAC4ATQB5AFIAZQBzAG8AdQByAGMAZQBzAAAA5RlX
q+ZUMUCztQPBgRQpPAAIt3pcVhk04IkIsD9ffxHVCjoDIAABAwAAAQQAABIMBwYVEhgBEgwEAAAS
CAcGFRIYARIIBAAAEhEHBhUSGAESEQQAABIUBwYVEhgBEhQECAASDAQIABIIBAgAEhEECAASFAQg
AQIcAyAACAQgABIVAyAADgIeAAcQAQEeAB4ABzABAQEQHgACEwAEIAATAAcGFRIZARMABCgAEwAD
BhIdAwYSIQQAABIdBAAAEiEFAAEBEiEECAASHQQIABIhAwYSIAIGHAQAABIgBAgAEiAIiYRdzYCA
zJEFIAIBDhwEIAEcDgIGCAMGESgEAAAAAAQBAAAABSABARE1CAEAAQAAAAAABSACAQ4OGAEACk15
VGVtcGxhdGUIMTAuMC4wLjAAAAYVEhgBEgwGFRIYARIIBhUSGAESEQYVEhgBEhQEBwESDAQHARII
BAcBEhEEBwESFAQgAQEOEAEAC015LkNvbXB1dGVyAAAMAQAHTXkuVXNlcgAAEwEADk15LkFwcGxp
Y2F0aW9uAAATAQAOTXkuV2ViU2VydmljZXMAAAQAARwcAwcBAgMHAQgGAAESFRFRBAcBEhUDBwEO
BRABAB4ABAoBHgAEBwEeAAcgBAEODg4OYQEANFN5c3RlbS5XZWIuU2VydmljZXMuUHJvdG9jb2xz
LlNvYXBIdHRwQ2xpZW50UHJvdG9jb2wSQ3JlYXRlX19JbnN0YW5jZV9fE0Rpc3Bvc2VfX0luc3Rh
bmNlX18AAAAGFRIYARMABhUSGQETAAQKARMABSABARMACAcDEwATABMABCABAQIFAQAAAAAEIAAS
YQYgAgEOEmEGBwISHRIdBAcBEiEIAQACAAAAAAAEAAEBHAQHARIgBCAAEm0EIAEBCAQgABJ5BiAB
ARAScQUgARJ9HAQgAQEcBQABARJ1CQcEAhJxEnUSdQMgABwLBwYCHBwScRJ1EnUIAQAIAAAAAAAe
AQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12
NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0DAEABzEuMC4wLjAA
ACkBACQyM2ZiNzNhMi04OGQ3LTQ2ZDAtYTMzMS1hNGI1OWM2NDUyOWYAAAUBAAEAAB8BABpDb3B5
cmlnaHQgQCBNaWNyb3NvZnQgMjAxNwAAKAEAI3N0X2Q5MGQ5YTdiOWMyNTQyNTFhYzU2OWY2MDM0
MDA2Y2NjAAAOAQAJTWljcm9zb2Z0AAAApDsAAAAAAAAAAAAAvjsAAAAgAAAAAAAAAAAAAAAAAAAA
AAAAAAAAALA7AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAAMgDAAAAAAAAAAAAAMgDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsAQoAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAEAwAAAQAwADAAMAAwADAA
NABiADAAAAA0AAoAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAE0AaQBjAHIAbwBzAG8AZgB0
AAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAHMAdABfAGQAOQAwAGQA
OQBhADcAYgA5AGMAMgA1ADQAMgA1ADEAYQBjADUANgA5AGYANgAwADMANAAwADAANgBjAGMAYwAA
ADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAHAAKAABAEkA
bgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAcwB0AF8AZAA5ADAAZAA5AGEANwBiADkAYwAyADUANAAy
ADUAMQBhAGMANQA2ADkAZgA2ADAAMwA0ADAAMAA2AGMAYwBjAC4AZABsAGwAAABcABsAAQBMAGUA
ZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABNAGkAYwBy
AG8AcwBvAGYAdAAgADIAMAAxADcAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4A
YQBtAGUAAABzAHQAXwBkADkAMABkADkAYQA3AGIAOQBjADIANQA0ADIANQAxAGEAYwA1ADYAOQBm
ADYAMAAzADQAMAAwADYAYwBjAGMALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0A
ZQAAAAAAcwB0AF8AZAA5ADAAZAA5AGEANwBiADkAYwAyADUANAAyADUAMQBhAGMANQA2ADkAZgA2
ADAAMwA0ADAAMAA2AGMAYwBjAAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgAwAC4AMAAAADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAADQOwAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnWarning]\SSISOpsEhObj_Package_OnWarning"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{FB08FBF4-B99B-4BD3-B5C1-AC3C3B6ED768}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_Package_OnWarning"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="OLEDB_ETLAudit"
              SQLTask:SqlStatementSource="EXEC [bix].[usp_SSISOps_Audit_OnAlert_61] @Scope='Package',@EventType='W',@ExecutionID=?,@SourceID=?,@SourceName=?,@SourceType='UNKNOWN',@MessageCode=?,@MessageDescription=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="System::SourceName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="System::ErrorCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="System::ErrorDescription"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnWarning]\SSISOpsEhObj_Task_OnWarning"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{A1A39CD0-DCBC-45AD-AA15-63436D30A0F4}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_Task_OnWarning"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="OLEDB_ETLAudit"
              SQLTask:SqlStatementSource="EXEC [bix].[usp_SSISOps_Audit_OnAlert_61] @Scope='Task',@EventType='W',@ExecutionID=?,@SourceID=?,@SourceName=?,@SourceType='UNKNOWN',@MessageCode=?,@MessageDescription=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="System::SourceName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="System::ErrorCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="System::ErrorDescription"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnWarning]\SSISOpsNFObj_UpdateAlertList"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
          DTS:Disabled="True"
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{EBB66D59-0A9C-41BF-9105-ADEBE70B3F31}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsNFObj_UpdateAlertList">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="st_0c6be39e0d47482f8915fe703c0ac7b4"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="VisualBasic">
              <ProjectItem
                Name="ScriptMain.vb"
                Encoding="UTF8"><![CDATA['/*
'Copyright © 2015 Pragmatic Works Inc.
'#####################################################################################################################
'LEGAL NOTICE
'#####################################################################################################################
'THE FOLLOWING SOURCE CODE IS PRODUCED BY PRAGMATIC WORKS INC.
'YOU MUST HAVE A VALID LICENSE OF "BI xPRESS" (PRODUCT OF PRAGMATIC WORKS) TO USE/MODIFY THE FOLLOWING SOURCE CODE.

'YOU CAN NOT PUBLISH ANY PORTION OF THIS SOURCE CODE WITHOUT WRITTEN PERMISSION OF PRAGMATIC WORKS INC.
'##################################################################################################################### 
'*/
#Region "Imports"
Imports System
Imports System.Data
Imports System.Math
Imports System.Runtime.InteropServices
Imports Microsoft.SqlServer.Dts.Runtime
Imports System.Net
Imports System.Net.Mail
Imports System.Collections
#End Region

'ScriptMain is the entry point class of the script.  Do not change the name, attributes,
'or parent of this class.
<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute()> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
    Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

    Public Sub Main()

        ' Begin BI xPress Code

        UpdateAlertList()

        ' End BI xPress Code

        Dts.TaskResult = ScriptResults.Success
    End Sub

#Region "ScriptResults declaration"

    Enum ScriptResults
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    End Enum

# End Region

    Private Const NotificationFrameworkAlertListVariableName As String = "User::varSSISOpsNF_AlertList"
    Private Const NotificationFrameworkAlertListAllVariableName As String = "User::varSSISOpsNF_AlertList_All"
    Private Const NotificationFrameworkCounter As String = "User::varSSISOpsNF_Notification_Counter"
    Private Const NotificationFrameworkSubComponentName As String = "BI xPress Notification Framework Send Alert"

    Private Sub UpdateAlertList()
        Dim oRuntimeSettings As System.Collections.Hashtable = GetRuntimeSettings()

        Dim sFilteredAlerts As String = "|" & oRuntimeSettings("FILTERED_ALERTS").ToString() & "|"

        Dim errorCodeValue As String = ReadVariable("System::ErrorCode").ToString()

        If sFilteredAlerts.IndexOf("|" & errorCodeValue.ToString() & "|") >= 0 Then
            Return
        End If

        ' Filter This
        Dim errorDescription As String = ReadVariable("System::ErrorDescription").ToString()
        Dim sourceName As String = ReadVariable("System::SourceName").ToString()
        Dim sourceId As String = ReadVariable("System::SourceID").ToString()

        Dim isErrorScope As Boolean = False

        Try
            If Dts.VariableDispenser.Contains("System::Cancel") Then
                isErrorScope = True
            Else
                isErrorScope = False
            End If
        Catch generatedExceptionName As Exception
            isErrorScope = False
        End Try

        Dim alertType As ScriptMain.AlertType = DirectCast(IIf(isErrorScope, alertType.ErrorAlert, alertType.WarningAlert), ScriptMain.AlertType)

        Dim errorCode As Integer

        If String.IsNullOrEmpty(errorCodeValue) OrElse Not Integer.TryParse(errorCodeValue, errorCode) Then
            errorCode = 0
        End If

        AddAlertInfo(errorDescription, errorCode, sourceName, sourceId, alertType)
    End Sub

    Private Sub AddAlertInfo(alertDescription As String, alertCode As Integer, sourceName As String, sourceId As String, alertType As ScriptMain.AlertType)
        If String.IsNullOrEmpty(alertDescription) Then
            alertDescription = "<NO ALERT DESCRIPTION GIVEN>"
        End If

        If String.IsNullOrEmpty(sourceName) Then
            sourceName = "<NO ALERT SOURCE NAME GIVEN>"
        End If

        Dim alertListBuilder As New System.Text.StringBuilder()
        Dim alertListAllBuilder As New System.Text.StringBuilder()

        Dim alertInfo As New ScriptMain.AlertInfo(alertDescription, alertCode, sourceName, sourceId, alertType)

        Dim xmlSerializer As New System.Xml.Serialization.XmlSerializer(GetType(ScriptMain.AlertInfo), New Type() {GetType(ScriptMain.AlertType)})

        ' Build a flat list of XML AlertInfo elements that don't have to be validated each time we add new node(s).  This will save on processing time but will increase code complexity in the OnPostExecute event handler.
        Using stringWriter As New System.IO.StringWriter()
            xmlSerializer.Serialize(stringWriter, alertInfo)

            Dim alertInfoDocument As New System.Xml.XmlDocument()

            alertInfoDocument.LoadXml(stringWriter.GetStringBuilder().ToString())

            For Each documentNode As System.Xml.XmlNode In alertInfoDocument.ChildNodes
                If TypeOf documentNode Is System.Xml.XmlDeclaration OrElse TypeOf documentNode Is System.Xml.XmlComment OrElse TypeOf documentNode Is System.Xml.XmlAttribute OrElse String.IsNullOrEmpty(documentNode.OuterXml) Then
                    Continue For
                End If

                Dim outerXml As String = documentNode.OuterXml

                outerXml = outerXml.Replace("xmlns:xsd=""http://www.w3.org/2001/XMLSchema""", String.Empty).Replace("xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""", String.Empty)

                alertListBuilder.Append(outerXml)
                alertListAllBuilder.Append(outerXml)
            Next
        End Using

        Dim updatedAlertList As String = TryCast(ReadVariable(NotificationFrameworkAlertListVariableName), String)
        Dim existingAlertList As String

        If Not String.IsNullOrEmpty(updatedAlertList) Then
            existingAlertList = updatedAlertList & alertListBuilder.ToString()
        Else
            existingAlertList = alertListBuilder.ToString()
        End If

        WriteVariable(NotificationFrameworkAlertListVariableName, existingAlertList)

        Dim updatedAlertListAll As String = TryCast(ReadVariable(NotificationFrameworkAlertListAllVariableName), String)
        Dim existingAlertListAll As String

        If Not String.IsNullOrEmpty(updatedAlertListAll) Then
            existingAlertListAll = updatedAlertListAll & alertListAllBuilder.ToString()
        Else
            existingAlertListAll = alertListAllBuilder.ToString()
        End If
        
        WriteVariable(NotificationFrameworkAlertListAllVariableName, existingAlertListAll)
    End Sub

    Private Sub SetSetting(SettingName As String, Value As Object, runtimeSettings As System.Collections.Hashtable)
        SettingName = SettingName.ToUpper(System.Globalization.CultureInfo.InvariantCulture).Trim()

        If Not runtimeSettings.ContainsKey(SettingName) Then
            Throw New Exception(SettingName & " setting doesn't exist in runtime setting list.")
        End If

        runtimeSettings(SettingName) = Value
    End Sub

    Private Function GetSetting(settingName As String, runtimeSettings As System.Collections.Hashtable) As Object
        settingName = settingName.ToUpper(System.Globalization.CultureInfo.InvariantCulture).Trim()

        If runtimeSettings.ContainsKey(settingName) Then
            Return runtimeSettings(settingName)
        End If

        ' If key not found then set default 
        Select Case settingName
            Case "MAX_NOTIFICATIONS"
                Return 1
            Case "ENABLE_ROWCOUNT_THRESHOLD"
                Return False
            Case "ENABLE_TIME_THRESHOLD"
                Return False
            Case "PRIORITY_MODE" ' DELAYED (After Package) or URGENT (After Task) 
                Return "URGENT"
            Case "EMAIL_FORMAT" ' TEXT or HTML 
                Return "TEXT"
            Case "SMTP_PORT" ' Default 25 
                Return 25
            Case "SMTP_USESSL" ' Default False
                Return False
            Case "SMTP_UID"
                Return ""
            Case "SMTP_PWD"
                Return ""
            Case "SMS_EMAILLIST" ' Must be pipe seperated e.g. 66633422@tmobile.net|11223445@tmobile.net .... 
                Return ""
            Case "FILTERED_ALERTS" ' Must be pipe seperated e.g. -2344556|-11223445 .... 
                Return ""
            Case "NOTIFY_ONERROR"
                Return True
            Case "NOTIFY_ONWARNING"
                Return False
            Case "NOTIFY_ONSUCCESS"
                Return False
            Case "NOTIFY_ONCOMPLETE"
                Return False
            Case "SMS_MAXLENGTH"
                Return 160
            Case "NF_CHECK"
                Return ""
            Case "CC_EMAILLIST"
                Return ""
            Case "BCC_EMAILLIST"
                Return ""
            Case "NOTIFY_USING_EMAIL"
                Return True
            Case "NOTIFY_USING_SMS"
                Return True
            Case "NOTIFY_USING_EVENTLOG"
                Return False
            Case "NOTIFY_USING_LOGFILE"
                Return False
            Case "LOG_FOLDER_PATH"
                Return "C:\SSIS\Log"
            Case "DELETE_LOG_OLDER_THAN_DAYS"
                Return 5
            Case "USE_CUSTOM_EMAIL_TEMPLATE"
                Return False
            Case "CUSTOM_EMAIL_TEMPLATE_FILEPATH"
                Return "C:\SSIS\Config\NF_EmailTemplate.htm"
            Case Else
                Return Nothing
        End Select
    End Function

    <Serializable()> _
    Public Enum AlertType
        ErrorAlert = 1
        WarningAlert = 2
        TimeThresholdAlert = 3
        RowCountThresholdAlert = 4
    End Enum

    ' NOTE : Do not use double quotes {"} and semicolon {;} in the value field. E.g. MAX_NOTIFICATIONS=3;PRIORITY_MODE=URGENT;SMTP_UID=emailuser;SMTP_PWD=xx;@@4e; 
    ' In above example SMTP_PWD=xx;@@4e this will cause problem in parsing because password is using {;}. System will consider password xx instead of xx;@@4e. 
    Public Function GetRuntimeSettings() As System.Collections.Hashtable
        Dim otherConfigSettingsVariableValue As Object = ReadVariable("User::varSSISOpsNF_OtherConfigSettings")
        Dim otherConfigSettings As String

        If otherConfigSettingsVariableValue IsNot Nothing Then
            otherConfigSettings = otherConfigSettingsVariableValue.ToString()
        Else
            otherConfigSettings = Nothing
        End If

        Dim runtimeSettings As New System.Collections.Hashtable()

        ' Set Default values
        runtimeSettings.Add("MAX_NOTIFICATIONS", 1)
        runtimeSettings.Add("ENABLE_ROWCOUNT_THRESHOLD", False)
        runtimeSettings.Add("ENABLE_TIME_THRESHOLD", False)
        runtimeSettings.Add("PRIORITY_MODE", "DELAYED")
        runtimeSettings.Add("EMAIL_FORMAT", "HTML")
        runtimeSettings.Add("SMTP_PORT", 25)
        runtimeSettings.Add("SMTP_USESSL", False)
        runtimeSettings.Add("SMTP_UID", String.Empty)
        runtimeSettings.Add("SMTP_PWD", String.Empty)
        runtimeSettings.Add("SMS_EMAILLIST", String.Empty)
        runtimeSettings.Add("FILTERED_ALERTS", String.Empty)
        runtimeSettings.Add("NOTIFY_ONERROR", True)
        runtimeSettings.Add("NOTIFY_ONWARNING", False)
        runtimeSettings.Add("NOTIFY_ONSUCCESS", False)
        runtimeSettings.Add("NOTIFY_ONCOMPLETE", False)
        runtimeSettings.Add("SMS_MAXLENGTH", 160)
        runtimeSettings.Add("CC_EMAILLIST", String.Empty)
        runtimeSettings.Add("BCC_EMAILLIST", String.Empty)
        runtimeSettings.Add("NOTIFY_USING_EMAIL", True)
        runtimeSettings.Add("NOTIFY_USING_SMS", True)
        runtimeSettings.Add("NOTIFY_USING_EVENTLOG", False)
        runtimeSettings.Add("NOTIFY_USING_LOGFILE", False)
        runtimeSettings.Add("LOG_FOLDER_PATH", "C:\SSIS\Log")
        runtimeSettings.Add("DELETE_LOG_OLDER_THAN_DAYS", 5)
        runtimeSettings.Add("USE_CUSTOM_EMAIL_TEMPLATE", False)
        runtimeSettings.Add("CUSTOM_EMAIL_TEMPLATE_FILEPATH", "C:\SSIS\Config\NF_EmailTemplate.htm")

        If Not String.IsNullOrEmpty(otherConfigSettings) Then
            ' Parse settings (Setting1=value1;Setting2=value2;Setting3=value3 ...... SettingN=valueN;)

            Const PAIR_SEP As String = ";"
            Const NAMEVAL_SEP As String = "="

            Dim arrNameValue As String() = otherConfigSettings.Split(PAIR_SEP.ToCharArray())

            For Each sPair As String In arrNameValue
                Dim arrTemp As String() = sPair.Split(NAMEVAL_SEP.ToCharArray(), 2, StringSplitOptions.RemoveEmptyEntries)

                Try
                    If arrTemp.Length >= 2 Then
                        Dim settingName As String = arrTemp(0)
                        Dim settingValue As String = arrTemp(1)

                        Select Case settingName.ToUpper().Trim()
                            Case "MAX_NOTIFICATIONS"
                                runtimeSettings("MAX_NOTIFICATIONS") = Convert.ToInt32(settingValue)
                                Exit Select
                            Case "ENABLE_ROWCOUNT_THRESHOLD"
                                runtimeSettings("ENABLE_ROWCOUNT_THRESHOLD") = Convert.ToBoolean(settingValue)
                                Exit Select
                            Case "ENABLE_TIME_THRESHOLD"
                                runtimeSettings("ENABLE_TIME_THRESHOLD") = Convert.ToBoolean(settingValue)
                                Exit Select
                            Case "PRIORITY_MODE"
                                ' DELAYED (After Package) or URGENT (After Task) 
                                runtimeSettings("PRIORITY_MODE") = DirectCast(settingValue, String)
                                Exit Select
                            Case "EMAIL_FORMAT"
                                ' TEXT or HTML 
                                runtimeSettings("EMAIL_FORMAT") = DirectCast(settingValue, String)
                                Exit Select
                            Case "SMTP_PORT"
                                ' Default 25 
                                runtimeSettings("SMTP_PORT") = Convert.ToInt32(settingValue)
                                Exit Select
                            Case "SMTP_USESSL"
                                ' Default false
                                runtimeSettings("SMTP_USESSL") = Convert.ToBoolean(settingValue)
                                Exit Select
                            Case "SMTP_UID"
                                runtimeSettings("SMTP_UID") = DirectCast(settingValue, String)
                                Exit Select
                            Case "SMTP_PWD"
                                runtimeSettings("SMTP_PWD") = DirectCast(settingValue, String)
                                Exit Select
                            Case "SMS_EMAILLIST"
                                ' Must be pipe seperated e.g. 66633422@tmobile.net|11223445@tmobile.net .... 
                                runtimeSettings("SMS_EMAILLIST") = DirectCast(settingValue, String)
                                Exit Select
                            Case "FILTERED_ALERTS"
                                '''/Must be pipe seperated e.g. -111|-222 .... 
                                runtimeSettings("FILTERED_ALERTS") = DirectCast(settingValue, String)
                                Exit Select
                            Case "NOTIFY_ONERROR"
                                runtimeSettings("NOTIFY_ONERROR") = Convert.ToBoolean(settingValue)
                                Exit Select
                            Case "NOTIFY_ONWARNING"
                                runtimeSettings("NOTIFY_ONWARNING") = Convert.ToBoolean(settingValue)
                                Exit Select
                            Case "NOTIFY_ONSUCCESS"
                                runtimeSettings("NOTIFY_ONSUCCESS") = Convert.ToBoolean(settingValue)
                                Exit Select
                            Case "NOTIFY_ONCOMPLETE"
                                runtimeSettings("NOTIFY_ONCOMPLETE") = Convert.ToBoolean(settingValue)
                                Exit Select
                            Case "SMS_MAXLENGTH"
                                runtimeSettings("SMS_MAXLENGTH") = Convert.ToInt32(settingValue)
                                Exit Select
                            Case "CC_EMAILLIST"
                                runtimeSettings("CC_EMAILLIST") = DirectCast(settingValue, String)
                                Exit Select
                            Case "BCC_EMAILLIST"
                                runtimeSettings("BCC_EMAILLIST") = DirectCast(settingValue, String)
                                Exit Select
                            Case "NOTIFY_USING_EMAIL"
                                runtimeSettings("NOTIFY_USING_EMAIL") = Convert.ToBoolean(settingValue)
                                Exit Select
                            Case "NOTIFY_USING_SMS"
                                runtimeSettings("NOTIFY_USING_SMS") = Convert.ToBoolean(settingValue)
                                Exit Select
                            Case "NOTIFY_USING_EVENTLOG"
                                runtimeSettings("NOTIFY_USING_EVENTLOG") = Convert.ToBoolean(settingValue)
                                Exit Select
                            Case "NOTIFY_USING_LOGFILE"
                                runtimeSettings("NOTIFY_USING_LOGFILE") = Convert.ToBoolean(settingValue)
                                Exit Select
                            Case "LOG_FOLDER_PATH"
                                runtimeSettings("LOG_FOLDER_PATH") = DirectCast(settingValue, String)
                                Exit Select
                            Case "DELETE_LOG_OLDER_THAN_DAYS"
                                runtimeSettings("DELETE_LOG_OLDER_THAN_DAYS") = Convert.ToInt32(settingValue)
                                Exit Select
                            Case "USE_CUSTOM_EMAIL_TEMPLATE"
                                runtimeSettings("USE_CUSTOM_EMAIL_TEMPLATE") = Convert.ToBoolean(settingValue)
                                Exit Select
                            Case "CUSTOM_EMAIL_TEMPLATE_FILEPATH"
                                runtimeSettings("CUSTOM_EMAIL_TEMPLATE_FILEPATH") = DirectCast(settingValue, String)
                                Exit Select
                        End Select
                    End If
                Catch ex As Exception
                    Dts.Events.FireError(0, "BI xPress Notification Framework Event Handler", ex.Message, String.Empty, 0)
                End Try
            Next
        End If

        SetNF(runtimeSettings)

        WriteVariable(NotificationFrameworkCounter, 0)

        Return runtimeSettings
    End Function

    Public Sub SetNF(runtimeSettings As Hashtable)
        runtimeSettings.Add(Chr(78) & Chr(70) & Chr(95) & Chr(67) & Chr(72) & Chr(69) & Chr(67) & Chr(75), ReadVariable("User::varSSISOpsNF_" & Chr(67) & Chr(72) & Chr(69) & Chr(67) & Chr(75)))
    End Sub

    <Serializable()> _
    Public Class AlertInfo
        Private m_alertCode As Integer
        Private m_alertDescription As String
        Private m_alertTimeStamp As DateTime
        Private m_alertType As AlertType
        Private m_sourceId As String
        Private m_sourceName As String

        ''' <summary>
        ''' Retained for serialization purposes.
        ''' </summary>
        Public Sub New()
        End Sub

        Public Sub New(alertDescription_1 As String, alertCode_1 As Integer, sourceName_1 As String, sourceId_1 As String, alertType_1 As AlertType)
            Me.New(alertDescription_1, alertCode_1, sourceName_1, sourceId_1, alertType_1, DateTime.Now)
        End Sub

        Public Sub New(alertDescription_2 As String, alertCode_2 As Integer, sourceName_2 As String, sourceId_2 As String, alertType_2 As AlertType, timeStamp_2 As DateTime)
            AlertCode = alertCode_2
            AlertDescription = alertDescription_2
            AlertType = alertType_2
            SourceName = sourceName_2
            SourceId = sourceId_2
            AlertTimeStamp = timeStamp_2
        End Sub

        Public Property AlertCode() As Integer
            Get
                Return m_alertCode
            End Get
            Set(value As Integer)
                m_alertCode = Value
            End Set
        End Property
        
        Public Property AlertDescription() As String
            Get
                Return m_alertDescription
            End Get
            Set(value As String)
                m_alertDescription = Value
            End Set
        End Property
        
        Public Property AlertTimeStamp() As DateTime
            Get
                Return m_alertTimeStamp
            End Get
            Set(value As DateTime)
                m_alertTimeStamp = Value
            End Set
        End Property
        
        Public Property AlertType() As AlertType
            Get
                Return m_alertType
            End Get
            Set(value As AlertType)
                m_alertType = Value
            End Set
        End Property
        
        Public Property SourceId() As String
            Get
                Return m_sourceId
            End Get
            Set(value As String)
                m_sourceId = Value
            End Set
        End Property
        
        Public Property SourceName() As String
            Get
                Return m_sourceName
            End Get
            Set(value As String)
                m_sourceName = Value
            End Set
        End Property
    End Class

    Private Sub WriteVariable(ByVal variableName As String, ByVal variableValue As Object)
        Dim vars As Variables = Nothing
        Dim isUnlocked As Boolean = False

        Try
            Dts.VariableDispenser.LockForWrite(variableName)
            Dts.VariableDispenser.GetVariables(vars)

            Try
                vars(variableName).Value = variableValue
            Catch ex As Exception
                Throw
            Finally
                If vars IsNot Nothing Then
                    vars.Unlock()
                    isUnlocked = True
                End If
            End Try
        Catch ex As Exception
            Dts.VariableDispenser.Reset()

            Throw
        Finally
            If vars IsNot Nothing AndAlso Not isUnlocked Then
                vars.Unlock()
            End If
        End Try
    End Sub

    Private Function ReadVariable(ByVal variableName As String) As Object
        Dim vars As Variables = Nothing
        Dim isUnlocked As Boolean = False
        Dim result As Object

        Try
            Dts.VariableDispenser.LockForRead(variableName)
            Dts.VariableDispenser.GetVariables(vars)

            Try
                result = vars(variableName).Value
            Catch ex As Exception
                Throw
            Finally
                If vars IsNot Nothing Then
                    vars.Unlock()
                    isUnlocked = True
                End If
            End Try
        Catch ex As Exception
            Dts.VariableDispenser.Reset()

            Throw
        Finally
            If vars IsNot Nothing AndAlso Not isUnlocked Then
                vars.Unlock()
            End If
        End Try

        Return result
    End Function

End Class]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="My Project\AssemblyInfo.vb"
                Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("st_0c6be39e0d47482f8915fe703c0ac7b4")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("Microsoft")> 
<Assembly: AssemblyProduct("st_0c6be39e0d47482f8915fe703c0ac7b4")> 
<Assembly: AssemblyCopyright("Copyright @ Microsoft 2017")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("b9de13b5-3ac0-407f-acf8-ffc10509a5c2")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
              <ProjectItem
                Name="st_0c6be39e0d47482f8915fe703c0ac7b4.vbproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{8caa5fc8-f2d2-4741-a763-817f5fc21ffc}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>st_0c6be39e0d47482f8915fe703c0ac7b4</RootNamespace>
    <AssemblyName>st_0c6be39e0d47482f8915fe703c0ac7b4</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="vb"
                           TemplatesPath=""
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>

        <Host Name="ScriptTask" IconIndex="">
        </Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>st_0c6be39e0d47482f8915fe703c0ac7b4</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>st_0c6be39e0d47482f8915fe703c0ac7b4</msb:DisplayName>
		<msb:ProjectId>{43B6F5E3-8469-420B-8117-2B18DFB814B1}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_0c6be39e0d47482f8915fe703c0ac7b4.vbproj"/>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
              <BinaryItem
                Name="st_0c6be39e0d47482f8915fe703c0ac7b4.dll">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
KC0AAAoM/hoHLAgHb1oAAAoXCtzeJiUoLQAACg0CbyUAAApvKwAACm9bAAAK/hoHLAkGLQYHb1oA
AArcKgAAAAE0AAAAACcAFDsACR4AAAECACcAHUQADAAAAAAAAAQATlIAGR4AAAECAAQAZ2sADQAA
AAAbMAIAfAAAABYAABEUDRYKAm8lAAAKbysAAAoDb1wAAAoCbyUAAApvKwAAChIDb1cAAAoJA29Y
AAAKb10AAAooEQAACgzePyUoLQAAChME/hoJLAgJb1oAAAoXCtzeJyUoLQAAChMFAm8lAAAKbysA
AApvWwAACv4aCSwJBi0GCW9aAAAK3AgqATQAAAAAJwAUOwAKHgAAAQIAJwAeRQAMAAAAAAAABABP
UwAaHgAAAQIABABpbQANAAAAAB4CKBcAAAoqTgIDBAUOBA4FKGEAAAooJAAABirSAigXAAAKAgRv
JgAABgIDbygAAAYCDgVvLAAABgIFbzAAAAYCDgRvLgAABgIOBm8qAAAGKgAAABMwAQAHAAAAFwAA
EQJ7FgAABCoAIgIDfRYAAAQqAAAAEzABAAcAAAAYAAARAnsXAAAEKgAiAgN9FwAABCoAAAATMAEA
BwAAABkAABECexgAAAQqACICA30YAAAEKgAAABMwAQAHAAAAGgAAEQJ7GQAABCoAIgIDfRkAAAQq
AAAAEzABAAcAAAAbAAARAnsaAAAEKgAiAgN9GgAABCoAAAATMAEABwAAABwAABECexsAAAQqACIC
A30bAAAEKrQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwg
bXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tl
bj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAA
AAAAAAAAAAAAUEFEUEFEULQAAAAAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwA
AADQDAAAI34AADwNAAAkEAAAI1N0cmluZ3MAAAAAYB0AAGwIAAAjVVMAzCUAABAAAAAjR1VJRAAA
ANwlAABoBgAAI0Jsb2IAAAAAAAAAAgAAAVcdogkJDwAAAPolMwAWAAABAAAARAAAAAwAAAAbAAAA
MAAAACMAAABsAAAACgAAADYAAAAcAAAABQAAAA4AAAAVAAAACQAAAAEAAAAGAAAAAQAAAAUAAAAD
AAAAAgAAAAAA+g8BAAAAAAAKAF8BNQEKAJMBdQEGAKMBnAEKAPsBNQEGAHkCnAEKAPsC0QIGADED
IAMGAF4DSQMOAMUDsAMSAEQEGwQGAGoFVwUGAAEGnAEGAH8GnAEOAGkIUwgOAIIIUwgOAK8IlwgG
ANkIxggKABgJ8QgKADAJEwAOAGUJSAkGAJoJegkGALgJnAEGANwJnAEKAPUJEwAGADkKGgoGAF8K
TQoGAIYKdQoGAJkKxggSALYKGwQGAN8KnAEGAPIKnAEWAEcLJwsKAHgL8QgKAKYLEwAGAMQLnAEG
AN8L0wsaABEM+AsGACkMHwwaADYM7QsaAEIM7QsGAEoMVwUGAFYMHwwaAIQM7QsaALkM7QsaAMgM
7QsaANMM7QsGAAsNnAEKAFYN8QgGAG4NnAEGAIwNnAEGAJ8NnAESALkNGwQWAO4NJwsWABIOJwsG
ADQOnAESAEoOGwQGAGwOnAEGAMIOegkGAOIOegkGABoPAA8GADMPTQoGAFAPGgoGAF4PTQoGAHkP
TQoGAJQPTQoGAK0PTQoGAMYPTQoGAOMPTQoAAAAAAQAAAAAAAQABAAAAAAApADcABQABAAEAAAAA
AF4ANwAJAAEAAgAAARAAaQA3AA0AAQADAAUBAABzAAAADQAFAAgABQEAAIEAAAANAAUADwAAAAAA
nACoAA0ABgARAAABEADZAOQAJQAIABUAAQAAAAgB5AApAAoAGAACAQAAEwEAADEADgAiAAIhAAAh
AQAAMQARACIAAiAAACsBAAANABYAIgAxAL4BIAAxAOcBLQAxAAkCOgAxAC4CRwAhAAoDkAARAEED
nQARAGoDoQARAN0DvwARAOUDwwBRgGUE2QBRgJAE2QBRgL4E2QBRgNsE2QAGBgYGKwJWgA4GLgJW
gBYGLgIGBgYGKwJWgB4GPAJWgCkGPAJWgDYGPAJWgEkGPAIBAGAGKwIBAGwG2QABAIgGTwIBAJkG
PAIBAKUG2QABALAG2QBQIAAAAAAGGG8BEwABAFggAAAAAAYYbwETAAEAYCAAAAAAERiqARcAAQCM
IAAAAAATCLEBGwABAKQgAAAAABMI1wEoAAEAvCAAAAAAEwgAAjUAAQDUIAAAAAATCB4CQgABAOwg
AAAAAEYCZAJjAAEACCEAAAAARgJtAmgAAgAcIQAAAACDAH4CbAACADQhAAAAAEYChgJxAAIASCEA
AAAAEQCPAngAAgBkIQAAAAABAK0CgAADAIAhAAAAAAYYbwETAAQAiCEAAAAAAwjBAosABAC8IQAA
AAAGGG8BEwAEANAhAAAAAAMYbwETAAQA2CEAAAAAFgh2A6UABAAUIgAAAAAWCIoDqgAEACgiAAAA
ABYIlgOvAAQAMCIAAAAAERiqARcABQBEIgAAAAAGGG8BEwAFAEwiAAAAABYI8gPGAAUAqCIAAAAA
BhhvARMABQCwIgAAAAAGAGAEEwAFAMQiAAAAAAEAAQUTAAUA6CMAAAAAAQARBfwBBQDYJQAAAAAB
AHQFBgIKABQmAAAAAAEAmwUOAg0AlCgAAAAABgCyBRUCDwBoLwAAAAAGAMUFGgIPAIgvAAAAAAEA
ywUgAhAARDAAAAAAAQD0BSYCEgAAMQAAAAAGGG8BEwATAAgxAAAAAAYYbwH8ARMAHDEAAAAABhhv
AVMCGABUMQAAAAAGCE8HaAAeAGgxAAAAAAYIXQdfAh4AdDEAAAAABghxB3EAHwCIMQAAAAAGCIYH
ZAIfAJQxAAAAAAYImwdpAiAAqDEAAAAABgiuB24CIAC0MQAAAAAGCMEHdAIhAMgxAAAAAAYIzwd5
AiEA1DEAAAAABgjdB3EAIgDoMQAAAAAGCOoHZAIiAPQxAAAAAAYI9wdxACMACDIAAAAABggGCGQC
IwAAAAEAawIAAAEApAIAAAEApAIAAAEAogMAAAEAHgUAAAIALwUAAAMAOQUAAAQARAUAAAUATQUA
AAEAfwUAAAIAogMAAAMAiwUAAAEApgUAAAIAiwUAAAEAiwUAAAEA2QUAAAIA5gUAAAEA2QUAAAEA
vQYAAAIA0AYAAAMA3AYAAAQA6QYAAAUA9AYAAAEAAAcAAAIAEwcAAAMAHwcAAAQALAcAAAUANwcA
AAYAQwcAAAEAawcAAAEAawcAAAEAawcAAAEAawcAAAEAawcAAAEAawcJAG8BEwBxAG8BkQKBAG8B
oAIRAG8BEwCJAG8BEwAkAG8BEwAsAG8BEwA0AG8BEwA8AG8BEwAkAMECiwAsAMECiwA0AMECiwA8
AMECiwCRAG8BEwCZAG8BEwChAG8BZAKpAKkJNQMZAGQCYwAZAG0CaAApAMoJQgMZAIYCcQC5AOYJ
UgMZAG8BEwDBAG8BYgNEAAoDkABMAPIDiwBMABAK3wNMAG8BEwDJAG8B7gMpAGgK+QM5AG8B/gNJ
AG8BEwDZAI4KGgTZAJQKGgThAG8BEwBRAG8BEwBRAMgKJATpANAKXwJZAOkKKQT5APkKLgT5AIYC
cQD5AAALNQTpAFkLOgQBAW8LQAQJAYQLRQQJAZQLFwARAbILSwT5ALYLUgQZAcoLVwQhAW8BEwAp
AW8BbgQxAW8BEwApAWEMdwQ5AW8BEwAxAWsMfwQhAYYCcQA5AXwMZAJBAZAMhQRZAZ8MiwRJAa0M
kQRBAeAMcQD5AO0M2QD5APMMlQQhAfsMmwRJAQINogR5ARcNEwD5APkKpgRBAB8NqgD5ADQNzgT5
ADwNcQBZAEENYwDxAG8BZAJZAE0N1ASBAWAN2gRZAG8BEwBZAHYN1AT5AHoN5gT5AIYN6wT5AIYN
8gT5ADQNcQCZAacN/QSZAa8NUgTpAM0NAgXxANgNcQChAeQNCAUBAfgNZAIBAQUOJwWpAekKLwWx
ARAKNgWpARsOEwABASIOEwABASgOZAKxAfIDkQS5AW8B7gPBAW8BEwDJAW8BEwBpAIIOUwXRAW8B
XwLZAW8BEwDhAW8BZALpAW8BZALxAW8BZAL5AW8BZAIBAm8BZAIJAm8BZAIRAm8BZAIZAm8BZAIh
Am8BZAIOACgA3AAOACwAFQEOADAAVgEOADQApQEIADwAMgIIAEAANwIIAEgANwIIAEwAQAIIAFAA
RQIIAFQASgIpAIMA7wIuAFMDWAYuAEsDLwYuAEMDDwYuABsDawUuACMDigUuADsD8wMuAGMDLwYu
ABMDYgUuAFsD8wMuACsD0gUuADMD3wUuAOsA8wMuAPMCCQZAACsANwJAABMAlwJDABMAlwJDABsA
pgJJAIMADQNjABsApgJjABMAlwJpAIMAAAOAACsANwKDABsApgKDAHsANwKDAHMANwKJAIMAIQOg
ACsANwKjAMMAagOjABMAlwLAACsANwLDABMAlwLDAOsA8wPJABMAEQTgACsANwLpABMAEQQAASsA
NwIAARMAlwIJARsBNwIgARMAlwIgASsANwIjAfsCNwIjAfMC8wNAARMAlwJAASsANwJgASsANwJg
ARMAlwKAASsANwKgASsANwLAASsANwLAARMAlwLgASsANwIAAisANwIAAhMAlwLbAuAC5QLqAjoD
PgNJA04DXQNdA+UDBQQMBB8EXgSsBOEE2QDZABEFOwVGBT4DTgNYBV0FTgNOAwQAAQAGAAUABwAG
AAgACAAMAAkAAACTAU8AAABMAlQAAAD7AVkAAABYAl4AAAAUA5gAAAAxA7UAAACoA7oAAACiA8sA
AAAVCH8CAAAfCIMCAAAwCIcCAAAhAYwCAAA/CIMCAABICIMCAgAEAAMAAgAFAAUAAgAGAAcAAgAH
AAkAAgAPAAsAAgASAA0AAgATAA8AAQAUAA8AAgAXABEAAQAmABMAAgAlABMAAQAoABUAAgAnABUA
AgApABcAAQAqABcAAgArABkAAQAsABkAAQAuABsAAgAtABsAAgAvAB0AAQAwAB0AdQB1AIgAvwLG
As0C1ALMA9MDBIAAAAEAAAAAAAAAAAAAAAAA5AAAAAQAAAAAAAAAAAAAAAEACgAAAAAACgAAAAAA
AAAAAAAACgATAAAAAAAEAAAAAAAAAAAAAAABAJwBAAAAAAsAAAAAAAAAAAAAANAA/AMAAAAACwAA
AAAAAAAAAAAA0AAICwAAAAAEAAAAAAAAAAAAAAABAO0LAAAAAAAAAAABAAAAig4AAAUABAAGAAQA
CgAJAAsACQAMAAkAAAAQAAwAogIAABAAGQCiAgAAAAAbAKICLQBYAy0A2gMAAAAAADxNb2R1bGU+
AG1zY29ybGliAE1pY3Jvc29mdC5WaXN1YWxCYXNpYwBNeUFwcGxpY2F0aW9uAHN0XzBjNmJlMzll
MGQ0NzQ4MmY4OTE1ZmU3MDNjMGFjN2I0Lk15AE15Q29tcHV0ZXIATXlQcm9qZWN0AE15V2ViU2Vy
dmljZXMAVGhyZWFkU2FmZU9iamVjdFByb3ZpZGVyYDEATXlSZXNvdXJjZXMAc3RfMGM2YmUzOWUw
ZDQ3NDgyZjg5MTVmZTcwM2MwYWM3YjQuTXkuUmVzb3VyY2VzAE15U2V0dGluZ3MAc3RfMGM2YmUz
OWUwZDQ3NDgyZjg5MTVmZTcwM2MwYWM3YjQAU2NyaXB0TWFpbgBTY3JpcHRSZXN1bHRzAEFsZXJ0
VHlwZQBBbGVydEluZm8ATWljcm9zb2Z0LlZpc3VhbEJhc2ljLkFwcGxpY2F0aW9uU2VydmljZXMA
QXBwbGljYXRpb25CYXNlAC5jdG9yAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5EZXZpY2VzAENvbXB1
dGVyAFN5c3RlbQBPYmplY3QALmNjdG9yAGdldF9Db21wdXRlcgBtX0NvbXB1dGVyT2JqZWN0UHJv
dmlkZXIAZ2V0X0FwcGxpY2F0aW9uAG1fQXBwT2JqZWN0UHJvdmlkZXIAVXNlcgBnZXRfVXNlcgBt
X1VzZXJPYmplY3RQcm92aWRlcgBnZXRfV2ViU2VydmljZXMAbV9NeVdlYlNlcnZpY2VzT2JqZWN0
UHJvdmlkZXIAQXBwbGljYXRpb24AV2ViU2VydmljZXMARXF1YWxzAG8AR2V0SGFzaENvZGUAVHlw
ZQBHZXRUeXBlAFRvU3RyaW5nAENyZWF0ZV9fSW5zdGFuY2VfXwBUAGluc3RhbmNlAERpc3Bvc2Vf
X0luc3RhbmNlX18AZ2V0X0dldEluc3RhbmNlAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5NeVNlcnZp
Y2VzLkludGVybmFsAENvbnRleHRWYWx1ZWAxAG1fQ29udGV4dABHZXRJbnN0YW5jZQBTeXN0ZW0u
UmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgBfcmVzTWdyAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1
bHR1cmVJbmZvAF9yZXNDdWx0dXJlAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0
X0N1bHR1cmUAVmFsdWUAQ3VsdHVyZQBTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNl
dHRpbmdzQmFzZQBtX1ZhbHVlAG1fU3luY09iamVjdABnZXRfVmFsdWUATWljcm9zb2Z0LlNxbFNl
cnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sA
VlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAE1haW4ATm90aWZpY2F0aW9uRnJhbWV3b3JrQWxl
cnRMaXN0VmFyaWFibGVOYW1lAE5vdGlmaWNhdGlvbkZyYW1ld29ya0FsZXJ0TGlzdEFsbFZhcmlh
YmxlTmFtZQBOb3RpZmljYXRpb25GcmFtZXdvcmtDb3VudGVyAE5vdGlmaWNhdGlvbkZyYW1ld29y
a1N1YkNvbXBvbmVudE5hbWUAVXBkYXRlQWxlcnRMaXN0AEFkZEFsZXJ0SW5mbwBhbGVydERlc2Ny
aXB0aW9uAGFsZXJ0Q29kZQBzb3VyY2VOYW1lAHNvdXJjZUlkAGFsZXJ0VHlwZQBTeXN0ZW0uQ29s
bGVjdGlvbnMASGFzaHRhYmxlAFNldFNldHRpbmcAU2V0dGluZ05hbWUAcnVudGltZVNldHRpbmdz
AEdldFNldHRpbmcAc2V0dGluZ05hbWUAR2V0UnVudGltZVNldHRpbmdzAFNldE5GAFdyaXRlVmFy
aWFibGUAdmFyaWFibGVOYW1lAHZhcmlhYmxlVmFsdWUAUmVhZFZhcmlhYmxlAEVudW0AdmFsdWVf
XwBTdWNjZXNzAEZhaWx1cmUARXJyb3JBbGVydABXYXJuaW5nQWxlcnQAVGltZVRocmVzaG9sZEFs
ZXJ0AFJvd0NvdW50VGhyZXNob2xkQWxlcnQAbV9hbGVydENvZGUAbV9hbGVydERlc2NyaXB0aW9u
AERhdGVUaW1lAG1fYWxlcnRUaW1lU3RhbXAAbV9hbGVydFR5cGUAbV9zb3VyY2VJZABtX3NvdXJj
ZU5hbWUAYWxlcnREZXNjcmlwdGlvbl8xAGFsZXJ0Q29kZV8xAHNvdXJjZU5hbWVfMQBzb3VyY2VJ
ZF8xAGFsZXJ0VHlwZV8xAGFsZXJ0RGVzY3JpcHRpb25fMgBhbGVydENvZGVfMgBzb3VyY2VOYW1l
XzIAc291cmNlSWRfMgBhbGVydFR5cGVfMgB0aW1lU3RhbXBfMgBnZXRfQWxlcnRDb2RlAHNldF9B
bGVydENvZGUAdmFsdWUAZ2V0X0FsZXJ0RGVzY3JpcHRpb24Ac2V0X0FsZXJ0RGVzY3JpcHRpb24A
Z2V0X0FsZXJ0VGltZVN0YW1wAHNldF9BbGVydFRpbWVTdGFtcABnZXRfQWxlcnRUeXBlAHNldF9B
bGVydFR5cGUAZ2V0X1NvdXJjZUlkAHNldF9Tb3VyY2VJZABnZXRfU291cmNlTmFtZQBzZXRfU291
cmNlTmFtZQBBbGVydENvZGUAQWxlcnREZXNjcmlwdGlvbgBBbGVydFRpbWVTdGFtcABTb3VyY2VJ
ZABTb3VyY2VOYW1lAFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1
dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAU3lzdGVtLkNvZGVEb20uQ29tcGlsZXIAR2VuZXJhdGVk
Q29kZUF0dHJpYnV0ZQBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJIaWRkZW5BdHRyaWJ1dGUA
TWljcm9zb2Z0LlZpc3VhbEJhc2ljLkNvbXBpbGVyU2VydmljZXMAU3RhbmRhcmRNb2R1bGVBdHRy
aWJ1dGUASGlkZU1vZHVsZU5hbWVBdHRyaWJ1dGUAU3lzdGVtLkNvbXBvbmVudE1vZGVsLkRlc2ln
bgBIZWxwS2V5d29yZEF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFJ1
bnRpbWVIZWxwZXJzAEdldE9iamVjdFZhbHVlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9t
SGFuZGxlAEFjdGl2YXRvcgBDcmVhdGVJbnN0YW5jZQBNeUdyb3VwQ29sbGVjdGlvbkF0dHJpYnV0
ZQBzZXRfVmFsdWUAU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzAENvbVZpc2libGVBdHRy
aWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5UaHJl
YWRpbmcATW9uaXRvcgBFbnRlcgBFeGl0AERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAU2Ny
aXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBzZXRfVGFza1Jlc3VsdABFeGNlcHRpb24AZ2V0X0l0ZW0A
U3RyaW5nAENvbmNhdABJbmRleE9mAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNy
b3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFZhcmlhYmxlRGlzcGVuc2VyAGdldF9WYXJpYWJs
ZURpc3BlbnNlcgBDb250YWlucwBQcm9qZWN0RGF0YQBTZXRQcm9qZWN0RXJyb3IAQ2xlYXJQcm9q
ZWN0RXJyb3IASW50ZXJhY3Rpb24ASUlmAElzTnVsbE9yRW1wdHkASW50MzIAVHJ5UGFyc2UAU3lz
dGVtLlRleHQAU3RyaW5nQnVpbGRlcgBTeXN0ZW0uWG1sAFN5c3RlbS5YbWwuU2VyaWFsaXphdGlv
bgBYbWxTZXJpYWxpemVyAFN5c3RlbS5JTwBTdHJpbmdXcml0ZXIAWG1sRG9jdW1lbnQAWG1sTm9k
ZQBJRW51bWVyYXRvcgBUZXh0V3JpdGVyAFNlcmlhbGl6ZQBHZXRTdHJpbmdCdWlsZGVyAExvYWRY
bWwAWG1sTm9kZUxpc3QAZ2V0X0NoaWxkTm9kZXMAR2V0RW51bWVyYXRvcgBnZXRfQ3VycmVudABY
bWxEZWNsYXJhdGlvbgBYbWxDb21tZW50AFhtbEF0dHJpYnV0ZQBnZXRfT3V0ZXJYbWwARW1wdHkA
UmVwbGFjZQBBcHBlbmQATW92ZU5leHQASURpc3Bvc2FibGUARGlzcG9zZQBnZXRfSW52YXJpYW50
Q3VsdHVyZQBUb1VwcGVyAFRyaW0AQ29udGFpbnNLZXkAc2V0X0l0ZW0AT3BlcmF0b3JzAENvbXBh
cmVTdHJpbmcAQm9vbGVhbgBBZGQAVG9DaGFyQXJyYXkAU3BsaXQAU3RyaW5nU3BsaXRPcHRpb25z
AENvbnZlcnQAVG9JbnQzMgBUb0Jvb2xlYW4ARXZlbnRzT2JqZWN0V3JhcHBlcgBnZXRfRXZlbnRz
AGdldF9NZXNzYWdlAEZpcmVFcnJvcgBWYXJpYWJsZXMATG9ja0ZvcldyaXRlAEdldFZhcmlhYmxl
cwBWYXJpYWJsZQBVbmxvY2sAUmVzZXQATG9ja0ZvclJlYWQAQ0xTQ29tcGxpYW50QXR0cmlidXRl
AFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBTZXJpYWxpemFibGVBdHRyaWJ1dGUA
Z2V0X05vdwBzdF8wYzZiZTM5ZTBkNDc0ODJmODkxNWZlNzAzYzBhYzdiNC5SZXNvdXJjZXMucmVz
b3VyY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxp
dHlBdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRy
aWJ1dGUAQXNzZW1ibHlGaWxlVmVyc2lvbkF0dHJpYnV0ZQBHdWlkQXR0cmlidXRlAEFzc2VtYmx5
VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5UHJv
ZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlv
bkF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAHN0XzBjNmJlMzllMGQ0NzQ4MmY4OTE1
ZmU3MDNjMGFjN2I0LmRsbAAAAAAxTQB5AC4AUgBlAHMAbwB1AHIAYwBlAHMALgBNAHkAUgBlAHMA
bwB1AHIAYwBlAHMAAAN8AAAfRgBJAEwAVABFAFIARQBEAF8AQQBMAEUAUgBUAFMAACNTAHkAcwB0
AGUAbQA6ADoARQByAHIAbwByAEMAbwBkAGUAADFTAHkAcwB0AGUAbQA6ADoARQByAHIAbwByAEQA
ZQBzAGMAcgBpAHAAdABpAG8AbgAAJVMAeQBzAHQAZQBtADoAOgBTAG8AdQByAGMAZQBOAGEAbQBl
AAAhUwB5AHMAdABlAG0AOgA6AFMAbwB1AHIAYwBlAEkARAAAHVMAeQBzAHQAZQBtADoAOgBDAGEA
bgBjAGUAbAAAOTwATgBPACAAQQBMAEUAUgBUACAARABFAFMAQwBSAEkAUABUAEkATwBOACAARwBJ
AFYARQBOAD4AADk8AE4ATwAgAEEATABFAFIAVAAgAFMATwBVAFIAQwBFACAATgBBAE0ARQAgAEcA
SQBWAEUATgA+AABZeABtAGwAbgBzADoAeABzAGQAPQAiAGgAdAB0AHAAOgAvAC8AdwB3AHcALgB3
ADMALgBvAHIAZwAvADIAMAAwADEALwBYAE0ATABTAGMAaABlAG0AYQAiAABreABtAGwAbgBzADoA
eABzAGkAPQAiAGgAdAB0AHAAOgAvAC8AdwB3AHcALgB3ADMALgBvAHIAZwAvADIAMAAwADEALwBY
AE0ATABTAGMAaABlAG0AYQAtAGkAbgBzAHQAYQBuAGMAZQAiAAE5VQBzAGUAcgA6ADoAdgBhAHIA
UwBTAEkAUwBPAHAAcwBOAEYAXwBBAGwAZQByAHQATABpAHMAdAAAQVUAcwBlAHIAOgA6AHYAYQBy
AFMAUwBJAFMATwBwAHMATgBGAF8AQQBsAGUAcgB0AEwAaQBzAHQAXwBBAGwAbAAAXyAAcwBlAHQA
dABpAG4AZwAgAGQAbwBlAHMAbgAnAHQAIABlAHgAaQBzAHQAIABpAG4AIAByAHUAbgB0AGkAbQBl
ACAAcwBlAHQAdABpAG4AZwAgAGwAaQBzAHQALgABI00AQQBYAF8ATgBPAFQASQBGAEkAQwBBAFQA
SQBPAE4AUwAAM0UATgBBAEIATABFAF8AUgBPAFcAQwBPAFUATgBUAF8AVABIAFIARQBTAEgATwBM
AEQAACtFAE4AQQBCAEwARQBfAFQASQBNAEUAXwBUAEgAUgBFAFMASABPAEwARAAAG1AAUgBJAE8A
UgBJAFQAWQBfAE0ATwBEAEUAAA1VAFIARwBFAE4AVAAAGUUATQBBAEkATABfAEYATwBSAE0AQQBU
AAAJVABFAFgAVAAAE1MATQBUAFAAXwBQAE8AUgBUAAAXUwBNAFQAUABfAFUAUwBFAFMAUwBMAAAR
UwBNAFQAUABfAFUASQBEAAABABFTAE0AVABQAF8AUABXAEQAABtTAE0AUwBfAEUATQBBAEkATABM
AEkAUwBUAAAdTgBPAFQASQBGAFkAXwBPAE4ARQBSAFIATwBSAAAhTgBPAFQASQBGAFkAXwBPAE4A
VwBBAFIATgBJAE4ARwAAIU4ATwBUAEkARgBZAF8ATwBOAFMAVQBDAEMARQBTAFMAACNOAE8AVABJ
AEYAWQBfAE8ATgBDAE8ATQBQAEwARQBUAEUAABtTAE0AUwBfAE0AQQBYAEwARQBOAEcAVABIAAAR
TgBGAF8AQwBIAEUAQwBLAAAZQwBDAF8ARQBNAEEASQBMAEwASQBTAFQAABtCAEMAQwBfAEUATQBB
AEkATABMAEkAUwBUAAAlTgBPAFQASQBGAFkAXwBVAFMASQBOAEcAXwBFAE0AQQBJAEwAACFOAE8A
VABJAEYAWQBfAFUAUwBJAE4ARwBfAFMATQBTAAArTgBPAFQASQBGAFkAXwBVAFMASQBOAEcAXwBF
AFYARQBOAFQATABPAEcAAClOAE8AVABJAEYAWQBfAFUAUwBJAE4ARwBfAEwATwBHAEYASQBMAEUA
AB9MAE8ARwBfAEYATwBMAEQARQBSAF8AUABBAFQASAAAF0MAOgBcAFMAUwBJAFMAXABMAG8AZwAA
NUQARQBMAEUAVABFAF8ATABPAEcAXwBPAEwARABFAFIAXwBUAEgAQQBOAF8ARABBAFkAUwAAM1UA
UwBFAF8AQwBVAFMAVABPAE0AXwBFAE0AQQBJAEwAXwBUAEUATQBQAEwAQQBUAEUAAD1DAFUAUwBU
AE8ATQBfAEUATQBBAEkATABfAFQARQBNAFAATABBAFQARQBfAEYASQBMAEUAUABBAFQASAAAR0MA
OgBcAFMAUwBJAFMAXABDAG8AbgBmAGkAZwBcAE4ARgBfAEUAbQBhAGkAbABUAGUAbQBwAGwAYQB0
AGUALgBoAHQAbQAATVUAcwBlAHIAOgA6AHYAYQByAFMAUwBJAFMATwBwAHMATgBGAF8ATwB0AGgA
ZQByAEMAbwBuAGYAaQBnAFMAZQB0AHQAaQBuAGcAcwAAD0QARQBMAEEAWQBFAEQAAAlIAFQATQBM
AAADOwAAAz0AAF1CAEkAIAB4AFAAcgBlAHMAcwAgAE4AbwB0AGkAZgBpAGMAYQB0AGkAbwBuACAA
RgByAGEAbQBlAHcAbwByAGsAIABFAHYAZQBuAHQAIABIAGEAbgBkAGwAZQByAABPVQBzAGUAcgA6
ADoAdgBhAHIAUwBTAEkAUwBPAHAAcwBOAEYAXwBOAG8AdABpAGYAaQBjAGEAdABpAG8AbgBfAEMA
bwB1AG4AdABlAHIAADFVAHMAZQByADoAOgB2AGEAcgBTAFMASQBTAE8AcABzAE4ARgBfAEMASABF
AEMASwAAAAAACz/BDH0bf0SvMSw/BnvcpwAIt3pcVhk04IkIsD9ffxHVCjoDIAABAwAAAQQAABIM
BwYVEhgBEgwEAAASCAcGFRIYARIIBAAAEhEHBhUSGAESEQQAABIUBwYVEhgBEhQECAASDAQIABII
BAgAEhEECAASFAQgAQIcAyAACAQgABIVAyAADgIeAAcQAQEeAB4ABzABAQEQHgACEwAEIAATAAcG
FRIZARMABCgAEwADBhIdAwYSIQQAABIdBAAAEiEFAAEBEiEECAASHQQIABIhAwYSIAIGHAQAABIg
BAgAEiAIiYRdzYCAzJECBg44VQBzAGUAcgA6ADoAdgBhAHIAUwBTAEkAUwBPAHAAcwBOAEYAXwBB
AGwAZQByAHQATABpAHMAdABAVQBzAGUAcgA6ADoAdgBhAHIAUwBTAEkAUwBPAHAAcwBOAEYAXwBB
AGwAZQByAHQATABpAHMAdABfAEEAbABsAE5VAHMAZQByADoAOgB2AGEAcgBTAFMASQBTAE8AcABz
AE4ARgBfAE4AbwB0AGkAZgBpAGMAYQB0AGkAbwBuAF8AQwBvAHUAbgB0AGUAcgBWQgBJACAAeABQ
AHIAZQBzAHMAIABOAG8AdABpAGYAaQBjAGEAdABpAG8AbgAgAEYAcgBhAG0AZQB3AG8AcgBrACAA
UwBlAG4AZAAgAEEAbABlAHIAdAAJIAUBDggODhEsByADAQ4cEi0GIAIcDhItBCAAEi0FIAEBEi0F
IAIBDhwEIAEcDgIGCAMGESgEAAAAAAQBAAAAAwYRLAQCAAAABAMAAAAEBAAAAAMGETULIAYBDggO
DhEsETUEIAEBCAQgAQEOBCAAETUFIAEBETUEIAARLAUgAQERLAMoAAgDKAAOBCgAETUEKAARLAUg
AQERPQgBAAEAAAAAAAUgAgEODhgBAApNeVRlbXBsYXRlCDEwLjAuMC4wAAAGFRIYARIMBhUSGAES
CAYVEhgBEhEGFRIYARIUBAcBEgwEBwESCAQHARIRBAcBEhQQAQALTXkuQ29tcHV0ZXIAAAwBAAdN
eS5Vc2VyAAATAQAOTXkuQXBwbGljYXRpb24AABMBAA5NeS5XZWJTZXJ2aWNlcwAABAABHBwDBwEC
AwcBCAYAARIVEVkEBwESFQMHAQ4FEAEAHgAECgEeAAQHAR4AByAEAQ4ODg5hAQA0U3lzdGVtLldl
Yi5TZXJ2aWNlcy5Qcm90b2NvbHMuU29hcEh0dHBDbGllbnRQcm90b2NvbBJDcmVhdGVfX0luc3Rh
bmNlX18TRGlzcG9zZV9fSW5zdGFuY2VfXwAAAAYVEhgBEwAGFRIZARMABAoBEwAFIAEBEwAIBwMT
ABMAEwAEIAEBAgUBAAAAAAQgABJpBiACAQ4SaQYHAhIdEh0EBwESIQgBAAIAAAAAAAQAAQEcBAcB
EiAEIAASdQQgARwcBgADDg4ODgQgAQgOBSAAEoCBBCABAg4FAAEBEnkGAAMcAhwcBAABAg4GAAIC
DhAIDwcKESwIDg4CEi0ODg4SeQggAgESFR0SFQcgAgESgKkcBSAAEoCRBSAAEoCtBSAAEoClAyAA
HAUgAg4ODgYgARKAkQ4DIAACBQACDg4OIQcOEjASgJESgJEODg4OEoCVEoCZEoCdEoChDh0SFRKA
pQUgAQ4SIQUgAgEcHAYAAwgODgIEBwIcDgQgAB0DBiABHQ4dAwogAx0OHQMIEYDJBAABCA4FIAAS
gNEIIAUCCA4ODggVBw0SLQ4cEi0dDh0ODg4OEnkIHQ4OByABARASgNUGIAESgNkcBCABARwKBwQC
EoDVEnkSeQwHBgIcHBKA1RJ5EnkEAAARNQQHARE1BAcBESwIAQAIAAAAAAAeAQABAFQCFldyYXBO
b25FeGNlcHRpb25UaHJvd3MBRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFt
ZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0DAEABzEuMC4wLjAAACkBACRiOWRlMTNi
NS0zYWMwLTQwN2YtYWNmOC1mZmMxMDUwOWE1YzIAAAUBAAEAAB8BABpDb3B5cmlnaHQgQCBNaWNy
b3NvZnQgMjAxNwAAKAEAI3N0XzBjNmJlMzllMGQ0NzQ4MmY4OTE1ZmU3MDNjMGFjN2I0AAAOAQAJ
TWljcm9zb2Z0AAAAOF8AAAAAAAAAAAAATl8AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBfAAAA
AAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACAAAAAAAAAAAAA
AAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAAMgDAAAAAAAAAAAAAMgD
NAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAAAQAAAAAAAAAB
AAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBpAGwAZQBJAG4A
ZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsAQoAwAAAQBTAHQAcgBp
AG4AZwBGAGkAbABlAEkAbgBmAG8AAAAEAwAAAQAwADAAMAAwADAANABiADAAAAA0AAoAAQBDAG8A
bQBwAGEAbgB5AE4AYQBtAGUAAAAAAE0AaQBjAHIAbwBzAG8AZgB0AAAAcAAkAAEARgBpAGwAZQBE
AGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAHMAdABfADAAYwA2AGIAZQAzADkAZQAwAGQANAA3ADQA
OAAyAGYAOAA5ADEANQBmAGUANwAwADMAYwAwAGEAYwA3AGIANAAAADAACAABAEYAaQBsAGUAVgBl
AHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEA
bQBlAAAAcwB0AF8AMABjADYAYgBlADMAOQBlADAAZAA0ADcANAA4ADIAZgA4ADkAMQA1AGYAZQA3
ADAAMwBjADAAYQBjADcAYgA0AC4AZABsAGwAAABcABsAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkA
ZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABNAGkAYwByAG8AcwBvAGYAdAAgADIAMAAx
ADcAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABzAHQAXwAwAGMA
NgBiAGUAMwA5AGUAMABkADQANwA0ADgAMgBmADgAOQAxADUAZgBlADcAMAAzAGMAMABhAGMANwBi
ADQALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAcwB0AF8AMABjADYA
YgBlADMAOQBlADAAZAA0ADcANAA4ADIAZgA4ADkAMQA1AGYAZQA3ADAAMwBjADAAYQBjADcAYgA0
AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgA
CAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAwAAABgPwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnWarning].PrecedenceConstraints[{26D3EA05-303C-4DAE-89CA-8B6613AB0056\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{26D3EA05-303C-4DAE-89CA-8B6613AB0056}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceID]!=@[System::PackageID] &amp;&amp; @[System::SourceName]!=@[System::PackageName] &amp;&amp; SUBSTRING(@[System::SourceName], 1, 12)!=&quot;SSISOpsEhObj&quot; &amp;&amp; @[User::varSSISOps_DisableBIxAuditing]==false"
          DTS:From="Package.EventHandlers[OnWarning]\SSISOpsEhObj_OnWarning_Start"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{26D3EA05-303C-4DAE-89CA-8B6613AB0056}"
          DTS:To="Package.EventHandlers[OnWarning]\SSISOpsEhObj_Task_OnWarning"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnWarning].PrecedenceConstraints[{947D048B-5D8F-4527-A5E9-9221BB4DB0F1\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{947D048B-5D8F-4527-A5E9-9221BB4DB0F1}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceID]==@[System::PackageID] &amp;&amp; @[System::SourceName]==@[System::PackageName] &amp;&amp; SUBSTRING(@[System::SourceName], 1, 12)!=&quot;SSISOpsEhObj&quot; &amp;&amp; @[User::varSSISOps_DisableBIxAuditing]==false"
          DTS:From="Package.EventHandlers[OnWarning]\SSISOpsEhObj_OnWarning_Start"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{947D048B-5D8F-4527-A5E9-9221BB4DB0F1}"
          DTS:To="Package.EventHandlers[OnWarning]\SSISOpsEhObj_Package_OnWarning"
          DTS:Value="2" />
      </DTS:PrecedenceConstraints>
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="217,42"
          Id="Package\Completion (Audit)\Mark Job As Complete in Job"
          TopLeft="17,23" />
        <NodeLayout
          Size="256,42"
          Id="Package\Completion (Audit)\Mark Job as Complete in JobInstance"
          TopLeft="252.42857141884,22.3882352855378" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="513,84"
          Size="513,127"
          Id="Package\Completion (Audit)"
          TopLeft="123.071428571429,934.821428571428" />
        <NodeLayout
          Size="223,42"
          Id="Package\Initialization\Validate Connection Managers"
          TopLeft="66,29" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="False"
          PanelSize="332,130"
          Size="213,43"
          Id="Package\Initialization"
          TopLeft="274.714285714286,52.5714285714286" />
        <NodeLayout
          Size="385,42"
          Id="Package\Initialization (Audit)\Execute cmd shell and retrieve environment variable information"
          TopLeft="19,279" />
        <NodeLayout
          Size="161,42"
          Id="Package\Initialization (Audit)\Log Environment"
          TopLeft="128,368" />
        <NodeLayout
          Size="164,42"
          Id="Package\Initialization (Audit)\Populate ETLUser"
          TopLeft="134,26" />
        <NodeLayout
          Size="155,42"
          Id="Package\Initialization (Audit)\Populate Joblog"
          TopLeft="135,105" />
        <NodeLayout
          Size="208,42"
          Id="Package\Initialization (Audit)\Populate new Job Instance"
          TopLeft="115,183" />
        <EdgeLayout
          Id="Package\Initialization (Audit).PrecedenceConstraints[Constraint]"
          TopLeft="214.25,68">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,37"
              Start="0,0"
              End="0,29.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Initialization (Audit).PrecedenceConstraints[Constraint 1]"
          TopLeft="215.75,147">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36"
              Start="0,0"
              End="0,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Initialization (Audit).PrecedenceConstraints[Constraint 2]"
          TopLeft="215.25,225">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,54"
              Start="0,0"
              End="0,46.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,15.25,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Initialization (Audit).PrecedenceConstraints[Constraint 3]"
          TopLeft="210,321">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,47"
              Start="0,0"
              End="0,39.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="False"
          PanelSize="422,481"
          Size="207,43"
          Id="Package\Initialization (Audit)"
          TopLeft="280.714285714286,146.571428571429" />
        <NodeLayout
          Size="227,42"
          Id="Package\Data Process From Quidel to Value Centric (SFTP Data Upload)\Clean up Directory After Data Processing\Delete Flat Files from Directory"
          TopLeft="46,40" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="296,138"
          Size="296,181"
          Id="Package\Data Process From Quidel to Value Centric (SFTP Data Upload)\Clean up Directory After Data Processing"
          TopLeft="53,309" />
        <NodeLayout
          Size="188,42"
          Id="Package\Data Process From Quidel to Value Centric (SFTP Data Upload)\Send Quidel Account Files to Value Centric\TF File Properties Task"
          TopLeft="77,31" />
        <NodeLayout
          Size="269,42"
          Id="Package\Data Process From Quidel to Value Centric (SFTP Data Upload)\Send Quidel Account Files to Value Centric\Upload FlatFiles To Value Centric Server"
          TopLeft="41,122" />
        <EdgeLayout
          Id="Package\Data Process From Quidel to Value Centric (SFTP Data Upload)\Send Quidel Account Files to Value Centric.PrecedenceConstraints[Constraint]"
          TopLeft="173.25,73">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,49"
              Start="0,0"
              End="0,41.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="323,198"
          Size="323,241"
          Id="Package\Data Process From Quidel to Value Centric (SFTP Data Upload)\Send Quidel Account Files to Value Centric"
          TopLeft="33.5,27" />
        <EdgeLayout
          Id="Package\Data Process From Quidel to Value Centric (SFTP Data Upload).PrecedenceConstraints[Constraint]"
          TopLeft="198,268">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41"
              Start="0,0"
              End="0,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="407,545"
          Size="407,588"
          Id="Package\Data Process From Quidel to Value Centric (SFTP Data Upload)"
          TopLeft="181.178571428571,264.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="382.714285714286,95.5714285714286">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,51"
              Start="0,0"
              End="0,43.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="382.125,852.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,82.3214285714287"
              Start="0,0"
              End="0,74.8214285714287">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,74.8214285714287" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="SFTP Utility SSIS Package Development by:  Darlington C. Nwemeh Version 1.1  Date:  10/10/2016&#xA;&#xA;Overview: The purpose of this package is to send all the data's (flat files) emanating from Quidel to Value Centric so as to &#xA;                 enable Value Centric to process Quidel's customer and sales information in time and send back to Quidel to aid &#xA;                 in its internal data processes.&#xA;&#xA;&#xA;Copyright (c)  2016 Quidel Corporation "
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="679,154"
          Id="0e41c160-5b38-4dca-b967-4a1dc5329cb2"
          TopLeft="710,53" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="384.446428571429,189.571428571429">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,74.9285714285712"
              Start="0,0"
              End="0,67.4285714285712">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,67.4285714285712" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="{A8ACA7A5-C32E-4C71-8B3D-8407AAC42625}"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="{70E9A6E5-3894-487F-9D53-CAC7AF639E77}"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="{6304910F-6550-44A6-8F32-8D6049F12717}"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="{4B509E6A-C663-4102-85C8-36D7AA4FD09A}"
          TopLeft="NaN,NaN" />
        <EdgeLayout
          Id="{5C547CDA-A7CB-4AFF-946A-8BFEF72097B7}"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="{BABFAB80-72AD-43DC-98EE-7B1BE03FAA74}"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="{84B605DE-9F34-4708-9C65-56912A547D96}"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="{EF099015-642C-460B-85D1-5B674D71B49E}"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="{5D143F42-E88E-4ADB-9F27-D96B0B022073}"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="{00E5DBCF-5D32-4D56-8BDC-7BF54A03581F}"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="{9AE070AD-2ED2-4050-9789-79E69050EF29}"
          TopLeft="NaN,NaN" />
        <EdgeLayout
          Id="{2E85C655-6CC3-483E-8201-612B2164E662}"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="{82C7F90E-568E-41B5-A4FF-F3F38FBE3EBA}"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="{967305CA-6202-47B6-AF46-3C294B0610B4}"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="{5FD416CF-B123-4E16-B7B6-390A32903ABC}">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="{1CC77EE8-2CFE-4F5A-8E31-BB1C646914A8}"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="{5448EC4F-7104-47D5-A783-8AB353CA7C19}"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="{C606F586-43CD-4BE8-9468-F6CE51AB399E}"
          TopLeft="NaN,NaN" />
        <EdgeLayout
          Id="{5B6B931C-C020-40CB-8F45-7DBD9B47DC51}"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="{BCD14A19-35D5-4A98-86FB-403D43E713F2}"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="{BC8A89E7-926B-42A5-81BB-04175E8A3A90}">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="{4D1E2C91-C395-4B78-B178-F11DBF521A74}"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="{5C7BDE03-57F2-457F-B703-2CF5F057043A}"
          TopLeft="NaN,NaN" />
        <EdgeLayout
          Id="{90529FBA-7AB5-48EF-877D-6985D01C547E}"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnWarning]">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="{5B88A614-D904-4A09-81B8-D592B4189920}"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="{0A5C21C0-A99F-419F-B423-EEA63ADCD4AE}"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="{55970B4D-1BAC-4903-B901-C8098FFA0A5D}"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="{8DB144AF-FA34-4AE9-AAB1-DAB812A919C1}"
          TopLeft="NaN,NaN" />
        <EdgeLayout
          Id="{7EDCA87F-F396-4A60-B519-3A2BEADE5EC0}"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="{BD0CA2C1-F11D-4220-B9C7-38B3474AC14A}"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>