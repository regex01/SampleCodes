<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="9/30/2016 2:37:44 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="NWEMEH-20256P"
  DTS:CreatorName="KANSAS\QadminDN"
  DTS:DelayValidation="True"
  DTS:DTSID="{3B00A5E8-DA1E-408E-AC58-1F9F4DD2BDF7}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.3002.101"
  DTS:LocaleID="1033"
  DTS:ObjectName="InternalInboundERPLNItemSubcontractingIncr"
  DTS:PackageType="5"
  DTS:ProtectionLevel="0"
  DTS:VersionBuild="345"
  DTS:VersionGUID="{A1BA73D3-5473-40B8-B962-737112529CA9}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="OLEDB_ETLAudit"
      DTS:CreationName="Microsoft.LogProviderSQLServer"
      DTS:DelayValidation="True"
      DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
      DTS:DTSID="{23DA32D1-B8B1-4296-8265-145F4753F409}"
      DTS:ObjectName="BIxPress Log Provider">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{54E57BF7-D828-48B8-A117-1F5AA5BCDBA0}"
      DTS:ObjectName="pAuditTable">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">ExceptionData</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="20"
      DTS:DTSID="{3630FBF4-2862-4154-B6DF-D3E47571087E}"
      DTS:ObjectName="pChildPackageID">
      <DTS:Property
        DTS:DataType="20"
        DTS:Name="ParameterValue">-1</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{78E2A29B-1382-4053-B4B4-D1E779BE665A}"
      DTS:ObjectName="pDefaultBufferMaxRows">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">47800</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{4779D452-C173-4BCD-806A-AE50F9248A3A}"
      DTS:ObjectName="pDefaultBufferSize">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">104857600</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{CE72BF8E-005E-4888-AB89-1BD67BAFD4BF}"
      DTS:ObjectName="pEngineThreads">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">4</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{B8644E96-E9B6-4514-9F3D-3E9CABEAE1A5}"
      DTS:ObjectName="pJobInstanceParentID">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{97D29846-C5C4-4A18-BC16-6C8D43BBF05B}"
      DTS:ObjectName="pSourceItemSubContTableName">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">tticpr160711</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{46330C1C-2977-4BEC-B9B5-DCD426093881}"
      DTS:ObjectName="pTargetTableName">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">ItemSubcontractingRates</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
      DTS:DTSID="{C0272CC2-7ADA-40F2-866E-1DE2A8085ED9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOpsNF_AlertList">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
      DTS:DTSID="{4F830960-4C37-4BE7-B4F6-F3361BBD75A4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOpsNF_AlertList_All">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
      DTS:DTSID="{39B25215-DDBA-4A70-AF78-CC07E2E367D4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOpsNF_From">
      <DTS:VariableValue
        DTS:DataType="8">ETLNotifications@quidel.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
      DTS:DTSID="{9F59B0C0-85E5-4A55-B829-596D4D7CDE35}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOpsNF_Notification_Counter">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
      DTS:DTSID="{115F6B5B-F426-47DF-A957-02FE4A88B9E8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOpsNF_OtherConfigSettings">
      <DTS:VariableValue
        DTS:DataType="8">PRIORITY_MODE=DELAYED;EMAIL_FORMAT=HTML;SMTP_UID=;SMTP_PWD=;SMTP_PORT=25;SMTP_USESSL=False;NOTIFY_ONERROR=True;NOTIFY_ONWARNING=False;NOTIFY_ONSUCCESS=False;NOTIFY_ONCOMPLETE=False;SMS_EMAILLIST=8582485354@vzwpix.com;MAX_NOTIFICATIONS=10;ENABLE_TIME_THRESHOLD=False;ENABLE_ROWCOUNT_THRESHOLD=False;SMS_MAXLENGTH=140;FILTERED_ALERTS=;CC_EMAILLIST=;BCC_EMAILLIST=;NOTIFY_USING_EMAIL=True;NOTIFY_USING_SMS=True;NOTIFY_USING_EVENTLOG=False;NOTIFY_USING_LOGFILE=False;LOG_FOLDER_PATH=C:\SSIS\Log;USE_CUSTOM_EMAIL_TEMPLATE=False;CUSTOM_EMAIL_TEMPLATE_FILEPATH=C:\SSIS\Config\NF_EmailTemplate.htm;DELETE_LOG_OLDER_THAN_DAYS=5</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
      DTS:DTSID="{A61F764A-4C91-42D3-A932-9DFFA8D330F5}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOpsNF_SMTPServerName">
      <DTS:VariableValue
        DTS:DataType="8">relay.quidel.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
      DTS:DTSID="{0954052D-F9FC-4551-BB4C-8EFA22AE10CB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOpsNF_To">
      <DTS:VariableValue
        DTS:DataType="8">BISupport@quidel.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
      DTS:DTSID="{28E12778-6FCA-4468-B75D-2DF7BE49B9E3}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOps_14C0747143F3468E85B149B3D7799974_RowCount_1">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
      DTS:DTSID="{2B49E150-50E7-4D0B-B8B2-1A5E866951C9}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOps_14C0747143F3468E85B149B3D7799974_RowCount_2">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
      DTS:DTSID="{9DB1AC7A-B010-45A3-B03A-D1A876255C89}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOps_14C0747143F3468E85B149B3D7799974_RowCount_3">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
      DTS:DTSID="{0F6FB986-B89B-4E9F-B3B5-A680E5C33F01}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOps_47812213D9C7424D9EBEF3F6B6D1B048_RowCount_1">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
      DTS:DTSID="{90D0E143-5854-4A26-A6E1-F394B3F2424F}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOps_47812213D9C7424D9EBEF3F6B6D1B048_RowCount_2">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOps : DON'T CHANGE PREFIX. This variable (introduced in v3.2) controls execution of all event handlers for BIxPress Auditing Framework. Set this variable to True or -1 if you want to disable auditing framework related code inside all eventhandlers. You may also have to set Package.LoggingMode=2 along with this variable if you want to disable framework completely."
      DTS:DTSID="{0957BD1B-93B9-413C-9E89-36595E9B0501}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOps_DisableBIxAuditing">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOps : DON'T CHANGE PREFIX. This variable (introduced in v3.2) controls logging of connection strings (in PreExcute and PostExecute Eventhandlers). Set this variable to True or -1 if you want to disable connectionstring logging."
      DTS:DTSID="{B7A9D35D-C620-4B6C-9BA5-715EA468F6A5}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOps_DisableConnLogging">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOps : DON'T CHANGE PREFIX. This variable (introduced in v3.2) controls logging of datasource information (e.g. SqlCommand, ConnectionName, TableName etc.)"
      DTS:DTSID="{F74E9BB4-0BA7-49E4-B23C-098B6D483615}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOps_DisableDataSrcInfoLogging">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOps : DON'T CHANGE PREFIX. This variable (introduced in v3.2) controls logging of row count for each attached with source and target information (e.g. SqlCommand, ConnectionName, TableName etc.)"
      DTS:DTSID="{817597DA-47E4-4332-9E61-A68EAA6CBE65}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOps_DisableDFTRowCountLogging">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOps : DON'T CHANGE PREFIX. This variable (introduced in 3.5.3) controls logging of the initial value of non-sensitive parameters.  Set this variable to True or -1 if you want to disable variable logging."
      DTS:DTSID="{5884CEC2-B8C7-4F21-8BFD-4378F71E551D}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOps_DisableParameterInitialValueLogging">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOps : DON'T CHANGE PREFIX. This variable (introduced in v3.2) controls logging of variable values (in PreExcute and PostExecute Eventhandlers). Set this variable to True or -1 if you want to disable variable logging."
      DTS:DTSID="{9ECFB357-917B-43E8-8155-6B686C113360}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOps_DisableVarLogging">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOps : DON'T CHANGE PREFIX. Set this variable to list of ConnectionManagers you want to mask ConnectionStrings during logging process inside OnPreExecute Eventhandler. You can use comma separated list you can use wildcard &quot; * &quot; for pattern matching names are case in-sensitive. This option is helpful when you want to hide certain connection strings or file paths from users who are using BIxPress Monitoring Console or Reports. When masking is enabled, &quot;****&quot; is logged in the BIxPress Audit Database rather than actual connectionstring of specified connection managers. Note: You can configure list of variables you want to mask outside the package by configuring &quot;varSSISOps_FilteredConns&quot;. There are 2 places where you have to set this value (OnPreExecute, OnPostExecute)."
      DTS:DTSID="{0F8939AD-5208-4415-9C38-A073C741BACB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOps_FilteredConns">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
      DTS:DTSID="{86C50575-4C74-46A3-8655-2DAE221A1953}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOps_GroupNames">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOps : DON'T CHANGE PREFIX. This variable (introduced in 2017.1) controls logging of the initial value of non-sensitive parameters and variables.  Set this variable to a comma separated list of qualified variable names to dictate which variables values will be logged during the package's OnPreExecute event handler."
      DTS:DTSID="{9A7C4CBD-7C8A-4062-8EF6-DC141FB03AAB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOps_InitialParamsVarsToLog">
      <DTS:VariableValue
        DTS:DataType="8">User::vAuditDateTime,User::vCreateAllIndexSQL,User::vCurJobID,User::vCurJobInstanceID,User::vCurUserID,User::vDeletedRowCount,User::vDeletedTotalRowCount,User::vDropAllIndexSQL,User::vEnvironmentTEXT,User::vFileCreatedDate,User::vFileLastModifiedDate,User::vInsertedRowCount,User::vInsertedTotalRowCount,User::vJobInstanceSourceID,User::vLastRecordsProcessedDate,User::vPackageStartDate,User::vProcessedRowCount,User::vRejectedTotalRowCount,User::vSchemaExceptionTable,User::vSchemaTableName,User::vSourceSchemaName,User::vSourceServerDatabase,User::vSourceTableName,User::vSQLDeleteDuplicates,User::vSQLGetAuditDateTime,User::vSQLGetLastRecordProcessedDate,User::vSQLIndexStatement,User::vSQLInitIncrStatement,User::vSQLSelectToDestinationTable,User::vSQLSourceStatement,User::vSQLTruncateTargetTable,User::vSQLUpdateETLAuditColumn,User::vSQLUpdateETLAuditTable,User::vTargetTableCount,User::vUpdatedTotalRowCount,$Package::pAuditTable,$Package::pChildPackageID,$Package::pDefaultBufferMaxRows,$Package::pDefaultBufferSize,$Package::pEngineThreads,$Package::pJobInstanceParentID,$Package::pSourceItemSubContTableName,$Package::pTargetTableName</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOps : DON'T CHANGE PREFIX. An package-level variable used during package execution by the Auditing Framework to determine if a variable value has changed.  If a variable value has changed during the OnPostExecute event for tasks, logic will be executed to log changed variable values that are bound to an expression."
      DTS:DTSID="{44CEF51E-CC83-4927-9DBA-D3B056F49CDB}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOps_IsAnyVariableValueChanged">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:Description="SSISOps : DON'T CHANGE PREFIX. Set this variable to configure how many characters will be logged for each variable. Default variable length for logging is 4000 anything after that will be truncated. -1 = Log full variable value . There are 3 places where you have to set this value (OnPreExecute, OnPostExecute OnVariableValueChanged)."
      DTS:DTSID="{1E82BABE-853F-4A80-88BD-7D516F6B2653}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varSSISOps_MaxVarCharsToLog">
      <DTS:VariableValue
        DTS:DataType="3">4000</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{197BA2E1-99D3-4E55-8D9D-D0FA7D34F9AB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vAuditDateTime"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="7">11/8/2016 11:16:00 AM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{14D93C46-42F2-4C5D-B2FF-029075FA6385}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vCreateAllIndexSQL"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EE74FF13-4048-43FC-99CD-791EBD103982}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vCurJobID"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F98768CA-BD36-4F84-868E-A2D206919757}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vCurJobInstanceID"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{70B6B220-9821-459C-89B4-FA9B0D9945A4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vCurUserID"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{75BAD844-4A1B-4F11-B35D-94EB6010898D}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vDeletedRowCount"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{01B1E01A-0742-49E2-9ABD-3E2461B0AF24}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vDeletedTotalRowCount"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E4FAB68B-007A-43A5-B1A4-8887910576B9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vDropAllIndexSQL"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{68F55932-599B-40F8-BBC1-70F28882BCC5}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vEnvironmentTEXT"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{98AD91D1-34CE-48B6-98F1-070F51F9FA17}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vFileCreatedDate"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="7">9/30/2016 2:43:25 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{02271C11-113F-426A-A15A-ECA91C83B395}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vFileLastModifiedDate"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="7">9/30/2016 2:43:34 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{39828059-4D6C-4DE2-961E-242D2E279B9C}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vInsertedRowCount"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1CEE8D51-946C-49F3-BBF4-6B7901273AA3}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vInsertedTotalRowCount"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5A94EDC8-0350-4C82-8B41-3B7D494A139D}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vJobInstanceSourceID"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{23C3A55D-48F0-427A-BEDE-7F9291CD4CAB}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vLastRecordsProcessedDate"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="7">9/30/2016 2:44:00 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{17B4DFF3-7281-45B9-8B8C-A44656F58A6D}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="(DT_STR, 4, 1252) DATEPART(&quot;yyyy&quot;, @[System::StartTime]) + &quot;-&quot; +&#xA;&#xA;RIGHT(&quot;00&quot; + (DT_STR, 2, 1252) DATEPART(&quot;mm&quot;, @[System::StartTime]), 2) + &quot;-&quot; +&#xA;&#xA;RIGHT(&quot;00&quot; + (DT_STR, 2, 1252) DATEPART(&quot;dd&quot;, @[System::StartTime]), 2) + &quot; &quot; +&#xA;&#xA;RIGHT(&quot;00&quot; + (DT_STR, 2, 1252) DATEPART(&quot;hh&quot;, @[System::StartTime]), 2) + &quot;:&quot; +&#xA;&#xA;RIGHT(&quot;00&quot; + (DT_STR, 2, 1252) DATEPART(&quot;mi&quot;, @[System::StartTime]), 2) + &quot;:&quot; +&#xA;RIGHT(&quot;00&quot; + (DT_STR, 2, 1252) DATEPART(&quot;ss&quot;, @[System::StartTime]), 2) + &quot;.&quot; +&#xA;RIGHT(&quot;000&quot; + (DT_STR, 3, 1252) DATEPART(&quot;ms&quot;, @[System::StartTime]), 3)"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vPackageStartDate">
      <DTS:VariableValue
        DTS:DataType="8">2018-05-24 15:01:58.000</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{72B9E735-0623-46E1-A482-3EC6686AF514}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vProcessedRowCount"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AC90B06F-E8EE-4BAA-8475-02C2480193F4}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vRejectedTotalRowCount"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0B9114C6-D7B9-4E02-8AB2-6F15BF58D9AA}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;[&quot;+@[$Project::pAuditShema]+&quot;]&quot;+&quot;.&quot;+ &quot;[&quot;+ @[$Package::pAuditTable] +&quot;]&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vSchemaExceptionTable">
      <DTS:VariableValue
        DTS:DataType="8">[Audit].[ExceptionData]</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EB5432D9-01F2-4C9B-81FF-6F09FEC5E627}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;[&quot;+@[$Project::pTargetSchema] +&quot;]&quot; + &quot;.&quot; +&quot;[&quot;+ @[$Package::pTargetTableName] +&quot;]&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vSchemaTableName">
      <DTS:VariableValue
        DTS:DataType="8">[ln].[ItemSubcontractingRates]</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D9F707A4-57E8-425C-B8EC-CADE6838C288}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vSourceSchemaName"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="8">ln</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3DE99371-8FDC-4D77-933A-D69B29CB0993}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::pSourceDatabase]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vSourceServerDatabase">
      <DTS:VariableValue
        DTS:DataType="8">EDW_STAGE</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{17D77362-4573-41B5-B85D-5E005573A4C0}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;[&quot;+@[User::vSourceSchemaName] +&quot;]&quot; + &quot;.&quot; +&quot;[&quot;+ @[$Package::pSourceItemSubContTableName]  +&quot;]&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vSourceTableName">
      <DTS:VariableValue
        DTS:DataType="8">[ln].[tticpr160711]</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{682A55CA-20D6-4752-91BF-8949CDABDFE6}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;WITH CTE AS(  SELECT   RN = ROW_NUMBER()OVER(PARTITION BY &#xA;&#xA;&#x9;ProductID&#xA;&#x9;,PriceCalculationCode&#xA;&#x9;,SubcontractorID      ORDER BY &#xA;&#x9;ProductID&#xA;&#x9;,PriceCalculationCode&#xA;&#x9;,SubcontractorID&#xA;&#xA;&#xA;&#xA; )  FROM &quot; + @[User::vSchemaTableName] + &quot;) DELETE FROM CTE WHERE RN &gt;1&#xA;&#x9; SELECT @@ROWCOUNT AS DeletedRows&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vSQLDeleteDuplicates">
      <DTS:VariableValue
        DTS:DataType="8">WITH CTE AS(  SELECT   RN = ROW_NUMBER()OVER(PARTITION BY 

	ProductID
	,PriceCalculationCode
	,SubcontractorID      ORDER BY 
	ProductID
	,PriceCalculationCode
	,SubcontractorID



 )  FROM [ln].[ItemSubcontractingRates]) DELETE FROM CTE WHERE RN &gt;1
	 SELECT @@ROWCOUNT AS DeletedRows</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{307170E5-ECF9-4ABF-AE73-3EECF57C969E}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT ? = Convert(DateTime2, sysdatetime(),121)&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vSQLGetAuditDateTime">
      <DTS:VariableValue
        DTS:DataType="8">SELECT ? = Convert(DateTime2, sysdatetime(),121)</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{28C41A00-AA6C-4D43-BEF6-1256197D1F94}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;DECLARE @LastRecordsProcessedDate DATETIME&#xA;&#xA;SELECT @LastRecordsProcessedDate = ISNULL(LastRecordsProcessedDate, '1900-01-01')&#xA; FROM Audit.Job&#xA;WHERE JobID = ?&#xA;&#xA;SELECT @LastRecordsProcessedDate AS [LastRecordsProcessedDate]&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vSQLGetLastRecordProcessedDate">
      <DTS:VariableValue
        DTS:DataType="8">DECLARE @LastRecordsProcessedDate DATETIME

SELECT @LastRecordsProcessedDate = ISNULL(LastRecordsProcessedDate, '1900-01-01')
 FROM Audit.Job
WHERE JobID = ?

SELECT @LastRecordsProcessedDate AS [LastRecordsProcessedDate]</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B821340E-8A3D-422A-A502-68AE3E948750}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;DECLARE&#xA;@IncludeFileGroup bit = 1,&#xA;@IncludeDrop bit = 1,&#xA;@IncludeFillFactor bit = 0&#xA;&#xA;DECLARE @sTableName VARCHAR(150) = ?&#xA;DECLARE @sIndexDesc varchar(MAX)&#xA;DECLARE @sCreateSql varchar(MAX)&#xA;DECLARE @sDropSql varchar(MAX)&#xA;DECLARE @sCreateAllSql varchar(MAX) = ''&#xA;DECLARE @sDropAllSql varchar(MAX) = ''&#xA;&#xA;--- Get all existing indexes, but NOT the primary keys&#xA;DECLARE Indexes_cursor CURSOR&#xA;FOR SELECT&#xA;SC.Name AS SchemaName&#xA;, SO.Name AS TableName&#xA;, SI.Object_Id AS TableId&#xA;, SI.[Name] AS IndexName&#xA;, SI.Index_ID AS IndexId&#xA;, SI.type_desc AS IndexType&#xA;, FG.[Name] AS FileGroupName&#xA;, CASE WHEN SI.Fill_Factor = 0 THEN 100 ELSE SI.Fill_Factor END Fill_Factor&#xA;,SI.is_primary_key&#xA;,SI.is_unique&#xA;FROM sys.indexes SI&#xA;LEFT JOIN sys.filegroups FG&#xA;ON SI.data_space_id = FG.data_space_id&#xA;INNER JOIN sys.objects SO&#xA;ON SI.object_id = SO.object_id&#xA;INNER JOIN sys.schemas SC&#xA;ON SC.schema_id = SO.schema_id&#xA;WHERE ObjectProperty(SI.Object_Id, 'IsUserTable') = 1&#xA;AND SI.[Name] IS NOT NULL&#xA;--AND SI.is_primary_key = 0&#xA;AND SI.is_unique_constraint = 0&#xA;AND IndexProperty(SI.Object_Id, SI.[Name], 'IsStatistics') = 0&#xA;AND SC.name + '.' + SO.name = @sTableName&#xA;ORDER BY Object_name(SI.Object_Id), SI.Index_ID&#xA;&#xA;DECLARE @SchemaName sysname&#xA;DECLARE @TableName sysname&#xA;DECLARE @TableId int&#xA;DECLARE @IndexType SYSNAME&#xA;DECLARE @IndexName sysname&#xA;DECLARE @FileGroupName sysname&#xA;DECLARE @IndexId int&#xA;DECLARE @FillFactor int&#xA;DECLARE @IsPrimaryKey BIT&#xA;DECLARE @IsUnique BIT&#xA;&#xA;DECLARE @NewLine varchar(4000) SET @NewLine = CHAR(13) + CHAR(10)&#xA;DECLARE @Tab varchar(4000) SET @Tab = Space(4)&#xA;&#xA;-- Loop through all indexes&#xA;OPEN Indexes_cursor&#xA;&#xA;FETCH NEXT&#xA;FROM Indexes_cursor&#xA;INTO @SchemaName, @TableName, @TableId, @IndexName,&#xA;@IndexId, @IndexType, @FileGroupName, @FillFactor, @IsPrimaryKey, @IsUnique&#xA;&#xA;WHILE (@@Fetch_Status = 0)&#xA;BEGIN&#xA;&#xA;IF (@IsPrimaryKey = 0)&#xA;BEGIN&#xA;  SET @sIndexDesc = '-- Index ' + @IndexName + ' on table ' + @TableName&#xA;  SET @sDropSql = 'IF EXISTS (SELECT 1' + @NewLine&#xA;  + ' FROM sysindexes si' + @NewLine&#xA;  + ' INNER JOIN sysobjects so' + @NewLine&#xA;  + ' ON so.id = si.id' + @NewLine&#xA;  + ' WHERE si.[Name] = ''' + @IndexName + ''' -- Index Name' + @NewLine&#xA;  + ' AND so.[Name] = ''' + @TableName + ''') -- Table Name' + @NewLine&#xA;  + 'BEGIN' + @NewLine&#xA;  + ' DROP INDEX [' + @IndexName + '] ON'&#xA;  + '[' + @SchemaName + '].[' + @TableName + ']' + @NewLine&#xA;  + 'END' + @NewLine&#xA;&#xA;  SET @sCreateSql = 'CREATE'&#xA;&#xA;  -- Check if the index is unique&#xA;  IF (@IsUnique = 1)&#xA;  BEGIN&#xA;  SET @sCreateSql = @sCreateSql + ' UNIQUE'&#xA;  END&#xA;&#xA;  -- Check if the index is clustered&#xA;  IF (@IndexType = 'CLUSTERED')&#xA;  BEGIN&#xA;  SET @sCreateSql = @sCreateSql + ' CLUSTERED'&#xA;  END&#xA;&#xA;&#xA;  SET @sCreateSql = @sCreateSql + ' INDEX [' + @IndexName + ']&#xA;  ON [' + @SchemaName + '].[' + @TableName + ']' + @NewLine + '(' + @NewLine&#xA;END&#xA;&#xA;ELSE&#xA;BEGIN&#xA;       SET @sDropSql = 'ALTER TABLE ' + @SchemaName + '.'+ @TableName + ' DROP CONSTRAINT ' + @IndexName&#xA;&#xA;       SET @sCreateSql = ''&#xA;       SET @sCreateSql = @sCreateSql + 'ALTER TABLE ' + @SchemaName + '.' + @TableName +  + ' ADD CONSTRAINT ' + @IndexName + ' PRIMARY KEY '&#xA;&#xA;       IF (@IndexType = 'NONCLUSTERED')&#xA;       BEGIN&#xA;       SET @sCreateSql = @sCreateSql + ' NONCLUSTERED'&#xA;       END&#xA;&#xA;       SET @sCreateSql = @sCreateSql + '(' &#xA;END&#xA;&#xA;  -- Get all columns of the index&#xA;  DECLARE IndexColumns_cursor CURSOR&#xA;  FOR SELECT SC.[Name],&#xA;  IC.[is_included_column],&#xA;  IC.is_descending_key&#xA;  FROM sys.index_columns IC&#xA;  INNER JOIN sys.columns SC&#xA;  ON IC.Object_Id = SC.Object_Id&#xA;  AND IC.Column_ID = SC.Column_ID&#xA;  WHERE IC.Object_Id = @TableId&#xA;  AND Index_ID = @IndexId&#xA;  ORDER BY IC.key_ordinal&#xA;&#xA;  DECLARE @IxColumn sysname&#xA;  DECLARE @IxIncl bit&#xA;  DECLARE @Desc bit&#xA;  DECLARE @IxIsIncl bit SET @IxIsIncl = 0&#xA;  DECLARE @IxFirstColumn bit SET @IxFirstColumn = 1&#xA;&#xA;  -- Loop through all columns of the index and append them to the CREATE statement&#xA;  OPEN IndexColumns_cursor&#xA;   FETCH NEXT&#xA;   FROM IndexColumns_cursor&#xA;   INTO @IxColumn, @IxIncl, @Desc&#xA;&#xA;  WHILE (@@Fetch_Status = 0)&#xA;  BEGIN&#xA;   IF (@IxFirstColumn = 1)&#xA;   BEGIN&#xA;    SET @IxFirstColumn = 0&#xA;   END&#xA;   ELSE&#xA;   BEGIN&#xA;    --check to see if it's an included column&#xA;    IF (@IxIsIncl = 0) AND (@IxIncl = 1)&#xA;    BEGIN&#xA;     SET @IxIsIncl = 1&#xA;     SET @sCreateSql = @sCreateSql + @NewLine + ')' +&#xA;      @NewLine + 'INCLUDE' + @NewLine + '(' + @NewLine&#xA;    END&#xA;    ELSE&#xA;    BEGIN&#xA;     SET @sCreateSql = @sCreateSql + ',' + @NewLine&#xA;    END&#xA;    --END IF&#xA;   END&#xA;  --END IF&#xA;&#xA;   SET @sCreateSql = @sCreateSql + @Tab + '[' + @IxColumn + ']'&#xA;   -- check if ASC or DESC&#xA;   IF @IxIsIncl = 0&#xA;   BEGIN&#xA;    IF @Desc = 1&#xA;    BEGIN&#xA;     SET @sCreateSql = @sCreateSql + ' DESC'&#xA;    END&#xA;    ELSE&#xA;    BEGIN&#xA;     SET @sCreateSql = @sCreateSql + ' ASC'&#xA;    END&#xA;    --END IF&#xA;   END&#xA;   --END IF&#xA;   FETCH NEXT&#xA;   FROM IndexColumns_cursor&#xA;   INTO @IxColumn, @IxIncl, @Desc&#xA;  END&#xA;  --END WHILE&#xA;&#xA;  CLOSE IndexColumns_cursor&#xA;  DEALLOCATE IndexColumns_cursor&#xA;&#xA;  SET @sCreateSql = @sCreateSql + @NewLine + ') '&#xA;&#xA;  IF @IncludeFillFactor = 1&#xA;  BEGIN&#xA;   SET @sCreateSql = @sCreateSql + @NewLine +&#xA;   'WITH (FillFactor = ' + Cast(@FillFactor as varchar(13)) + ')' + @NewLine&#xA;  END&#xA;  --END IF&#xA;&#xA;  IF @IncludeFileGroup = 1&#xA;  BEGIN&#xA;   SET @sCreateSql = @sCreateSql + 'ON ['+ @FileGroupName + ']' + @NewLine&#xA;  END&#xA;  ELSE&#xA;  BEGIN&#xA;   SET @sCreateSql = @sCreateSql + @NewLine&#xA;  END&#xA;  --END IF&#xA;&#xA;  SET @sCreateAllSql = @sCreateAllSql + '&#xA;'&#xA;&#xA;  SET @sDropAllSql = @sDropAllSql + '&#xA;'&#xA;&#xA;  IF @IncludeDrop = 1&#xA;  BEGIN&#xA;   SET @sDropAllSql = @sDropAllSql + @sDropSql + '&#xA;'&#xA;  END&#xA;&#xA;  SET @sCreateAllSql = @sCreateAllSql + @sCreateSql + '&#xA;'&#xA;&#xA;  FETCH NEXT&#xA;   FROM Indexes_cursor&#xA;   INTO @SchemaName, @TableName, @TableId, @IndexName,&#xA;   @IndexId, @IndexType, @FileGroupName, @FillFactor, @IsPrimaryKey, @IsUnique&#xA;END&#xA;--END WHILE&#xA;CLOSE Indexes_cursor&#xA;DEALLOCATE Indexes_cursor&#xA;&#xA;SELECT ? = @sDropAllSql&#xA;SELECT ? = @sCreateAllSql&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vSQLIndexStatement">
      <DTS:VariableValue
        DTS:DataType="8">DECLARE
@IncludeFileGroup bit = 1,
@IncludeDrop bit = 1,
@IncludeFillFactor bit = 0

DECLARE @sTableName VARCHAR(150) = ?
DECLARE @sIndexDesc varchar(MAX)
DECLARE @sCreateSql varchar(MAX)
DECLARE @sDropSql varchar(MAX)
DECLARE @sCreateAllSql varchar(MAX) = ''
DECLARE @sDropAllSql varchar(MAX) = ''

--- Get all existing indexes, but NOT the primary keys
DECLARE Indexes_cursor CURSOR
FOR SELECT
SC.Name AS SchemaName
, SO.Name AS TableName
, SI.Object_Id AS TableId
, SI.[Name] AS IndexName
, SI.Index_ID AS IndexId
, SI.type_desc AS IndexType
, FG.[Name] AS FileGroupName
, CASE WHEN SI.Fill_Factor = 0 THEN 100 ELSE SI.Fill_Factor END Fill_Factor
,SI.is_primary_key
,SI.is_unique
FROM sys.indexes SI
LEFT JOIN sys.filegroups FG
ON SI.data_space_id = FG.data_space_id
INNER JOIN sys.objects SO
ON SI.object_id = SO.object_id
INNER JOIN sys.schemas SC
ON SC.schema_id = SO.schema_id
WHERE ObjectProperty(SI.Object_Id, 'IsUserTable') = 1
AND SI.[Name] IS NOT NULL
--AND SI.is_primary_key = 0
AND SI.is_unique_constraint = 0
AND IndexProperty(SI.Object_Id, SI.[Name], 'IsStatistics') = 0
AND SC.name + '.' + SO.name = @sTableName
ORDER BY Object_name(SI.Object_Id), SI.Index_ID

DECLARE @SchemaName sysname
DECLARE @TableName sysname
DECLARE @TableId int
DECLARE @IndexType SYSNAME
DECLARE @IndexName sysname
DECLARE @FileGroupName sysname
DECLARE @IndexId int
DECLARE @FillFactor int
DECLARE @IsPrimaryKey BIT
DECLARE @IsUnique BIT

DECLARE @NewLine varchar(4000) SET @NewLine = CHAR(13) + CHAR(10)
DECLARE @Tab varchar(4000) SET @Tab = Space(4)

-- Loop through all indexes
OPEN Indexes_cursor

FETCH NEXT
FROM Indexes_cursor
INTO @SchemaName, @TableName, @TableId, @IndexName,
@IndexId, @IndexType, @FileGroupName, @FillFactor, @IsPrimaryKey, @IsUnique

WHILE (@@Fetch_Status = 0)
BEGIN

IF (@IsPrimaryKey = 0)
BEGIN
  SET @sIndexDesc = '-- Index ' + @IndexName + ' on table ' + @TableName
  SET @sDropSql = 'IF EXISTS (SELECT 1' + @NewLine
  + ' FROM sysindexes si' + @NewLine
  + ' INNER JOIN sysobjects so' + @NewLine
  + ' ON so.id = si.id' + @NewLine
  + ' WHERE si.[Name] = ''' + @IndexName + ''' -- Index Name' + @NewLine
  + ' AND so.[Name] = ''' + @TableName + ''') -- Table Name' + @NewLine
  + 'BEGIN' + @NewLine
  + ' DROP INDEX [' + @IndexName + '] ON'
  + '[' + @SchemaName + '].[' + @TableName + ']' + @NewLine
  + 'END' + @NewLine

  SET @sCreateSql = 'CREATE'

  -- Check if the index is unique
  IF (@IsUnique = 1)
  BEGIN
  SET @sCreateSql = @sCreateSql + ' UNIQUE'
  END

  -- Check if the index is clustered
  IF (@IndexType = 'CLUSTERED')
  BEGIN
  SET @sCreateSql = @sCreateSql + ' CLUSTERED'
  END


  SET @sCreateSql = @sCreateSql + ' INDEX [' + @IndexName + ']
  ON [' + @SchemaName + '].[' + @TableName + ']' + @NewLine + '(' + @NewLine
END

ELSE
BEGIN
       SET @sDropSql = 'ALTER TABLE ' + @SchemaName + '.'+ @TableName + ' DROP CONSTRAINT ' + @IndexName

       SET @sCreateSql = ''
       SET @sCreateSql = @sCreateSql + 'ALTER TABLE ' + @SchemaName + '.' + @TableName +  + ' ADD CONSTRAINT ' + @IndexName + ' PRIMARY KEY '

       IF (@IndexType = 'NONCLUSTERED')
       BEGIN
       SET @sCreateSql = @sCreateSql + ' NONCLUSTERED'
       END

       SET @sCreateSql = @sCreateSql + '(' 
END

  -- Get all columns of the index
  DECLARE IndexColumns_cursor CURSOR
  FOR SELECT SC.[Name],
  IC.[is_included_column],
  IC.is_descending_key
  FROM sys.index_columns IC
  INNER JOIN sys.columns SC
  ON IC.Object_Id = SC.Object_Id
  AND IC.Column_ID = SC.Column_ID
  WHERE IC.Object_Id = @TableId
  AND Index_ID = @IndexId
  ORDER BY IC.key_ordinal

  DECLARE @IxColumn sysname
  DECLARE @IxIncl bit
  DECLARE @Desc bit
  DECLARE @IxIsIncl bit SET @IxIsIncl = 0
  DECLARE @IxFirstColumn bit SET @IxFirstColumn = 1

  -- Loop through all columns of the index and append them to the CREATE statement
  OPEN IndexColumns_cursor
   FETCH NEXT
   FROM IndexColumns_cursor
   INTO @IxColumn, @IxIncl, @Desc

  WHILE (@@Fetch_Status = 0)
  BEGIN
   IF (@IxFirstColumn = 1)
   BEGIN
    SET @IxFirstColumn = 0
   END
   ELSE
   BEGIN
    --check to see if it's an included column
    IF (@IxIsIncl = 0) AND (@IxIncl = 1)
    BEGIN
     SET @IxIsIncl = 1
     SET @sCreateSql = @sCreateSql + @NewLine + ')' +
      @NewLine + 'INCLUDE' + @NewLine + '(' + @NewLine
    END
    ELSE
    BEGIN
     SET @sCreateSql = @sCreateSql + ',' + @NewLine
    END
    --END IF
   END
  --END IF

   SET @sCreateSql = @sCreateSql + @Tab + '[' + @IxColumn + ']'
   -- check if ASC or DESC
   IF @IxIsIncl = 0
   BEGIN
    IF @Desc = 1
    BEGIN
     SET @sCreateSql = @sCreateSql + ' DESC'
    END
    ELSE
    BEGIN
     SET @sCreateSql = @sCreateSql + ' ASC'
    END
    --END IF
   END
   --END IF
   FETCH NEXT
   FROM IndexColumns_cursor
   INTO @IxColumn, @IxIncl, @Desc
  END
  --END WHILE

  CLOSE IndexColumns_cursor
  DEALLOCATE IndexColumns_cursor

  SET @sCreateSql = @sCreateSql + @NewLine + ') '

  IF @IncludeFillFactor = 1
  BEGIN
   SET @sCreateSql = @sCreateSql + @NewLine +
   'WITH (FillFactor = ' + Cast(@FillFactor as varchar(13)) + ')' + @NewLine
  END
  --END IF

  IF @IncludeFileGroup = 1
  BEGIN
   SET @sCreateSql = @sCreateSql + 'ON ['+ @FileGroupName + ']' + @NewLine
  END
  ELSE
  BEGIN
   SET @sCreateSql = @sCreateSql + @NewLine
  END
  --END IF

  SET @sCreateAllSql = @sCreateAllSql + '
'

  SET @sDropAllSql = @sDropAllSql + '
'

  IF @IncludeDrop = 1
  BEGIN
   SET @sDropAllSql = @sDropAllSql + @sDropSql + '
'
  END

  SET @sCreateAllSql = @sCreateAllSql + @sCreateSql + '
'

  FETCH NEXT
   FROM Indexes_cursor
   INTO @SchemaName, @TableName, @TableId, @IndexName,
   @IndexId, @IndexType, @FileGroupName, @FillFactor, @IsPrimaryKey, @IsUnique
END
--END WHILE
CLOSE Indexes_cursor
DEALLOCATE Indexes_cursor

SELECT ? = @sDropAllSql
SELECT ? = @sCreateAllSql</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9F077AC2-7E28-42F4-9F1E-C72F7A4A9113}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;DECLARE @TableName      SysName&#xA;      , @TargetTableCount BIGINT&#xA;   SET  @TableName = '&quot; +@[$Project::pTargetSchema] + &quot;.&quot;+  @[$Package::pTargetTableName]  + &quot;'&#xA;&#xA;SELECT ddps.row_count as TargetTableCount&#xA;FROM sys.objects so&#xA;&#x9;JOIN sys.indexes si &#xA;&#x9;&#x9;ON si.OBJECT_ID = so.OBJECT_ID&#xA;&#x9;JOIN sys.dm_db_partition_stats AS ddps &#xA;&#x9;&#x9;ON si.OBJECT_ID = ddps.OBJECT_ID  AND si.index_id = ddps.index_id&#xA;WHERE so.object_id = OBJECT_ID(@TableName)&#xA;AND si.index_id &lt; 2  &#xA;AND so.is_ms_shipped = 0; &quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vSQLInitIncrStatement">
      <DTS:VariableValue
        DTS:DataType="8">DECLARE @TableName      SysName
      , @TargetTableCount BIGINT
   SET  @TableName = 'ln.ItemSubcontractingRates'

SELECT ddps.row_count as TargetTableCount
FROM sys.objects so
	JOIN sys.indexes si 
		ON si.OBJECT_ID = so.OBJECT_ID
	JOIN sys.dm_db_partition_stats AS ddps 
		ON si.OBJECT_ID = ddps.OBJECT_ID  AND si.index_id = ddps.index_id
WHERE so.object_id = OBJECT_ID(@TableName)
AND si.index_id &lt; 2  
AND so.is_ms_shipped = 0; </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2756A6CB-E107-40BE-8199-E3C07AE2C1B7}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vSQLSelectToDestinationTable"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D33B30D2-C1CF-4805-B694-BDF7929DA235}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;&#xA;SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED; &#xA;&#xA; SELECT &#xA;ltrim(rtrim(t_item)) as&#x9;ProductID&#xA;,t_cpcc&#x9;as&#x9;PriceCalculationCode&#xA;,t_bpid&#x9;as&#x9;SubcontractorID&#xA;,t_scrt&#x9;as&#x9;SubcontractingRate&#xA;,t_cpcp&#x9;as&#x9;CostComponent  FROM &quot;+@[User::vSourceTableName]+&quot;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vSQLSourceStatement">
      <DTS:VariableValue
        DTS:DataType="8">
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED; 

 SELECT 
ltrim(rtrim(t_item)) as	ProductID
,t_cpcc	as	PriceCalculationCode
,t_bpid	as	SubcontractorID
,t_scrt	as	SubcontractingRate
,t_cpcp	as	CostComponent  FROM [ln].[tticpr160711]</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{78C2DCEC-907F-4459-9922-EE519A9FE710}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;TRUNCATE TABLE&quot; +&quot; &quot;+   @[User::vSchemaTableName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vSQLTruncateTargetTable">
      <DTS:VariableValue
        DTS:DataType="8">TRUNCATE TABLE [ln].[ItemSubcontractingRates]</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{78AF0E8C-BA53-440A-8BD1-70EE479F2BA7}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vSQLUpdateETLAuditColumn"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="8">InsertedDate</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1F17A673-BF21-4652-80AB-768AD9E4DBB8}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;DECLARE @LastRecordsProcessedOnDate DATETIME&#xA;DECLARE @InsertTotalRowCounts INT&#xA;DECLARE @UpdatedTotalRowCounts INT&#xA;DECLARE @TotalRows INT&#xA;&#xA;SET @InsertTotalRowCounts = ?&#xA;SET @UpdatedTotalRowCounts = ?&#xA;SET @TotalRows = @InsertTotalRowCounts + @UpdatedTotalRowCounts&#xA;&#xA;SELECT @LastRecordsProcessedOnDate = ( SELECT  DATEADD(dd, -1, MAX(&quot;+ @[User::vSQLUpdateETLAuditColumn] +&quot;))&#xA;FROM  &quot;+@[$Project::pTargetDatabase]+&quot;.&quot; +@[User::vSchemaTableName]+&quot;&#xA;WHERE&quot;+&quot; &quot;+@[User::vSQLUpdateETLAuditColumn] + &quot;&lt; GETDATE())&#xA;&#xA;IF @TotalRows &gt; 0&#xA;&#xA;BEGIN&#xA;&#xA;  UPDATE [Audit].[Job] &#xA;  SET  LastRunStartDate = ?,&#xA;  LastRunEndDate = GETDATE(), &#xA;  ExpectedRunTimeNUMBER = DATEDIFF(MS, ?, GETDATE()),&#xA;  JobLastStatus = 'Pass',&#xA;  LastRecordsProcessedDate = @LastRecordsProcessedOnDate&#xA; WHERE JobID = ?&#xA;&#xA;END&#xA;ELSE&#xA;BEGIN &#xA;&#xA;  UPDATE [Audit].[Job] &#xA;  SET  LastRunStartDate = ?,&#xA;  LastRunEndDate = GETDATE(), &#xA;  ExpectedRunTimeNUMBER = DATEDIFF(MS, ?, GETDATE()),&#xA;  JobLastStatus = 'Pass'&#xA;  WHERE JobID = ?&#xA;&#xA;&#xA;END&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vSQLUpdateETLAuditTable">
      <DTS:VariableValue
        DTS:DataType="8">DECLARE @LastRecordsProcessedOnDate DATETIME
DECLARE @InsertTotalRowCounts INT
DECLARE @UpdatedTotalRowCounts INT
DECLARE @TotalRows INT

SET @InsertTotalRowCounts = ?
SET @UpdatedTotalRowCounts = ?
SET @TotalRows = @InsertTotalRowCounts + @UpdatedTotalRowCounts

SELECT @LastRecordsProcessedOnDate = ( SELECT  DATEADD(dd, -1, MAX(InsertedDate))
FROM  EDW_STAGE.[ln].[ItemSubcontractingRates]
WHERE InsertedDate&lt; GETDATE())

IF @TotalRows &gt; 0

BEGIN

  UPDATE [Audit].[Job] 
  SET  LastRunStartDate = ?,
  LastRunEndDate = GETDATE(), 
  ExpectedRunTimeNUMBER = DATEDIFF(MS, ?, GETDATE()),
  JobLastStatus = 'Pass',
  LastRecordsProcessedDate = @LastRecordsProcessedOnDate
 WHERE JobID = ?

END
ELSE
BEGIN 

  UPDATE [Audit].[Job] 
  SET  LastRunStartDate = ?,
  LastRunEndDate = GETDATE(), 
  ExpectedRunTimeNUMBER = DATEDIFF(MS, ?, GETDATE()),
  JobLastStatus = 'Pass'
  WHERE JobID = ?


END</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9EAE5BCB-9ABF-425B-BE7C-90D9C4A134AF}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vTargetTableCount"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D5E9DBA9-B6F7-443C-9B8B-CC9E8C0C1BD8}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vUpdatedTotalRowCount"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">7,22,PipelineInitialization,18,OnPipelineRowsSent,24,OnPipelinePrePrimeOutput,25,OnPipelinePostPrimeOutput,24,OnPipelinePreEndOfRowset,25,OnPipelinePostEndOfRowset,7,OnError</DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">0</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">0</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePostEndOfRowset"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">0</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">0</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePostPrimeOutput"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">0</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">0</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePreEndOfRowset"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">0</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">0</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePrePrimeOutput"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">0</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">0</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelineRowsSent"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">0</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">0</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="PipelineInitialization"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">0</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">0</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">0</DTS:Property>
    </DTS:Property>
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{23DA32D1-B8B1-4296-8265-145F4753F409}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Completion (Audit)"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{D8338AD4-A9F0-4BC3-9FE6-F2FA818B59B0}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Completion (Audit)">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Completion (Audit)\Mark Job As Complete in Job"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{28D1D8BD-2B62-495F-9123-2C95713953C0}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Mark Job As Complete in Job"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">@[User::vSQLUpdateETLAuditTable]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{FD4092C7-1531-4C59-8065-369CAD340586}"
              SQLTask:BypassPrepare="False"
              SQLTask:SqlStatementSource="DECLARE @LastRecordsProcessedOnDate DATETIME&#xA;DECLARE @InsertTotalRowCounts INT&#xA;DECLARE @UpdatedTotalRowCounts INT&#xA;DECLARE @TotalRows INT&#xA;&#xA;SET @InsertTotalRowCounts = ?&#xA;SET @UpdatedTotalRowCounts = ?&#xA;SET @TotalRows = @InsertTotalRowCounts + @UpdatedTotalRowCounts&#xA;&#xA;SELECT @LastRecordsProcessedOnDate = ( SELECT  DATEADD(dd, -1, MAX(InsertedDate))&#xA;FROM  EDW_STAGE.[ln].[ItemSubcontractingRates]&#xA;WHERE InsertedDate&lt; GETDATE())&#xA;&#xA;IF @TotalRows &gt; 0&#xA;&#xA;BEGIN&#xA;&#xA;  UPDATE [Audit].[Job] &#xA;  SET  LastRunStartDate = ?,&#xA;  LastRunEndDate = GETDATE(), &#xA;  ExpectedRunTimeNUMBER = DATEDIFF(MS, ?, GETDATE()),&#xA;  JobLastStatus = 'Pass',&#xA;  LastRecordsProcessedDate = @LastRecordsProcessedOnDate&#xA; WHERE JobID = ?&#xA;&#xA;END&#xA;ELSE&#xA;BEGIN &#xA;&#xA;  UPDATE [Audit].[Job] &#xA;  SET  LastRunStartDate = ?,&#xA;  LastRunEndDate = GETDATE(), &#xA;  ExpectedRunTimeNUMBER = DATEDIFF(MS, ?, GETDATE()),&#xA;  JobLastStatus = 'Pass'&#xA;  WHERE JobID = ?&#xA;&#xA;&#xA;END" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::vPackageStartDate"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="133"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::vPackageStartDate"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="133"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="User::vCurJobID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::vInsertedTotalRowCount"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::vUpdatedTotalRowCount"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="5"
                SQLTask:DtsVariableName="User::vPackageStartDate"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="133"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="6"
                SQLTask:DtsVariableName="User::vPackageStartDate"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="133"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="7"
                SQLTask:DtsVariableName="User::vCurJobID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Completion (Audit)\Mark Job as Complete in JobInstance"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{D47138FD-323D-4EB4-9892-5A413EC7E65F}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Mark Job as Complete in JobInstance"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="3">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{FD4092C7-1531-4C59-8065-369CAD340586}"
              SQLTask:SqlStatementSource="EXEC [Audit].[logJobInstance] &#xA;@JobInstanceID = ?,&#xA;@RowCreatedNumber = ?, &#xA;@RowUpdatedNumber = ?, &#xA;@RowDeletedNumber = ?, &#xA;@RowRejectedNumber=?, &#xA;@JobSuccessIND = 'S',&#xA;@JobCompleteDTS = 'Today';" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::vCurJobInstanceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::vInsertedTotalRowCount"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::vUpdatedTotalRowCount"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::vDeletedTotalRowCount"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="User::vRejectedTotalRowCount"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Determine IF Init vs Incr Load"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{F7CEB591-830C-4F8C-97AD-855DD44C9372}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Determine IF Init vs Incr Load"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:PropertyExpression
        DTS:Name="SqlStatementSource">@[User::vSQLInitIncrStatement]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{5F69345A-6239-4B64-9810-DB26DB7308B6}"
          SQLTask:SqlStatementSource="DECLARE @TableName      SysName&#xA;      , @TargetTableCount BIGINT&#xA;   SET  @TableName = 'ln.ItemSubcontractingRates'&#xA;&#xA;SELECT ddps.row_count as TargetTableCount&#xA;FROM sys.objects so&#xA;&#x9;JOIN sys.indexes si &#xA;&#x9;&#x9;ON si.OBJECT_ID = so.OBJECT_ID&#xA;&#x9;JOIN sys.dm_db_partition_stats AS ddps &#xA;&#x9;&#x9;ON si.OBJECT_ID = ddps.OBJECT_ID  AND si.index_id = ddps.index_id&#xA;WHERE so.object_id = OBJECT_ID(@TableName)&#xA;AND si.index_id &lt; 2  &#xA;AND so.is_ms_shipped = 0; "
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="TargetTableCount"
            SQLTask:DtsVariableName="User::vTargetTableCount" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get LastRecordsProcessedDate For Package"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{02D7A30A-BD02-4412-8E2A-940C75744B77}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get LastRecordsProcessedDate For Package"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:PropertyExpression
        DTS:Name="SqlStatementSource">@[User::vSQLGetLastRecordProcessedDate]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{FD4092C7-1531-4C59-8065-369CAD340586}"
          SQLTask:SqlStatementSource="DECLARE @LastRecordsProcessedDate DATETIME&#xA;&#xA;SELECT @LastRecordsProcessedDate = ISNULL(LastRecordsProcessedDate, '1900-01-01')&#xA; FROM Audit.Job&#xA;WHERE JobID = ?&#xA;&#xA;SELECT @LastRecordsProcessedDate AS [LastRecordsProcessedDate]"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="LastRecordsProcessedDate"
            SQLTask:DtsVariableName="User::vLastRecordsProcessedDate" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::vCurJobID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Incremental Load from EDW_STAGE  to Subcontracting"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{48F39B7A-DA1F-45EE-8F16-1EA00FDFEFE2}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Incremental Load from EDW_STAGE  to Subcontracting">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{14C07471-43F3-468E-85B1-49B3D7799974}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Incremental Load"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="BLOBTempStoragePath">@[$Project::pBLOBTempStoragePath]</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="BufferTempStoragePath">@[$Project::pBufferTempStoragePath]</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="DefaultBufferMaxRows">@[$Package::pDefaultBufferMaxRows]</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="DefaultBufferSize">@[$Package::pDefaultBufferSize]</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="EngineThreads">@[$Package::pEngineThreads]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <pipeline
              BLOBTempStoragePath=""
              bufferTempStoragePath=""
              defaultBufferMaxRows="47800"
              defaultBufferSize="104857600"
              engineThreads="4"
              version="1">
              <components>
                <component
                  refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Add JobInstance Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Add JobInstance Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Add JobInstance Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Add JobInstance Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Add JobInstance Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Add JobInstance Column.Outputs[Derived Column Output].Columns[JobInstanceID]"
                          dataType="i8"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Add JobInstance Column.Outputs[Derived Column Output].Columns[JobInstanceID]"
                          name="JobInstanceID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::vCurJobInstanceID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::vCurJobInstanceID]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Add JobInstance Column.Outputs[Derived Column Output].Columns[RowNumber]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Add JobInstance Column.Outputs[Derived Column Output].Columns[RowNumber]"
                          name="RowNumber"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">1</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">1</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Add JobInstance Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Add JobInstance Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Add JobInstance Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Add JobInstance Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Add JobInstance Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Add JobInstance Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Concatenate Rejected Columns"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Concatenate Rejected Columns"
                  version="10">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_85d61d00bc4f45c3ae19dc27da6e7c9d")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Microsoft")]
[assembly: AssemblyProduct("SC_85d61d00bc4f45c3ae19dc27da6e7c9d")]
[assembly: AssemblyCopyright("Copyright @ Microsoft 2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using Microsoft.SqlServer.Dts.Pipeline;
using System.Text;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private int ColumnCount;
    private ColumnClass[] ColumnNameArray;
    private PipelineBuffer inputBuffer;


    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    private class ColumnClass
    {
        public int Index;
        public string Name;
    }

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */



        ColumnCount = ComponentMetaData.InputCollection[0].InputColumnCollection.Count;
        ColumnNameArray = new ColumnClass[ColumnCount];

        int[] ColumnIndexes = GetColumnIndexes(ComponentMetaData.InputCollection[0].ID);
        int columnIndex = 0;

        foreach (IDTSInputColumn100 item in ComponentMetaData.InputCollection[0].InputColumnCollection)
        {
            ColumnNameArray[columnIndex] = new ColumnClass();
            ColumnNameArray[columnIndex].Name = Convert.ToString(item.Name);
            ColumnNameArray[columnIndex].Index = ColumnIndexes[ComponentMetaData.InputCollection[0].InputColumnCollection.GetObjectIndexByID(item.ID)];
            columnIndex++;
        }

        Array.Sort(
            ColumnNameArray,
            delegate(ColumnClass column1, ColumnClass column2)
            { return column1.Index.CompareTo(column2.Index); }
        );

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>

    public override void ProcessInput(int InputID, Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer Buffer)
    {
        inputBuffer = Buffer;

        base.ProcessInput(InputID, Buffer);
    }


    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        StringBuilder RawDataTEXT = new StringBuilder(ColumnCount);

        for (int columnIndex = 0; columnIndex < ColumnCount; columnIndex++)
        {
            RawDataTEXT.Append(ColumnNameArray[columnIndex].Name + "=");
            RawDataTEXT.Append(Convert.ToString(inputBuffer[ColumnNameArray[columnIndex].Index]));
            RawDataTEXT.Append(";");
        }

        Row.RawDataTEXT.AddBlobData(System.Text.Encoding.GetEncoding(1252).GetBytes(RawDataTEXT.ToString()));

    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_85d61d00bc4f45c3ae19dc27da6e7c9d.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{FB578575-549C-4EF3-9DE6-510E3B65E42F}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_85d61d00bc4f45c3ae19dc27da6e7c9d</RootNamespace>
    <AssemblyName>SC_BD5A56A4BDD24C0DBD21067CA1904F10</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 EODErrorCode
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[0]);
        }
    }
    public bool EODErrorCode_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Int32 EODErrorColumn
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[1]);
        }
    }
    public bool EODErrorColumn_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String EODErrorDescription
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool EODErrorDescription_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String EODComponentName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool EODComponentName_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String EODColumnName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool EODColumnName_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public BlobColumn RawDataTEXT
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[5]];
        }
        set
        {
            this[5] = value;
        }
    }
    public bool RawDataTEXT_IsNull
    {
        get
        {
            return IsNull(5);
        }
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_85d61d00bc4f45c3ae19dc27da6e7c9d</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_85d61d00bc4f45c3ae19dc27da6e7c9d</msb:DisplayName>
		<msb:ProjectId>{EF69312D-0AFC-4447-9B28-48183FFCB7B3}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_85d61d00bc4f45c3ae19dc27da6e7c9d.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_85d61d00bc4f45c3ae19dc27da6e7c9d.Properties.Settings.get_Default():SC_85d61d00bc4f45c3ae19dc27da6e7c9d.Properties.Sett" +
    "ings")]

namespace SC_85d61d00bc4f45c3ae19dc27da6e7c9d.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_85d61d00bc4f45c3ae19dc27da6e7c9d.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_85d61d00bc4f45c3ae19dc27da6e7c9d.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_85d61d00bc4f45c3ae19dc27da6e7c9d.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_85d61d00bc4f45c3ae19dc27da6e7c9d.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_85d61d00bc4f45c3ae19dc27da6e7c9d.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_BD5A56A4BDD24C0DBD21067CA1904F10.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
YwERAAEkAAAAAJMICgJoAREACCQAAAAAkwgWAm0BEQAQJAAAAACWCJsIcwESABckAAAAAIYYPAcG
ABIAHyQAAAAAkRhCB3gBEgDNIwAAAACGGDwHBgASACskAAAAAJEYQgd4ARIAzSMAAAAAhhg8BwYA
EgA3JAAAAACDAJsAfAESAAAAAQDoAAAAAgDeBgAAAQCGCQAAAQDeBgAAAgAhCAAAAwB0BgAAAQAc
BAAAAQAcBAAAAQDoAAAAAgDaAQAAAwDeBgAABAB0BgAAAQDeBgAAAQCGCQAAAQDLCAAAAQDLCAAA
AQAcBAAAAQC7AAAAAgDMAAkAPAcBABEAPAcGABkAPAcKACkAPAcQADEAPAcQADkAPAcQAEEAPAcQ
AEkAPAcQAFEAPAcQAFkAPAcQAGEAPAcQAGkAPAcGAKEAPAcGANEAPAcGAPEAPAcVAMkABQQGAMkA
IwEnAAEB+QUtAAkBVQUzABkB3wU6ACEB4QhAABkB4QBAAMkANQhEACEBLgdKAHkA1QhPAIEAqgFT
ACkBSARXAIEA4QBAACEB8ABcAHkAVglhAIkASgIGAAwAPAdsADEBHAlyAMkAEAQGAMkASQmFAJEA
PAcBADkBgQiSAJEAUgGYAHEAVQWeACkBSASjAEEBIgSoAJkASARTAEEBGAivAMEAOQG1ALEAPAe7
ALEA3gbFALEAIQjJAHEAwwBcALEARgXNAHEAUQTSALEAXgXXALEATQUBAEkBPAcQALEAgglhALEA
jwhhAMkAPAcGADkBTwjdAJkAPAcGAFkBmAHlAFkBoAnuANkAPAf0APkAPAcGABEBUAZcAC4ACwCk
AS4AEwCtAS4AGwDMAS4AIwDVAS4AKwD+AS4AMwD+AS4AOwAEAi4AQwDVAS4ASwATAi4AUwD+AS4A
WwAzAkMAYwB9AuMAcwB9AkEBawB9AkMBawB9AqkBewDMAckBewDMARsAjAADAAEABwANAAgADwAA
AG0BhAEAAMsEiAEAAJQFhAEAABgFiAEAACsGjAEAADIFiAEAAMkBjAEAAPwEiAEAALcBjAEAAOME
iAEAABcBkAEAALQEiAEAAOkGlQEAACoCmgEAAJ8InwECAAcAAwACAAgABQACAAkABwACAAoACQAC
AAsACwACAAwADQACAA0ADwACAA4AEQACAA8AEwACABAAFQACABEAFwABABIAFwACABMAGQABABQA
GQACAB4AGwACAB8AHQABACAAHQACACEAHwBlAASAAAABAAAAAAAAAAAAAAAAAG4AAAAEAAAAAAAA
AAAAAAD8AEUBAAAAAA0AAAAAAAAAAAAAAAUB9wgAAAAADQAAAAAAAAAAAAAABQEhCQAAAAANAAAA
AAAAAAAAAAAFAX4GAAAAAAQAAAAAAAAAAAAAAPwAZwUAAAAAAAAAAAEAAACNBwAACQACAAoAAgBD
AIAAAAAASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAElEVFNJbnB1dENvbHVtbjEwMABJRFRTSW5w
dXRDb2x1bW5Db2xsZWN0aW9uMTAwAElEVFNJbnB1dENvbGxlY3Rpb24xMDAASURUU0lucHV0MTAw
AFNDX0JENUE1NkE0QkREMjRDMERCRDIxMDY3Q0ExOTA0RjEwADw+OV9fNF8wADxQcmVFeGVjdXRl
PmJfXzRfMABDb21wYXJpc29uYDEAY29sdW1uMQBHZXRJbnQzMgBjb2x1bW4yADw+OQA8TW9kdWxl
PgBnZXRfSUQASW5wdXRJRABHZXRPYmplY3RJbmRleEJ5SUQAZ2V0X1Jhd0RhdGFURVhUAHNldF9S
YXdEYXRhVEVYVABnZXRfQ29tcG9uZW50TWV0YURhdGEAQWRkQmxvYkRhdGEAbXNjb3JsaWIAPD5j
AEFwcGVuZABkZWZhdWx0SW5zdGFuY2UAZ2V0X0VPREVycm9yQ29kZQBJRGlzcG9zYWJsZQBSdW50
aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBnZXRfTmFtZQBnZXRfRU9EQ29sdW1uTmFt
ZQBnZXRfRU9EQ29tcG9uZW50TmFtZQBJbnB1dE5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMu
UGlwZWxpbmUAVHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBw
bGljYXRpb25TZXR0aW5nc0Jhc2UARGlzcG9zZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxl
ckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2Fi
bGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1
dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFz
c2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRl
AENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRl
AEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50
QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0
dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHZhbHVlAEdldEVuY29kaW5nAFN5c3RlbS5S
dW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcAR2V0U3RyaW5nAFN5c3RlbS5Db21wb25lbnRNb2Rl
bABTQ19CRDVBNTZBNEJERDI0QzBEQkQyMTA2N0NBMTkwNEYxMC5kbGwAZ2V0X1Jhd0RhdGFURVhU
X0lzTnVsbABzZXRfUmF3RGF0YVRFWFRfSXNOdWxsAGdldF9FT0RFcnJvckNvZGVfSXNOdWxsAGdl
dF9FT0RDb2x1bW5OYW1lX0lzTnVsbABnZXRfRU9EQ29tcG9uZW50TmFtZV9Jc051bGwAZ2V0X0VP
REVycm9yQ29sdW1uX0lzTnVsbABnZXRfRU9ERXJyb3JEZXNjcmlwdGlvbl9Jc051bGwAU2V0TnVs
bABnZXRfSXRlbQBzZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBCbG9iQ29s
dW1uAGdldF9FT0RFcnJvckNvbHVtbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFs
aXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBnZXRfSW5wdXRDb2x1bW5Db2xsZWN0aW9uAGdldF9J
bnB1dENvbGxlY3Rpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBnZXRfRU9ERXJyb3JEZXNj
cmlwdGlvbgBTdHJpbmdDb21wYXJpc29uAENvbXBhcmVUbwBDdWx0dXJlSW5mbwBPdXRwdXROYW1l
TWFwAE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1BpcGVsaW5lV3JhcABTdHJpbmdC
dWlsZGVyAElucHV0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAaW5wdXRCdWZm
ZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZS5X
cmFwcGVyAElFbnVtZXJhdG9yAEdldEVudW1lcmF0b3IALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFn
bm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMA
U0NfODVkNjFkMDBiYzRmNDVjM2FlMTlkYzI3ZGE2ZTdjOWQuUHJvcGVydGllcy5SZXNvdXJjZXMu
cmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDXzg1ZDYxZDAwYmM0ZjQ1YzNhZTE5ZGMyN2RhNmU3
YzlkLlByb3BlcnRpZXMAVmFyaWFibGVzAEdldEJ5dGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0
Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBFcXVhbHMAU3lzdGVtLkNvbGxlY3Rpb25zAENvbm5lY3Rp
b25zAENvbHVtbkNsYXNzAENvbmNhdABPYmplY3QARW5kT2ZSb3dzZXQAZ2V0X0RlZmF1bHQAVXNl
ckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AGdldF9DdXJyZW50AGdl
dF9Db3VudABDb2x1bW5Db3VudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AENvbnZlcnQA
U29ydABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lucHV0
AE1vdmVOZXh0AFN5c3RlbS5UZXh0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cATmV4dFJvdwBJbmRl
eABDb2x1bW5OYW1lQXJyYXkAZ2V0X0Fzc2VtYmx5AAAAAAADPQAAAzsAAICbSQBzAE4AdQBsAGwA
IABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBh
AGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMA
bwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAPSQBuAHAAdQB0ACAAMAAAcVMAQwBfADgANQBk
ADYAMQBkADAAMABiAGMANABmADQANQBjADMAYQBlADEAOQBkAGMAMgA3AGQAYQA2AGUANwBjADkA
ZAAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAA9CmSV/1sgECMI/Vk
fZNdNAAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERdQsHBR0ICBI9EkESRQUgABKAgQUgABKAhQYg
ARKAjRwFIAASgJEDIAAIBSABHQgIBCAAEj0DIAAcAyAADgQAAQ4OBCABCAgDIAACBhUSVQESJAUg
AgEcGA0QAQIBHR4AFRJVAR4ABAoBEiQGIAIBCBI5BQcCEkkIBQACDg4OBSABEkkOBCABHAgEAAEO
HAYAARKAoQgFIAEdBQ4FIAEBHQUJIAMBEjkdCBJdAwYSOQMGHQgEIAECCAQgAQ4IBSACAQgcByAC
Ag4RgKkIAAESgK0RgLEFIAASgLUHIAIBDhKAtQi3elxWGTTgiQiJhF3NgIDMkQIGCAQGHRIkAwYS
FAMGEhgDBhJlAwYSbQMGEnEDBhIgAgYOAwYSKAcGFRJVARIkBSABARIMBCAAEmEFIAEBEmEEIAEB
AgkgBAEIDhI5El0FIAEBEmUEAAASbQQAABJxBQABARJxBAAAEiADAAABByACCBIkEiQDKAAIAygA
AgMoAA4EKAASYQQIABJtBAgAEnEECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlv
blRocm93cwEIAQACAAAAAAAoAQAjU0NfODVkNjFkMDBiYzRmNDVjM2FlMTlkYzI3ZGE2ZTdjOWQA
AAUBAAAAAA4BAAlNaWNyb3NvZnQAAB8BABpDb3B5cmlnaHQgQCBNaWNyb3NvZnQgMjAxNgAASQEA
Gi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVU
IEZyYW1ld29yayA0LjUEAQAAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJl
c291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWws
IFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1l
UmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAADw7AAAAAAAAAAAAAFY7AAAAIAAAAAAA
AAAAAAAAAAAAAAAAAAAAAABIOwAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAA
AAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAABAEAAAAAAAAAAAAABAENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsARwAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABMAwAAAQAwADAAMAAwADAA
NABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAANAAKAAEAQwBvAG0AcABhAG4AeQBO
AGEAbQBlAAAAAABNAGkAYwByAG8AcwBvAGYAdAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkA
cAB0AGkAbwBuAAAAAABTAEMAXwA4ADUAZAA2ADEAZAAwADAAYgBjADQAZgA0ADUAYwAzAGEAZQAx
ADkAZABjADIANwBkAGEANgBlADcAYwA5AGQAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4A
AAAAADEALgAwAC4AMAAuADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBf
AEIARAA1AEEANQA2AEEANABCAEQARAAyADQAQwAwAEQAQgBEADIAMQAwADYANwBDAEEAMQA5ADAA
NABGADEAMAAuAGQAbABsAAAAWgAbAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBv
AHAAeQByAGkAZwBoAHQAIABAACAATQBpAGMAcgBvAHMAbwBmAHQAIAAyADAAMQA2AAAAAAAqAAEA
AQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBu
AGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwBCAEQANQBBADUANgBBADQAQgBEAEQAMgA0AEMA
MABEAEIARAAyADEAMAA2ADcAQwBBADEAOQAwADQARgAxADAALgBkAGwAbAAAAGgAJAABAFAAcgBv
AGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AOAA1AGQANgAxAGQAMAAwAGIAYwA0AGYANAA1AGMA
MwBhAGUAMQA5AGQAYwAyADcAZABhADYAZQA3AGMAOQBkAAAANAAIAAEAUAByAG8AZAB1AGMAdABW
AGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYA
ZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAABoOwAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_bd5a56a4bdd24c0dbd21067ca1904f10</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">89</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">cb3ccb5272f9f925679b45bc3fddd3b50e2a8339</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">9e9152f2114713771ef9ee9335d9d931</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Concatenate Rejected Columns.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Concatenate Rejected Columns.Inputs[Input 0].Columns[EOD_ErrorCode]"
                          cachedDataType="i4"
                          cachedName="EOD_ErrorCode"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Error Output Description.Outputs[Error Description Output].Columns[EOD_ErrorCode]" />
                        <inputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Concatenate Rejected Columns.Inputs[Input 0].Columns[EOD_ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="EOD_ErrorColumn"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Error Output Description.Outputs[Error Description Output].Columns[EOD_ErrorColumn]" />
                        <inputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Concatenate Rejected Columns.Inputs[Input 0].Columns[EOD_ErrorDescription]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="EOD_ErrorDescription"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Error Output Description.Outputs[Error Description Output].Columns[EOD_ErrorDescription]" />
                        <inputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Concatenate Rejected Columns.Inputs[Input 0].Columns[EOD_ComponentName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="EOD_ComponentName"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Error Output Description.Outputs[Error Description Output].Columns[EOD_ComponentName]" />
                        <inputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Concatenate Rejected Columns.Inputs[Input 0].Columns[EOD_ColumnName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="EOD_ColumnName"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Error Output Description.Outputs[Error Description Output].Columns[EOD_ColumnName]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Concatenate Rejected Columns.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Concatenate Rejected Columns.Inputs[Input 0]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Concatenate Rejected Columns.Outputs[Output 0].Columns[RawDataTEXT]"
                          codePage="1252"
                          dataType="text"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Concatenate Rejected Columns.Outputs[Output 0].Columns[RawDataTEXT]"
                          name="RawDataTEXT" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\DEST Insert Redirected or Rejected Rows to Exception Table"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="SSISOps : DON'T CHANGE PREFIX. "
                  name="DEST Insert Redirected or Rejected Rows to Exception Table">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::varSSISOps_14C0747143F3468E85B149B3D7799974_RowCount_1</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\DEST Insert Redirected or Rejected Rows to Exception Table.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\DEST Insert Redirected or Rejected Rows to Exception Table.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\DEST Insert Redirected or Rejected Rows to Exception Table.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\DEST TF Upsert Destination"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="SSISOps : DON'T CHANGE PREFIX. "
                  name="DEST TF Upsert Destination">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::varSSISOps_14C0747143F3468E85B149B3D7799974_RowCount_3</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\DEST TF Upsert Destination.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\DEST TF Upsert Destination.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\DEST TF Upsert Destination.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Get Total Inserted Records Row Count"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Get Total Inserted Records Row Count">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::vInsertedTotalRowCount</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Get Total Inserted Records Row Count.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Get Total Inserted Records Row Count.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Get Total Inserted Records Row Count.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Insert Redirected or Rejected Rows to Exception Table"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Insert Redirected or Rejected Rows to Exception Table"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Audit].[ExceptionData]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable">User::vSchemaExceptionTable</property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">4</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">ROWS_PER_BATCH = 50000</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Insert Redirected or Rejected Rows to Exception Table.Connections[OleDbConnection]"
                      connectionManagerID="{FD4092C7-1531-4C59-8065-369CAD340586}:external"
                      connectionManagerRefId="Project.ConnectionManagers[OLEDB_ETLAudit]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Insert Redirected or Rejected Rows to Exception Table.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Insert Redirected or Rejected Rows to Exception Table.Inputs[OLE DB Destination Input].Columns[RawDataTEXT]"
                          cachedCodepage="1252"
                          cachedDataType="text"
                          cachedName="RawDataTEXT"
                          externalMetadataColumnId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Insert Redirected or Rejected Rows to Exception Table.Inputs[OLE DB Destination Input].ExternalColumns[RawDataTEXT]"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Concatenate Rejected Columns.Outputs[Output 0].Columns[RawDataTEXT]" />
                        <inputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Insert Redirected or Rejected Rows to Exception Table.Inputs[OLE DB Destination Input].Columns[JobInstanceID]"
                          cachedDataType="i8"
                          cachedName="JobInstanceID"
                          externalMetadataColumnId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Insert Redirected or Rejected Rows to Exception Table.Inputs[OLE DB Destination Input].ExternalColumns[JobInstanceID]"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Add JobInstance Column.Outputs[Derived Column Output].Columns[JobInstanceID]" />
                        <inputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Insert Redirected or Rejected Rows to Exception Table.Inputs[OLE DB Destination Input].Columns[RowNumber]"
                          cachedDataType="i4"
                          cachedName="RowNumber"
                          externalMetadataColumnId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Insert Redirected or Rejected Rows to Exception Table.Inputs[OLE DB Destination Input].ExternalColumns[RowNumber]"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Add JobInstance Column.Outputs[Derived Column Output].Columns[RowNumber]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Insert Redirected or Rejected Rows to Exception Table.Inputs[OLE DB Destination Input].ExternalColumns[ExceptionDataID]"
                          dataType="i8"
                          name="ExceptionDataID" />
                        <externalMetadataColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Insert Redirected or Rejected Rows to Exception Table.Inputs[OLE DB Destination Input].ExternalColumns[JobInstanceID]"
                          dataType="i8"
                          name="JobInstanceID" />
                        <externalMetadataColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Insert Redirected or Rejected Rows to Exception Table.Inputs[OLE DB Destination Input].ExternalColumns[RowNumber]"
                          dataType="i4"
                          name="RowNumber" />
                        <externalMetadataColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Insert Redirected or Rejected Rows to Exception Table.Inputs[OLE DB Destination Input].ExternalColumns[RawDataTEXT]"
                          codePage="1252"
                          dataType="text"
                          name="RawDataTEXT" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Insert Redirected or Rejected Rows to Exception Table.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Insert Redirected or Rejected Rows to Exception Table.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Insert Redirected or Rejected Rows to Exception Table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Insert Redirected or Rejected Rows to Exception Table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Insert Redirected or Rejected Rows to Exception Table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Insert Redirected or Rejected Rows to Exception Table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="OLE DB Source"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable">User::vSQLSourceStatement</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Connections[OleDbConnection]"
                      connectionManagerID="{B28FC9A3-71B7-4CAF-ADD6-6092997A5FBB}:external"
                      connectionManagerRefId="Project.ConnectionManagers[OLEDB_Source]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Output].Columns[ProductID]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ProductID]"
                          length="47"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Output].Columns[ProductID]"
                          name="ProductID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Output].Columns[PriceCalculationCode]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[PriceCalculationCode]"
                          length="3"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Output].Columns[PriceCalculationCode]"
                          name="PriceCalculationCode"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Output].Columns[SubcontractorID]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SubcontractorID]"
                          length="9"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Output].Columns[SubcontractorID]"
                          name="SubcontractorID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Output].Columns[SubcontractingRate]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SubcontractingRate]"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Output].Columns[SubcontractingRate]"
                          name="SubcontractingRate"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Output].Columns[CostComponent]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CostComponent]"
                          length="8"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Output].Columns[CostComponent]"
                          name="CostComponent"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ProductID]"
                          dataType="wstr"
                          length="47"
                          name="ProductID" />
                        <externalMetadataColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[PriceCalculationCode]"
                          dataType="wstr"
                          length="3"
                          name="PriceCalculationCode" />
                        <externalMetadataColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SubcontractorID]"
                          dataType="wstr"
                          length="9"
                          name="SubcontractorID" />
                        <externalMetadataColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SubcontractingRate]"
                          dataType="r8"
                          name="SubcontractingRate" />
                        <externalMetadataColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CostComponent]"
                          dataType="wstr"
                          length="8"
                          name="CostComponent" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ProductID]"
                          dataType="wstr"
                          length="47"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ProductID]"
                          name="ProductID" />
                        <outputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[PriceCalculationCode]"
                          dataType="wstr"
                          length="3"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[PriceCalculationCode]"
                          name="PriceCalculationCode" />
                        <outputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SubcontractorID]"
                          dataType="wstr"
                          length="9"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SubcontractorID]"
                          name="SubcontractorID" />
                        <outputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SubcontractingRate]"
                          dataType="r8"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SubcontractingRate]"
                          name="SubcontractingRate" />
                        <outputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CostComponent]"
                          dataType="wstr"
                          length="8"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CostComponent]"
                          name="CostComponent" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\RowCount - Get TotalRejectedRows"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="RowCount - Get TotalRejectedRows">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::vRejectedTotalRowCount</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\RowCount - Get TotalRejectedRows.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\RowCount - Get TotalRejectedRows.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\RowCount - Get TotalRejectedRows.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\SRC OLE DB Source"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="SSISOps : DON'T CHANGE PREFIX. "
                  name="SRC OLE DB Source">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::varSSISOps_14C0747143F3468E85B149B3D7799974_RowCount_2</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\SRC OLE DB Source.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\SRC OLE DB Source.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\SRC OLE DB Source.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Error Output Description"
                  componentClassID="Microsoft.ManagedComponentHost"
                  name="TF Error Output Description"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      expressionType="Notify"
                      name="Show warning">false</property>
                    <property
                      dataType="System.Boolean"
                      expressionType="Notify"
                      name="Add Error Code">true</property>
                    <property
                      dataType="System.Boolean"
                      expressionType="Notify"
                      name="Add Error Column">true</property>
                    <property
                      dataType="System.Boolean"
                      expressionType="Notify"
                      name="Add Error Description">true</property>
                    <property
                      dataType="System.Boolean"
                      expressionType="Notify"
                      name="Add Component Name">true</property>
                    <property
                      dataType="System.Boolean"
                      expressionType="Notify"
                      name="Add Column Name">true</property>
                    <property
                      dataType="System.Boolean"
                      expressionType="Notify"
                      name="Add Column Type">false</property>
                    <property
                      dataType="System.Boolean"
                      expressionType="Notify"
                      name="Add Column Length">false</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      expressionType="Notify"
                      name="Input Lineage ID">#{Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Add JobInstance Column.Outputs[Derived Column Output].Columns[JobInstanceID]}:JobInstanceID:DT_I8:0;#{Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Add JobInstance Column.Outputs[Derived Column Output].Columns[RowNumber]}:RowNumber:DT_I4:0;#{Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Add JobInstance Column.Outputs[Derived Column Error Output].Columns[ErrorCode]}:ErrorCode:DT_I4:0;#{Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Add JobInstance Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]}:ErrorColumn:DT_I4:0;#{Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Concatenate Rejected Columns.Inputs[Input 0].Columns[EOD_ErrorCode]}:EOD_ErrorCode:DT_I4:0;#{Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Concatenate Rejected Columns.Inputs[Input 0].Columns[EOD_ErrorColumn]}:EOD_ErrorColumn:DT_I4:0;#{Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Concatenate Rejected Columns.Inputs[Input 0].Columns[EOD_ErrorDescription]}:EOD_ErrorDescription:DT_STR:500;#{Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Concatenate Rejected Columns.Inputs[Input 0].Columns[EOD_ComponentName]}:EOD_ComponentName:DT_STR:100;#{Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Concatenate Rejected Columns.Inputs[Input 0].Columns[EOD_ColumnName]}:EOD_ColumnName:DT_STR:100;#{Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Concatenate Rejected Columns.Outputs[Output 0].Columns[RawDataTEXT]}:RawDataTEXT:DT_TEXT:0;#{Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Insert Redirected or Rejected Rows to Exception Table.Inputs[OLE DB Destination Input].Columns[RawDataTEXT]}:RawDataTEXT:DT_TEXT:0;#{Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Insert Redirected or Rejected Rows to Exception Table.Inputs[OLE DB Destination Input].Columns[JobInstanceID]}:JobInstanceID:DT_I8:0;#{Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Insert Redirected or Rejected Rows to Exception Table.Inputs[OLE DB Destination Input].Columns[RowNumber]}:RowNumber:DT_I4:0;#{Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Insert Redirected or Rejected Rows to Exception Table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]}:ErrorCode:DT_I4:0;#{Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Insert Redirected or Rejected Rows to Exception Table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]}:ErrorColumn:DT_I4:0;#{Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]}:ErrorCode:DT_I4:0;#{Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]}:ErrorColumn:DT_I4:0;#{Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Upsert Destination.Outputs[Error Output].Columns[ErrorCode]}:ErrorCode:DT_I4:0;#{Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Upsert Destination.Outputs[Error Output].Columns[ErrorColumn]}:ErrorColumn:DT_I4:0;#{Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Upsert Destination.Outputs[Error Output].Columns[ErrorDescription]}:ErrorDescription:DT_WSTR:1024;#{Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Output].Columns[ProductID]}:ProductID:DT_WSTR:47;#{Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ProductID]}:ProductID:DT_WSTR:47;#{Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Output].Columns[PriceCalculationCode]}:PriceCalculationCode:DT_WSTR:3;#{Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[PriceCalculationCode]}:PriceCalculationCode:DT_WSTR:3;#{Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Output].Columns[SubcontractorID]}:SubcontractorID:DT_WSTR:9;#{Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SubcontractorID]}:SubcontractorID:DT_WSTR:9;#{Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Output].Columns[SubcontractingRate]}:SubcontractingRate:DT_R8:0;#{Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SubcontractingRate]}:SubcontractingRate:DT_R8:0;#{Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Output].Columns[CostComponent]}:CostComponent:DT_WSTR:8;#{Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CostComponent]}:CostComponent:DT_WSTR:8;#{Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Upsert Destination.Inputs[Input].Columns[ProductID]}:ProductID:DT_WSTR:47;#{Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Upsert Destination.Inputs[Input].Columns[PriceCalculationCode]}:PriceCalculationCode:DT_WSTR:3;#{Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Upsert Destination.Inputs[Input].Columns[SubcontractorID]}:SubcontractorID:DT_WSTR:9;#{Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Upsert Destination.Inputs[Input].Columns[SubcontractingRate]}:SubcontractingRate:DT_R8:0;#{Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Upsert Destination.Inputs[Input].Columns[CostComponent]}:CostComponent:DT_WSTR:8;#{Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Error Output Description.Outputs[Error Description Output].Columns[EOD_ErrorCode]}:EOD_ErrorCode:DT_I4:0;#{Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Error Output Description.Outputs[Error Description Output].Columns[EOD_ErrorColumn]}:EOD_ErrorColumn:DT_I4:0;#{Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Error Output Description.Outputs[Error Description Output].Columns[EOD_ErrorDescription]}:EOD_ErrorDescription:DT_STR:500;#{Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Error Output Description.Outputs[Error Description Output].Columns[EOD_ComponentName]}:EOD_ComponentName:DT_STR:100;#{Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Error Output Description.Outputs[Error Description Output].Columns[EOD_ColumnName]}:EOD_ColumnName:DT_STR:100;</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">PW.TaskFactory.ErrorOutputDescription</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Error Output Description.Inputs[Error Input 254 - 'Error Input 0']"
                      name="Error Input 254 - 'Error Input 0'">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Error Output Description.Inputs[Error Input 254 - 'Error Input 0'].Columns[ProductID]"
                          cachedDataType="wstr"
                          cachedLength="47"
                          cachedName="ProductID"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Output].Columns[ProductID]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              expressionType="Notify"
                              name="Output Lineage ID">#{Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Error Output Description.Outputs[Error Description Output].Columns[ProductID]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Error Output Description.Inputs[Error Input 254 - 'Error Input 0'].Columns[PriceCalculationCode]"
                          cachedDataType="wstr"
                          cachedLength="3"
                          cachedName="PriceCalculationCode"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Output].Columns[PriceCalculationCode]" />
                        <inputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Error Output Description.Inputs[Error Input 254 - 'Error Input 0'].Columns[SubcontractorID]"
                          cachedDataType="wstr"
                          cachedLength="9"
                          cachedName="SubcontractorID"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Output].Columns[SubcontractorID]" />
                        <inputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Error Output Description.Inputs[Error Input 254 - 'Error Input 0'].Columns[SubcontractingRate]"
                          cachedDataType="r8"
                          cachedName="SubcontractingRate"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Output].Columns[SubcontractingRate]" />
                        <inputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Error Output Description.Inputs[Error Input 254 - 'Error Input 0'].Columns[CostComponent]"
                          cachedDataType="wstr"
                          cachedLength="8"
                          cachedName="CostComponent"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Output].Columns[CostComponent]" />
                        <inputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Error Output Description.Inputs[Error Input 254 - 'Error Input 0'].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Upsert Destination.Outputs[Error Output].Columns[ErrorCode]" />
                        <inputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Error Output Description.Inputs[Error Input 254 - 'Error Input 0'].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Upsert Destination.Outputs[Error Output].Columns[ErrorColumn]" />
                        <inputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Error Output Description.Inputs[Error Input 254 - 'Error Input 0'].Columns[ErrorDescription]"
                          cachedDataType="wstr"
                          cachedLength="1024"
                          cachedName="ErrorDescription"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Upsert Destination.Outputs[Error Output].Columns[ErrorDescription]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                    <input
                      refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Error Output Description.Inputs[Error Input]"
                      dangling="true"
                      name="Error Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Error Output Description.Outputs[Error Description Output]"
                      name="Error Description Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Error Output Description.Outputs[Error Description Output].Columns[EOD_ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Error Output Description.Outputs[Error Description Output].Columns[EOD_ErrorCode]"
                          name="EOD_ErrorCode" />
                        <outputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Error Output Description.Outputs[Error Description Output].Columns[EOD_ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Error Output Description.Outputs[Error Description Output].Columns[EOD_ErrorColumn]"
                          name="EOD_ErrorColumn" />
                        <outputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Error Output Description.Outputs[Error Description Output].Columns[EOD_ErrorDescription]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Error Output Description.Outputs[Error Description Output].Columns[EOD_ErrorDescription]"
                          name="EOD_ErrorDescription" />
                        <outputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Error Output Description.Outputs[Error Description Output].Columns[EOD_ComponentName]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Error Output Description.Outputs[Error Description Output].Columns[EOD_ComponentName]"
                          name="EOD_ComponentName" />
                        <outputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Error Output Description.Outputs[Error Description Output].Columns[EOD_ColumnName]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Error Output Description.Outputs[Error Description Output].Columns[EOD_ColumnName]"
                          name="EOD_ColumnName" />
                        <outputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Error Output Description.Outputs[Error Description Output].Columns[ProductID]"
                          dataType="wstr"
                          length="47"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Error Output Description.Outputs[Error Description Output].Columns[ProductID]"
                          name="ProductID" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Upsert Destination"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Upsert Destinaton; Pragmatic Works, Inc; Task Factory (c) 2009 - 2016 Pragmatic Works, Inc; http://www.pragmaticworks.com;support@pragmaticworks.com"
                  description="The Upsert Destination takes input data coming from the pipeline and then conditionally inserts, updates or deletes data from the destination."
                  name="TF Upsert Destination"
                  usesDispositions="true"
                  version="13">
                  <properties>
                    <property
                      dataType="System.String"
                      expressionType="Notify"
                      name="DESTINATION_TABLE_NAME"></property>
                    <property
                      dataType="System.Boolean"
                      expressionType="Notify"
                      name="ENABLE_IDENTITY_INSERT">false</property>
                    <property
                      dataType="System.String"
                      expressionType="Notify"
                      name="INSERT_ROWS_COUNT_VARIABLE">&lt;Select Variable&gt;</property>
                    <property
                      dataType="System.String"
                      expressionType="Notify"
                      name="UPDATE_ROWS_COUNT_VARIABLE">&lt;Select Variable&gt;</property>
                    <property
                      dataType="System.String"
                      expressionType="Notify"
                      name="COMMAND_TIMEOUT">0</property>
                    <property
                      dataType="System.Int32"
                      expressionType="Notify"
                      name="UPDATE_METHOD"
                      typeConverter="PW.TaskFactory.Enums+UpsertUpdateMethod">2</property>
                    <property
                      dataType="System.Boolean"
                      expressionType="Notify"
                      name="ACTION_UPDATE">true</property>
                    <property
                      dataType="System.Boolean"
                      expressionType="Notify"
                      name="ACTION_INSERT">true</property>
                    <property
                      dataType="System.String"
                      expressionType="Notify"
                      name="POST_UPDATE_COLUMN">LastUpdatedDate</property>
                    <property
                      dataType="System.Boolean"
                      expressionType="Notify"
                      name="TURN_OFF_INTERNAL_TRANSACTION">true</property>
                    <property
                      dataType="System.String"
                      expressionType="Notify"
                      name="ROW_FLAG_COLUMN"></property>
                    <property
                      dataType="System.String"
                      expressionType="Notify"
                      name="ROW_FLAG_COLUMN_INSERT_VALUE"></property>
                    <property
                      dataType="System.String"
                      expressionType="Notify"
                      name="ROW_FLAG_COLUMN_DELETE_VALUE"></property>
                    <property
                      dataType="System.String"
                      expressionType="Notify"
                      name="ROW_FLAG_COLUMN_REJECT_VALUE"></property>
                    <property
                      dataType="System.String"
                      expressionType="Notify"
                      name="ROW_FLAG_COLUMN_UPDATE_VALUE"></property>
                    <property
                      dataType="System.String"
                      expressionType="Notify"
                      name="OpenRowsetVariable">User::vSchemaTableName</property>
                    <property
                      dataType="System.Int32"
                      expressionType="Notify"
                      name="AccessMode"
                      typeConverter="PW.TaskFactory.Enums+UpsertAccessModeEnum">1</property>
                    <property
                      dataType="System.Int32"
                      expressionType="Notify"
                      name="UPSERT_METHOD"
                      typeConverter="PW.TaskFactory.Enums+UpsertMethod">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates the Upsert destination will use a custom definition for it's temp table creation"
                      expressionType="Notify"
                      name="Use Custom Temp Table">false</property>
                    <property
                      dataType="System.String"
                      description="Definition of the custom temp table script"
                      expressionType="Notify"
                      name="Custom Temp Table Definition"></property>
                    <property
                      dataType="System.Boolean"
                      description="Use a merge statement for the insert and updates instead of two seperate insert and update statements"
                      expressionType="Notify"
                      name="Use Merge Statement">false</property>
                    <property
                      dataType="System.String"
                      description="The script to run before each buffer is sent to the destination"
                      expressionType="Notify"
                      name="Before Script"></property>
                    <property
                      dataType="System.String"
                      description="The script to run after each buffer is sent to the destination"
                      expressionType="Notify"
                      name="After Script"></property>
                    <property
                      dataType="System.Boolean"
                      description="Set to true if you want the component to fail if the before script throws an exception."
                      expressionType="Notify"
                      name="Fail Component If Before Script Throws Exception">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Set to true if you want the component to fail if the after script throws an exception."
                      expressionType="Notify"
                      name="Fail Component If After Script Throws Exception">false</property>
                    <property
                      dataType="System.String"
                      description="Allows you to set a table hint for the destination table (e.g. NOLOCK - SNAPSHOT)."
                      expressionType="Notify"
                      name="Table Hint"></property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">PW.TaskFactory.UpsertDestination</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Upsert Destination.Connections[DestinationConnection]"
                      connectionManagerID="{9D10D2AF-FEAA-4144-BB25-E4AE4505A20C}:external"
                      connectionManagerRefId="Project.ConnectionManagers[TF Upsert ADO_Connection]"
                      description="Connection for the destination"
                      name="DestinationConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Upsert Destination.Inputs[Input]"
                      errorOrTruncationOperation="Error or Truncation"
                      errorRowDisposition="RedirectRow"
                      hasSideEffects="true"
                      name="Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Upsert Destination.Inputs[Input].Columns[ProductID]"
                          cachedDataType="wstr"
                          cachedLength="47"
                          cachedName="ProductID"
                          externalMetadataColumnId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Upsert Destination.Inputs[Input].ExternalColumns[ProductID]"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Output].Columns[ProductID]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Mapped Column for Destination"
                              name="DestinationColumn">ProductID</property>
                            <property
                              dataType="System.Boolean"
                              description="Is Column A Key Column"
                              name="IsKeyColumn">true</property>
                            <property
                              dataType="System.Boolean"
                              description="Is Column An Identity Column"
                              name="IsIdentityColumn">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Set to true if the column will be used as a column match during updates"
                              name="UseAsUpdateMatchColumn">true</property>
                            <property
                              dataType="System.String"
                              description="Update Method Destination Column"
                              name="UpdateMethodDestinationColumn">ProductID</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Upsert Destination.Inputs[Input].Columns[PriceCalculationCode]"
                          cachedDataType="wstr"
                          cachedLength="3"
                          cachedName="PriceCalculationCode"
                          externalMetadataColumnId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Upsert Destination.Inputs[Input].ExternalColumns[PriceCalculationCode]"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Output].Columns[PriceCalculationCode]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Set to true if the column will be used as a column match during updates"
                              name="UseAsUpdateMatchColumn">true</property>
                            <property
                              dataType="System.String"
                              description="Update Method Destination Column"
                              name="UpdateMethodDestinationColumn">PriceCalculationCode</property>
                            <property
                              dataType="System.String"
                              description="Mapped Column for Destination"
                              name="DestinationColumn">PriceCalculationCode</property>
                            <property
                              dataType="System.Boolean"
                              description="Is Column A Key Column"
                              name="IsKeyColumn">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Is Column An Identity Column"
                              name="IsIdentityColumn">false</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Upsert Destination.Inputs[Input].Columns[SubcontractorID]"
                          cachedDataType="wstr"
                          cachedLength="9"
                          cachedName="SubcontractorID"
                          externalMetadataColumnId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Upsert Destination.Inputs[Input].ExternalColumns[SubcontractorID]"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Output].Columns[SubcontractorID]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Set to true if the column will be used as a column match during updates"
                              name="UseAsUpdateMatchColumn">true</property>
                            <property
                              dataType="System.String"
                              description="Update Method Destination Column"
                              name="UpdateMethodDestinationColumn">SubcontractorID</property>
                            <property
                              dataType="System.String"
                              description="Mapped Column for Destination"
                              name="DestinationColumn">SubcontractorID</property>
                            <property
                              dataType="System.Boolean"
                              description="Is Column A Key Column"
                              name="IsKeyColumn">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Is Column An Identity Column"
                              name="IsIdentityColumn">false</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Upsert Destination.Inputs[Input].Columns[SubcontractingRate]"
                          cachedDataType="r8"
                          cachedName="SubcontractingRate"
                          externalMetadataColumnId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Upsert Destination.Inputs[Input].ExternalColumns[SubcontractingRate]"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Output].Columns[SubcontractingRate]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Set to true if the column will be used as a column match during updates"
                              name="UseAsUpdateMatchColumn">true</property>
                            <property
                              dataType="System.String"
                              description="Update Method Destination Column"
                              name="UpdateMethodDestinationColumn">SubcontractingRate</property>
                            <property
                              dataType="System.String"
                              description="Mapped Column for Destination"
                              name="DestinationColumn">SubcontractingRate</property>
                            <property
                              dataType="System.Boolean"
                              description="Is Column A Key Column"
                              name="IsKeyColumn">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Is Column An Identity Column"
                              name="IsIdentityColumn">false</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Upsert Destination.Inputs[Input].Columns[CostComponent]"
                          cachedDataType="wstr"
                          cachedLength="8"
                          cachedName="CostComponent"
                          externalMetadataColumnId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Upsert Destination.Inputs[Input].ExternalColumns[CostComponent]"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Output].Columns[CostComponent]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Set to true if the column will be used as a column match during updates"
                              name="UseAsUpdateMatchColumn">true</property>
                            <property
                              dataType="System.String"
                              description="Update Method Destination Column"
                              name="UpdateMethodDestinationColumn">CostComponent</property>
                            <property
                              dataType="System.String"
                              description="Mapped Column for Destination"
                              name="DestinationColumn">CostComponent</property>
                            <property
                              dataType="System.Boolean"
                              description="Is Column A Key Column"
                              name="IsKeyColumn">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Is Column An Identity Column"
                              name="IsIdentityColumn">false</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Upsert Destination.Inputs[Input].ExternalColumns[ProductID]"
                          dataType="wstr"
                          length="47"
                          name="ProductID" />
                        <externalMetadataColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Upsert Destination.Inputs[Input].ExternalColumns[PriceCalculationCode]"
                          dataType="wstr"
                          length="3"
                          name="PriceCalculationCode" />
                        <externalMetadataColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Upsert Destination.Inputs[Input].ExternalColumns[SubcontractorID]"
                          dataType="wstr"
                          length="9"
                          name="SubcontractorID" />
                        <externalMetadataColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Upsert Destination.Inputs[Input].ExternalColumns[SubcontractingRate]"
                          dataType="r8"
                          name="SubcontractingRate" />
                        <externalMetadataColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Upsert Destination.Inputs[Input].ExternalColumns[CostComponent]"
                          dataType="wstr"
                          length="8"
                          name="CostComponent" />
                        <externalMetadataColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Upsert Destination.Inputs[Input].ExternalColumns[InsertedDate]"
                          dataType="dbTimeStamp"
                          name="InsertedDate" />
                        <externalMetadataColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Upsert Destination.Inputs[Input].ExternalColumns[LastUpdatedDate]"
                          dataType="dbTimeStamp"
                          name="LastUpdatedDate" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Upsert Destination.Outputs[Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Error Output"
                      synchronousInputId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Upsert Destination.Inputs[Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Upsert Destination.Outputs[Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Upsert Destination.Outputs[Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Upsert Destination.Outputs[Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Upsert Destination.Outputs[Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Upsert Destination.Outputs[Error Output].Columns[ErrorDescription]"
                          dataType="wstr"
                          length="1024"
                          lineageId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Upsert Destination.Outputs[Error Output].Columns[ErrorDescription]"
                          name="ErrorDescription" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load.Paths[Derived Column Output]"
                  endId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\RowCount - Get TotalRejectedRows.Inputs[Row Count Input 1]"
                  name="Derived Column Output"
                  startId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Add JobInstance Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load.Paths[Error Description Output]"
                  endId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Concatenate Rejected Columns.Inputs[Input 0]"
                  name="Error Description Output"
                  startId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Error Output Description.Outputs[Error Description Output]" />
                <path
                  refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load.Paths[Error Output]"
                  endId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Error Output Description.Inputs[Error Input 254 - 'Error Input 0']"
                  name="Error Output"
                  startId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Upsert Destination.Outputs[Error Output]" />
                <path
                  refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load.Paths[OLE DB Source Output]"
                  endId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\SRC OLE DB Source.Inputs[Row Count Input 1]"
                  name="OLE DB Source Output"
                  startId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source.Outputs[OLE DB Source Output]" />
                <path
                  refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load.Paths[Output 0]"
                  endId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Add JobInstance Column.Inputs[Derived Column Input]"
                  name="Output 0"
                  startId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Concatenate Rejected Columns.Outputs[Output 0]" />
                <path
                  refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load.Paths[Row Count Output 1]"
                  endId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\DEST TF Upsert Destination.Inputs[Row Count Input 1]"
                  name="Row Count Output 1"
                  startId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Get Total Inserted Records Row Count.Outputs[Row Count Output 1]" />
                <path
                  refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load.Paths[Row Count Output 2]"
                  endId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\DEST Insert Redirected or Rejected Rows to Exception Table.Inputs[Row Count Input 1]"
                  name="Row Count Output 2"
                  startId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\RowCount - Get TotalRejectedRows.Outputs[Row Count Output 1]" />
                <path
                  refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load.Paths[Row Count Output 21]"
                  endId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Insert Redirected or Rejected Rows to Exception Table.Inputs[OLE DB Destination Input]"
                  name="Row Count Output 2"
                  startId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\DEST Insert Redirected or Rejected Rows to Exception Table.Outputs[Row Count Output 1]" />
                <path
                  refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load.Paths[Row Count Output 3]"
                  endId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Get Total Inserted Records Row Count.Inputs[Row Count Input 1]"
                  name="Row Count Output 3"
                  startId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\SRC OLE DB Source.Outputs[Row Count Output 1]" />
                <path
                  refId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load.Paths[Row Count Output 31]"
                  endId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Upsert Destination.Inputs[Input]"
                  name="Row Count Output 3"
                  startId="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\DEST TF Upsert Destination.Outputs[Row Count Output 1]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Initial Load from EDW_STAGE  to ItemPlanning"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{624C77A0-D900-4810-A0B7-2A933DF9E431}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Initial Load from EDW_STAGE  to ItemPlanning">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\Detect index and prepare drop and create index script"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{FDD32B0D-22C4-4B3A-8597-18741D0600ED}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Detect index and prepare drop and create index script"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">@[User::vSQLIndexStatement]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{5F69345A-6239-4B64-9810-DB26DB7308B6}"
              SQLTask:SqlStatementSource="DECLARE&#xA;@IncludeFileGroup bit = 1,&#xA;@IncludeDrop bit = 1,&#xA;@IncludeFillFactor bit = 0&#xA;&#xA;DECLARE @sTableName VARCHAR(150) = ?&#xA;DECLARE @sIndexDesc varchar(MAX)&#xA;DECLARE @sCreateSql varchar(MAX)&#xA;DECLARE @sDropSql varchar(MAX)&#xA;DECLARE @sCreateAllSql varchar(MAX) = ''&#xA;DECLARE @sDropAllSql varchar(MAX) = ''&#xA;&#xA;--- Get all existing indexes, but NOT the primary keys&#xA;DECLARE Indexes_cursor CURSOR&#xA;FOR SELECT&#xA;SC.Name AS SchemaName&#xA;, SO.Name AS TableName&#xA;, SI.Object_Id AS TableId&#xA;, SI.[Name] AS IndexName&#xA;, SI.Index_ID AS IndexId&#xA;, SI.type_desc AS IndexType&#xA;, FG.[Name] AS FileGroupName&#xA;, CASE WHEN SI.Fill_Factor = 0 THEN 100 ELSE SI.Fill_Factor END Fill_Factor&#xA;,SI.is_primary_key&#xA;,SI.is_unique&#xA;FROM sys.indexes SI&#xA;LEFT JOIN sys.filegroups FG&#xA;ON SI.data_space_id = FG.data_space_id&#xA;INNER JOIN sys.objects SO&#xA;ON SI.object_id = SO.object_id&#xA;INNER JOIN sys.schemas SC&#xA;ON SC.schema_id = SO.schema_id&#xA;WHERE ObjectProperty(SI.Object_Id, 'IsUserTable') = 1&#xA;AND SI.[Name] IS NOT NULL&#xA;--AND SI.is_primary_key = 0&#xA;AND SI.is_unique_constraint = 0&#xA;AND IndexProperty(SI.Object_Id, SI.[Name], 'IsStatistics') = 0&#xA;AND SC.name + '.' + SO.name = @sTableName&#xA;ORDER BY Object_name(SI.Object_Id), SI.Index_ID&#xA;&#xA;DECLARE @SchemaName sysname&#xA;DECLARE @TableName sysname&#xA;DECLARE @TableId int&#xA;DECLARE @IndexType SYSNAME&#xA;DECLARE @IndexName sysname&#xA;DECLARE @FileGroupName sysname&#xA;DECLARE @IndexId int&#xA;DECLARE @FillFactor int&#xA;DECLARE @IsPrimaryKey BIT&#xA;DECLARE @IsUnique BIT&#xA;&#xA;DECLARE @NewLine varchar(4000) SET @NewLine = CHAR(13) + CHAR(10)&#xA;DECLARE @Tab varchar(4000) SET @Tab = Space(4)&#xA;&#xA;-- Loop through all indexes&#xA;OPEN Indexes_cursor&#xA;&#xA;FETCH NEXT&#xA;FROM Indexes_cursor&#xA;INTO @SchemaName, @TableName, @TableId, @IndexName,&#xA;@IndexId, @IndexType, @FileGroupName, @FillFactor, @IsPrimaryKey, @IsUnique&#xA;&#xA;WHILE (@@Fetch_Status = 0)&#xA;BEGIN&#xA;&#xA;IF (@IsPrimaryKey = 0)&#xA;BEGIN&#xA;  SET @sIndexDesc = '-- Index ' + @IndexName + ' on table ' + @TableName&#xA;  SET @sDropSql = 'IF EXISTS (SELECT 1' + @NewLine&#xA;  + ' FROM sysindexes si' + @NewLine&#xA;  + ' INNER JOIN sysobjects so' + @NewLine&#xA;  + ' ON so.id = si.id' + @NewLine&#xA;  + ' WHERE si.[Name] = ''' + @IndexName + ''' -- Index Name' + @NewLine&#xA;  + ' AND so.[Name] = ''' + @TableName + ''') -- Table Name' + @NewLine&#xA;  + 'BEGIN' + @NewLine&#xA;  + ' DROP INDEX [' + @IndexName + '] ON'&#xA;  + '[' + @SchemaName + '].[' + @TableName + ']' + @NewLine&#xA;  + 'END' + @NewLine&#xA;&#xA;  SET @sCreateSql = 'CREATE'&#xA;&#xA;  -- Check if the index is unique&#xA;  IF (@IsUnique = 1)&#xA;  BEGIN&#xA;  SET @sCreateSql = @sCreateSql + ' UNIQUE'&#xA;  END&#xA;&#xA;  -- Check if the index is clustered&#xA;  IF (@IndexType = 'CLUSTERED')&#xA;  BEGIN&#xA;  SET @sCreateSql = @sCreateSql + ' CLUSTERED'&#xA;  END&#xA;&#xA;&#xA;  SET @sCreateSql = @sCreateSql + ' INDEX [' + @IndexName + ']&#xA;  ON [' + @SchemaName + '].[' + @TableName + ']' + @NewLine + '(' + @NewLine&#xA;END&#xA;&#xA;ELSE&#xA;BEGIN&#xA;       SET @sDropSql = 'ALTER TABLE ' + @SchemaName + '.'+ @TableName + ' DROP CONSTRAINT ' + @IndexName&#xA;&#xA;       SET @sCreateSql = ''&#xA;       SET @sCreateSql = @sCreateSql + 'ALTER TABLE ' + @SchemaName + '.' + @TableName +  + ' ADD CONSTRAINT ' + @IndexName + ' PRIMARY KEY '&#xA;&#xA;       IF (@IndexType = 'NONCLUSTERED')&#xA;       BEGIN&#xA;       SET @sCreateSql = @sCreateSql + ' NONCLUSTERED'&#xA;       END&#xA;&#xA;       SET @sCreateSql = @sCreateSql + '(' &#xA;END&#xA;&#xA;  -- Get all columns of the index&#xA;  DECLARE IndexColumns_cursor CURSOR&#xA;  FOR SELECT SC.[Name],&#xA;  IC.[is_included_column],&#xA;  IC.is_descending_key&#xA;  FROM sys.index_columns IC&#xA;  INNER JOIN sys.columns SC&#xA;  ON IC.Object_Id = SC.Object_Id&#xA;  AND IC.Column_ID = SC.Column_ID&#xA;  WHERE IC.Object_Id = @TableId&#xA;  AND Index_ID = @IndexId&#xA;  ORDER BY IC.key_ordinal&#xA;&#xA;  DECLARE @IxColumn sysname&#xA;  DECLARE @IxIncl bit&#xA;  DECLARE @Desc bit&#xA;  DECLARE @IxIsIncl bit SET @IxIsIncl = 0&#xA;  DECLARE @IxFirstColumn bit SET @IxFirstColumn = 1&#xA;&#xA;  -- Loop through all columns of the index and append them to the CREATE statement&#xA;  OPEN IndexColumns_cursor&#xA;   FETCH NEXT&#xA;   FROM IndexColumns_cursor&#xA;   INTO @IxColumn, @IxIncl, @Desc&#xA;&#xA;  WHILE (@@Fetch_Status = 0)&#xA;  BEGIN&#xA;   IF (@IxFirstColumn = 1)&#xA;   BEGIN&#xA;    SET @IxFirstColumn = 0&#xA;   END&#xA;   ELSE&#xA;   BEGIN&#xA;    --check to see if it's an included column&#xA;    IF (@IxIsIncl = 0) AND (@IxIncl = 1)&#xA;    BEGIN&#xA;     SET @IxIsIncl = 1&#xA;     SET @sCreateSql = @sCreateSql + @NewLine + ')' +&#xA;      @NewLine + 'INCLUDE' + @NewLine + '(' + @NewLine&#xA;    END&#xA;    ELSE&#xA;    BEGIN&#xA;     SET @sCreateSql = @sCreateSql + ',' + @NewLine&#xA;    END&#xA;    --END IF&#xA;   END&#xA;  --END IF&#xA;&#xA;   SET @sCreateSql = @sCreateSql + @Tab + '[' + @IxColumn + ']'&#xA;   -- check if ASC or DESC&#xA;   IF @IxIsIncl = 0&#xA;   BEGIN&#xA;    IF @Desc = 1&#xA;    BEGIN&#xA;     SET @sCreateSql = @sCreateSql + ' DESC'&#xA;    END&#xA;    ELSE&#xA;    BEGIN&#xA;     SET @sCreateSql = @sCreateSql + ' ASC'&#xA;    END&#xA;    --END IF&#xA;   END&#xA;   --END IF&#xA;   FETCH NEXT&#xA;   FROM IndexColumns_cursor&#xA;   INTO @IxColumn, @IxIncl, @Desc&#xA;  END&#xA;  --END WHILE&#xA;&#xA;  CLOSE IndexColumns_cursor&#xA;  DEALLOCATE IndexColumns_cursor&#xA;&#xA;  SET @sCreateSql = @sCreateSql + @NewLine + ') '&#xA;&#xA;  IF @IncludeFillFactor = 1&#xA;  BEGIN&#xA;   SET @sCreateSql = @sCreateSql + @NewLine +&#xA;   'WITH (FillFactor = ' + Cast(@FillFactor as varchar(13)) + ')' + @NewLine&#xA;  END&#xA;  --END IF&#xA;&#xA;  IF @IncludeFileGroup = 1&#xA;  BEGIN&#xA;   SET @sCreateSql = @sCreateSql + 'ON ['+ @FileGroupName + ']' + @NewLine&#xA;  END&#xA;  ELSE&#xA;  BEGIN&#xA;   SET @sCreateSql = @sCreateSql + @NewLine&#xA;  END&#xA;  --END IF&#xA;&#xA;  SET @sCreateAllSql = @sCreateAllSql + '&#xA;'&#xA;&#xA;  SET @sDropAllSql = @sDropAllSql + '&#xA;'&#xA;&#xA;  IF @IncludeDrop = 1&#xA;  BEGIN&#xA;   SET @sDropAllSql = @sDropAllSql + @sDropSql + '&#xA;'&#xA;  END&#xA;&#xA;  SET @sCreateAllSql = @sCreateAllSql + @sCreateSql + '&#xA;'&#xA;&#xA;  FETCH NEXT&#xA;   FROM Indexes_cursor&#xA;   INTO @SchemaName, @TableName, @TableId, @IndexName,&#xA;   @IndexId, @IndexType, @FileGroupName, @FillFactor, @IsPrimaryKey, @IsUnique&#xA;END&#xA;--END WHILE&#xA;CLOSE Indexes_cursor&#xA;DEALLOCATE Indexes_cursor&#xA;&#xA;SELECT ? = @sDropAllSql&#xA;SELECT ? = @sCreateAllSql" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::vDropAllIndexSQL"
                SQLTask:ParameterDirection="Output"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="8000" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::vCreateAllIndexSQL"
                SQLTask:ParameterDirection="Output"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="8000" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::vSchemaTableName"
                SQLTask:ParameterDirection="Output"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="150" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{47812213-D9C7-424D-9EBE-F3F6B6D1B048}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="DFT_Initial_Load"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="EngineThreads">4</DTS:PropertyExpression>
          <DTS:ObjectData>
            <pipeline
              engineThreads="4"
              version="1">
              <components>
                <component
                  refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\DEST OLE DB Destination"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="SSISOps : DON'T CHANGE PREFIX. "
                  name="DEST OLE DB Destination">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::varSSISOps_47812213D9C7424D9EBEF3F6B6D1B048_RowCount_1</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\DEST OLE DB Destination.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\DEST OLE DB Destination.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\DEST OLE DB Destination.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\Get AuditDateTime"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Get AuditDateTime"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\Get AuditDateTime.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\Get AuditDateTime.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\Get AuditDateTime.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\Get AuditDateTime.Outputs[Derived Column Output].Columns[AuditJobInstanceSourceIDInit]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\Get AuditDateTime.Outputs[Derived Column Output].Columns[AuditJobInstanceSourceIDInit]"
                          name="AuditJobInstanceSourceIDInit"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::vJobInstanceSourceID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::vJobInstanceSourceID]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\Get AuditDateTime.Outputs[Derived Column Output].Columns[AuditJobInstanceSourceIDIncr]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\Get AuditDateTime.Outputs[Derived Column Output].Columns[AuditJobInstanceSourceIDIncr]"
                          name="AuditJobInstanceSourceIDIncr"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::vJobInstanceSourceID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::vJobInstanceSourceID]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\Get AuditDateTime.Outputs[Derived Column Output].Columns[AuditCreatedDTS]"
                          dataType="dbTimeStamp2"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\Get AuditDateTime.Outputs[Derived Column Output].Columns[AuditCreatedDTS]"
                          name="AuditCreatedDTS"
                          scale="3"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_DBTIMESTAMP2,3)@[User::vAuditDateTime]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_DBTIMESTAMP2,3)@[User::vAuditDateTime]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\Get AuditDateTime.Outputs[Derived Column Output].Columns[AuditModifiedDTS]"
                          dataType="dbTimeStamp2"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\Get AuditDateTime.Outputs[Derived Column Output].Columns[AuditModifiedDTS]"
                          name="AuditModifiedDTS"
                          scale="3"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_DBTIMESTAMP2,3)@[User::vAuditDateTime]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_DBTIMESTAMP2,3)@[User::vAuditDateTime]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\Get AuditDateTime.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\Get AuditDateTime.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\Get AuditDateTime.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\Get AuditDateTime.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\Get AuditDateTime.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\Get AuditDateTime.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\Get Records Total RowCount"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Get Records Total RowCount">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::vInsertedTotalRowCount</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\Get Records Total RowCount.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\Get Records Total RowCount.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\Get Records Total RowCount.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable">User::vSchemaTableName</property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">4</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">ROWS_PER_BATCH = 50000</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="{5F69345A-6239-4B64-9810-DB26DB7308B6}:external"
                      connectionManagerRefId="Project.ConnectionManagers[OLEDB_Destination]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ProductID]"
                          cachedDataType="wstr"
                          cachedLength="47"
                          cachedName="ProductID"
                          externalMetadataColumnId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ProductID]"
                          lineageId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source.Outputs[OLE DB Source Output].Columns[ProductID]" />
                        <inputColumn
                          refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[PriceCalculationCode]"
                          cachedDataType="wstr"
                          cachedLength="3"
                          cachedName="PriceCalculationCode"
                          externalMetadataColumnId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PriceCalculationCode]"
                          lineageId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source.Outputs[OLE DB Source Output].Columns[PriceCalculationCode]" />
                        <inputColumn
                          refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[SubcontractorID]"
                          cachedDataType="wstr"
                          cachedLength="9"
                          cachedName="SubcontractorID"
                          externalMetadataColumnId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SubcontractorID]"
                          lineageId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source.Outputs[OLE DB Source Output].Columns[SubcontractorID]" />
                        <inputColumn
                          refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[SubcontractingRate]"
                          cachedDataType="r8"
                          cachedName="SubcontractingRate"
                          externalMetadataColumnId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SubcontractingRate]"
                          lineageId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source.Outputs[OLE DB Source Output].Columns[SubcontractingRate]" />
                        <inputColumn
                          refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[CostComponent]"
                          cachedDataType="wstr"
                          cachedLength="8"
                          cachedName="CostComponent"
                          externalMetadataColumnId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CostComponent]"
                          lineageId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source.Outputs[OLE DB Source Output].Columns[CostComponent]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[InsertedDate]"
                          dataType="dbTimeStamp"
                          name="InsertedDate" />
                        <externalMetadataColumn
                          refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LastUpdatedDate]"
                          dataType="dbTimeStamp"
                          name="LastUpdatedDate" />
                        <externalMetadataColumn
                          refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ProductID]"
                          dataType="wstr"
                          length="47"
                          name="ProductID" />
                        <externalMetadataColumn
                          refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PriceCalculationCode]"
                          dataType="wstr"
                          length="3"
                          name="PriceCalculationCode" />
                        <externalMetadataColumn
                          refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SubcontractorID]"
                          dataType="wstr"
                          length="9"
                          name="SubcontractorID" />
                        <externalMetadataColumn
                          refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SubcontractingRate]"
                          dataType="r8"
                          name="SubcontractingRate" />
                        <externalMetadataColumn
                          refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CostComponent]"
                          dataType="wstr"
                          length="8"
                          name="CostComponent" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="OLE DB Source"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable">User::vSQLSourceStatement</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source.Connections[OleDbConnection]"
                      connectionManagerID="{B28FC9A3-71B7-4CAF-ADD6-6092997A5FBB}:external"
                      connectionManagerRefId="Project.ConnectionManagers[OLEDB_Source]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source.Outputs[OLE DB Source Output].Columns[ProductID]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ProductID]"
                          length="47"
                          lineageId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source.Outputs[OLE DB Source Output].Columns[ProductID]"
                          name="ProductID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source.Outputs[OLE DB Source Output].Columns[PriceCalculationCode]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[PriceCalculationCode]"
                          length="3"
                          lineageId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source.Outputs[OLE DB Source Output].Columns[PriceCalculationCode]"
                          name="PriceCalculationCode"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source.Outputs[OLE DB Source Output].Columns[SubcontractorID]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SubcontractorID]"
                          length="9"
                          lineageId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source.Outputs[OLE DB Source Output].Columns[SubcontractorID]"
                          name="SubcontractorID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source.Outputs[OLE DB Source Output].Columns[SubcontractingRate]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SubcontractingRate]"
                          lineageId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source.Outputs[OLE DB Source Output].Columns[SubcontractingRate]"
                          name="SubcontractingRate"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source.Outputs[OLE DB Source Output].Columns[CostComponent]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CostComponent]"
                          length="8"
                          lineageId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source.Outputs[OLE DB Source Output].Columns[CostComponent]"
                          name="CostComponent"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ProductID]"
                          dataType="wstr"
                          length="47"
                          name="ProductID" />
                        <externalMetadataColumn
                          refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[PriceCalculationCode]"
                          dataType="wstr"
                          length="3"
                          name="PriceCalculationCode" />
                        <externalMetadataColumn
                          refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SubcontractorID]"
                          dataType="wstr"
                          length="9"
                          name="SubcontractorID" />
                        <externalMetadataColumn
                          refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SubcontractingRate]"
                          dataType="r8"
                          name="SubcontractingRate" />
                        <externalMetadataColumn
                          refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CostComponent]"
                          dataType="wstr"
                          length="8"
                          name="CostComponent" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ProductID]"
                          dataType="wstr"
                          length="47"
                          lineageId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ProductID]"
                          name="ProductID" />
                        <outputColumn
                          refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[PriceCalculationCode]"
                          dataType="wstr"
                          length="3"
                          lineageId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[PriceCalculationCode]"
                          name="PriceCalculationCode" />
                        <outputColumn
                          refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SubcontractorID]"
                          dataType="wstr"
                          length="9"
                          lineageId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SubcontractorID]"
                          name="SubcontractorID" />
                        <outputColumn
                          refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SubcontractingRate]"
                          dataType="r8"
                          lineageId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SubcontractingRate]"
                          name="SubcontractingRate" />
                        <outputColumn
                          refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CostComponent]"
                          dataType="wstr"
                          length="8"
                          lineageId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CostComponent]"
                          name="CostComponent" />
                        <outputColumn
                          refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\SRC OLE DB Source"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="SSISOps : DON'T CHANGE PREFIX. "
                  name="SRC OLE DB Source">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::varSSISOps_47812213D9C7424D9EBEF3F6B6D1B048_RowCount_2</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\SRC OLE DB Source.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\SRC OLE DB Source.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\SRC OLE DB Source.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load.Paths[Derived Column Output]"
                  endId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\DEST OLE DB Destination.Inputs[Row Count Input 1]"
                  name="Derived Column Output"
                  startId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\Get AuditDateTime.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load.Paths[OLE DB Source Output]"
                  endId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\SRC OLE DB Source.Inputs[Row Count Input 1]"
                  name="OLE DB Source Output"
                  startId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source.Outputs[OLE DB Source Output]" />
                <path
                  refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load.Paths[Row Count Output 1]"
                  endId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\Get AuditDateTime.Inputs[Derived Column Input]"
                  name="Row Count Output 1"
                  startId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\Get Records Total RowCount.Outputs[Row Count Output 1]" />
                <path
                  refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load.Paths[Row Count Output 2]"
                  endId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Row Count Output 2"
                  startId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\DEST OLE DB Destination.Outputs[Row Count Output 1]" />
                <path
                  refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load.Paths[Row Count Output 21]"
                  endId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\Get Records Total RowCount.Inputs[Row Count Input 1]"
                  name="Row Count Output 2"
                  startId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\SRC OLE DB Source.Outputs[Row Count Output 1]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\Drop Index"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:DelayValidation="True"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{5C4A12FB-8DEF-4B19-A9DB-C20686308016}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Drop Index"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">@[User::vDropAllIndexSQL]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{5F69345A-6239-4B64-9810-DB26DB7308B6}" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\ExSQL Delete Duplicated Rows"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{77ED2086-7254-4BC4-BB59-35042E735026}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="ExSQL Delete Duplicated Rows"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{5F69345A-6239-4B64-9810-DB26DB7308B6}"
              SQLTask:BypassPrepare="False"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="User::vSQLDeleteDuplicates"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="DeletedRows"
                SQLTask:DtsVariableName="User::vDeletedTotalRowCount" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\Recreate Index"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:DelayValidation="True"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{6FE10ABD-4177-4F8E-A5A3-F2CDA674F4B5}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Recreate Index"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">@[User::vCreateAllIndexSQL]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{5F69345A-6239-4B64-9810-DB26DB7308B6}" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\Truncate Target Table Beforehand"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{4635D79F-BDBA-4852-ADC6-A4425B1E0E63}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Truncate Target Table Beforehand">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Initial Load from EDW_STAGE  to ItemPlanning\Truncate Target Table Beforehand\Truncate_Items"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{F6251106-B158-4967-8BD9-318CE36A5BCD}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Truncate_Items"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="SqlStatementSource">@[User::vSQLTruncateTargetTable]</DTS:PropertyExpression>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{5F69345A-6239-4B64-9810-DB26DB7308B6}"
                  SQLTask:BypassPrepare="False"
                  SQLTask:SqlStatementSource="TRUNCATE TABLE [ln].[ItemSubcontractingRates]" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Initial Load from EDW_STAGE  to ItemPlanning.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{45FC2463-E63B-41E1-BB64-5188395F1FD4}"
          DTS:EvalOp="3"
          DTS:Expression="@[User::vDropAllIndexSQL] != &quot;&quot;"
          DTS:From="Package\Initial Load from EDW_STAGE  to ItemPlanning\Detect index and prepare drop and create index script"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Initial Load from EDW_STAGE  to ItemPlanning\Drop Index" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Initial Load from EDW_STAGE  to ItemPlanning.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{AAE5980B-CEBA-4CF6-9F25-83D75999B43D}"
          DTS:From="Package\Initial Load from EDW_STAGE  to ItemPlanning\Drop Index"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Initial Load from EDW_STAGE  to ItemPlanning.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{E36EEC19-6120-4E4E-9E4C-32A0D5947ACD}"
          DTS:EvalOp="3"
          DTS:Expression="@[User::vDropAllIndexSQL] == &quot;&quot;"
          DTS:From="Package\Initial Load from EDW_STAGE  to ItemPlanning\Detect index and prepare drop and create index script"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Initial Load from EDW_STAGE  to ItemPlanning.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{3161E0F6-ED4D-4AE3-8F04-6E5FD9AC70B4}"
          DTS:From="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Initial Load from EDW_STAGE  to ItemPlanning\ExSQL Delete Duplicated Rows" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Initial Load from EDW_STAGE  to ItemPlanning.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{9479BB31-1D8E-4C87-A63E-23A5BBFDF591}"
          DTS:EvalOp="3"
          DTS:Expression="@[User::vCreateAllIndexSQL] != &quot;&quot;"
          DTS:From="Package\Initial Load from EDW_STAGE  to ItemPlanning\ExSQL Delete Duplicated Rows"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\Initial Load from EDW_STAGE  to ItemPlanning\Recreate Index" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Initial Load from EDW_STAGE  to ItemPlanning.PrecedenceConstraints[Constraint 5]"
          DTS:CreationName=""
          DTS:DTSID="{1B4E58BC-2CD5-4A3F-AFD1-57101C49239C}"
          DTS:From="Package\Initial Load from EDW_STAGE  to ItemPlanning\Truncate Target Table Beforehand"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 5"
          DTS:To="Package\Initial Load from EDW_STAGE  to ItemPlanning\Detect index and prepare drop and create index script" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Initialization"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:DelayValidation="True"
      DTS:Description="Sequence Container"
      DTS:DTSID="{9369FEC7-4C8C-4384-A2D8-A1CA216835E8}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Initialization">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Initialization\Validate Connection Managers"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{2DE403E2-C914-4964-B4DD-C75ABC9C9E81}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Validate Connection Managers"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_9f43d420b92f4ee19a127c9aef8ce05d"
              VSTAMajorVersion="14"
              VSTAMinorVersion="0"
              Language="CSharp">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_c89fd17772d4447397f9073850b4717a")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Microsoft")]
[assembly: AssemblyProduct("ST_c89fd17772d4447397f9073850b4717a")]
[assembly: AssemblyCopyright("Copyright @ Microsoft 2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Runtime.InteropServices;
#endregion

namespace ST_336c1c62f21c4b339ee44e942844ebb7
{

    // SET COM to FALSE 
    [ComVisible(false)]
    public class BaseClass
    {
        /// <summary>
        /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
        /// or parent of this class.
        /// </summary>
        [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
        [ComVisible(false)]
        public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
        {
            #region Help:  Using Integration Services variables and parameters in a script
            /* To use a variable in this script, first ensure that the variable has been added to 
             * either the list contained in the ReadOnlyVariables property or the list contained in 
             * the ReadWriteVariables property of this script task, according to whether or not your
             * code needs to write to the variable.  To add the variable, save this script, close this instance of
             * Visual Studio, and update the ReadOnlyVariables and 
             * ReadWriteVariables properties in the Script Transformation Editor window.
             * To use a parameter in this script, follow the same steps. Parameters are always read-only.
             * 
             * Example of reading from a variable:
             *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
             * 
             * Example of writing to a variable:
             *  Dts.Variables["User::myStringVariable"].Value = "new value";
             * 
             * Example of reading from a package parameter:
             *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
             *  
             * Example of reading from a project parameter:
             *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
             * 
             * Example of reading from a sensitive project parameter:
             *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
             * */

            #endregion

            #region Help:  Firing Integration Services events from a script
            /* This script task can fire events for logging purposes.
             * 
             * Example of firing an error event:
             *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
             * 
             * Example of firing an information event:
             *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
             * 
             * Example of firing a warning event:
             *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
             * */
            #endregion

            #region Help:  Using Integration Services connection managers in a script
            /* Some types of connection managers can be used in this script task.  See the topic 
             * "Working with Connection Managers Programatically" for details.
             * 
             * Example of using an ADO.Net connection manager:
             *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
             *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
             *  //Use the connection in some code here, then release the connection
             *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
             *
             * Example of using a File connection manager
             *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
             *  string filePath = (string)rawConnection;
             *  //Use the connection in some code here, then release the connection
             *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
             * */
            #endregion


            /// <summary>
            /// This method is called when this script task executes in the control flow.
            /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
            /// To open Help, press F1.
            /// </summary>
            public void Main()
            {
                // Connection Manager Validaion Version 1.1  Date: 28/09/2016 4:30PM PST
                // Code Development By; Darlington C. Nwemeh 
                // Purpose: To Validate ALL Connection Manager beforehand of Package Execution and to Step OFF Errors from Excel Connections if warranted. 
                //Copyrights (c) 2016 Quidel Corporation


                bool failure = false;
                bool fireAgain = true;
                foreach (var ConnMgr in Dts.Connections)
                {
                    if (ConnMgr.DelayValidation != true)
                    {
                        Dts.Events.FireInformation(1, "", String.Format("ConnectionManager='{0}', ConnectionString='{1}'", ConnMgr.Name, ConnMgr.ConnectionString), "", 0, ref fireAgain);

                        try
                        {
                            ConnMgr.AcquireConnection(null);
                            Dts.Events.FireInformation(1, "", String.Format("Connection acquired successfully on '{0}'", ConnMgr.Name), "", 0, ref fireAgain);
                        }
                        catch (Exception ex)
                        {
                            Dts.Events.FireError(-1, "", String.Format("Failed to acquire connection to '{0}'. Error Message='{1}'", ConnMgr.Name, ex.Message), "", 0);
                            failure = true;
                        }
                    }
                }

                if (failure)
                    Dts.TaskResult = (int)ScriptResults.Failure;
                else
                    Dts.TaskResult = (int)ScriptResults.Success;
            }

            #region ScriptResults declaration
            /// <summary>
            /// This enum provides a convenient shorthand within the scope of this class for setting the
            /// result of the script.
            /// 
            /// This code was generated automatically.
            /// </summary>
            enum ScriptResults
            {
                Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
                Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
            };
            #endregion

        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_9f43d420b92f4ee19a127c9aef8ce05d.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{4736F36B-C423-4DDA-85E9-3DE5DE48E751}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_c89fd17772d4447397f9073850b4717a</RootNamespace>
    <AssemblyName>ST_9f43d420b92f4ee19a127c9aef8ce05d</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_9f43d420b92f4ee19a127c9aef8ce05d</msb:CodeName>
		<msb:DisplayName>ST_9f43d420b92f4ee19a127c9aef8ce05d</msb:DisplayName>
		<msb:ProjectId>{A1848620-D268-426F-9E75-CA9D8D649618}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_9f43d420b92f4ee19a127c9aef8ce05d.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c89fd17772d4447397f9073850b4717a.Properties.Settings.get_Default():ST_c89fd17772d4447397f9073850b4717a.Properties.Sett" +
    "ings")]

namespace ST_c89fd17772d4447397f9073850b4717a.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c89fd17772d4447397f9073850b4717a.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c89fd17772d4447397f9073850b4717a.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c89fd17772d4447397f9073850b4717a.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_c89fd17772d4447397f9073850b4717a.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_c89fd17772d4447397f9073850b4717a.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_9f43d420b92f4ee19a127c9aef8ce05d.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAHklA1sAAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAAijEA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADgxAABPAAAAAEAAAJwEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAkBEAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAJwEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABs
MQAAAAAAAEgAAAACAAUA0CEAALAOAAABAAAAAAAAAIAwAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBEAAAoqrn4BAAAELR5yAQAAcNADAAACKBIAAApvEwAA
CnMUAAAKgAEAAAR+AQAABCoafgIAAAQqHgKAAgAABCoafgMAAAQqHgIoFQAACioucwcAAAaAAwAA
BCoAABswBwD6AAAAAQAAERYKFwsCKBYAAApvFwAACm8YAAAKDDi4AAAACG8ZAAAKDQlvGgAACjqm
AAAAAigWAAAKbxsAAAoXcnMAAHBydQAAcAlvHAAACglvHQAACigeAAAKcnMAAHAWEgFvHwAACgkU
byAAAAomAigWAAAKbxsAAAoXcnMAAHBy1QAAcAlvHAAACighAAAKcnMAAHAWEgFvHwAACt46EwQC
KBYAAApvGwAAChVycwAAcHIpAQBwCW8cAAAKEQRvIgAACigeAAAKcnMAAHAWbyMAAAomFwreAAhv
JAAACjo9////BiwNAigWAAAKF28lAAAKKgIoFgAAChZvJQAACioAAAEQAAAAAGAAOJgAOhMAAAEe
AigmAAAKKkJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAFAEAAAjfgAAvAQAAIwG
AAAjU3RyaW5ncwAAAABICwAAoAEAACNVUwDoDAAAEAAAACNHVUlEAAAA+AwAALgBAAAjQmxvYgAA
AAAAAAACAAABVx2iAQkDAAAA+gEzABYAAAEAAAAjAAAABgAAAAYAAAAKAAAAAQAAACYAAAACAAAA
EgAAAAEAAAACAAAAAwAAAAQAAAABAAAABAAAAAEAAAACAAAAAAC7AwEAAAAAAAYAaQJCBQYA+AJC
BQYAoQEQBQ8AtgUAAAYA4gFUBAYATAJUBAYALQJUBAYA3wJUBAYAiQJUBAYAogJUBAYA+QFUBAYA
FAIcAwYAzgEjBQYARwbjAwoAvQJqAwoAIAFqAw4A0gTLAA4AogTLAAYAeATjAwYA6gPjAwYAhAEQ
BQYAkgRiBQYAggQ/BBIAVAGlAxIAtQGlAxIAPAEqBAYAaQFCBQYA6wDjAwYAngDjAwYAggZUBAoA
kwNqAw4AAQbLAAoAtARqAwYARAPjAw4A5wTLAAAAAAAlAAAAAAABAAEAAQAQAA0GAQA5AAEAAQAA
ABAAaQXFBTkAAQACAAABEAD0BcUFaQADAAYAAgAQAPsDAABBAAQACQADAQAAJwYAAFEABAALABEA
7wOjABEAEAGnABEAggCrAAYGTQCvAFaAFwayAFaA8ACyAFAgAAAAAIYYAwUGAAEAUCAAAAAAgxgD
BQYAAQBYIAAAAACTCI4EtgABAIQgAAAAAJMI+AC7AAEAiyAAAAAAkwgEAcAAAQCTIAAAAACWCE4G
xgACAJogAAAAAIYYAwUGAAIAoiAAAAAAkRgJBcsAAgCwIAAAAACGAAEEBgACAMghAAAAAIYYAwUG
AAIAAAABABYDCQADBQEAEQADBQYAGQADBQoAKQADBRAAMQADBRAAOQADBRAAQQADBRAASQADBRAA
UQADBRAAWQADBRAAYQADBRAAaQADBRUAeQADBQYAqQADBQYAyQADBRoA2QADBQYAcQADBQYA4QCw
ACAA4QB+BicAsQADBSwA0QADBQYAgQAfBj4A+QD9BUMAAQH1BEkAiQBpBk4AkQAGBFMA+QA1BlcA
kQDCAF0AkQA2A10AEQFABmEACQEaBGgAkQBmBHMAEQFABngAmQCSAF0ACQHIBH4AGQF1BlMA+QBa
BgEAgQADBQYACAAUAJkACAAYAJ4AKQB7AAYBLgALAN4ALgATAOcALgAbAAYBLgAjAA8BLgArADgB
LgAzADgBLgA7AD4BLgBDAA8BLgBLAE0BLgBTADgBLgBbAG0BQwBjADgBSQB7AAYBYQCDAJ4AYwBz
AJ4AowBrAJ4AowBjADgBMwADAAEABAADAAAAkgTPAAAAGAHUAAAAUgbZAAIAAwADAAIABAAFAAEA
BQAFAAIABgAHAASAAAABAAAAOxqEWwAAAAAAAF4AAAAEAAAAAAAAAAAAAACHAFUAAAAAAA0AAAAA
AAAAAAAAAJAASwMAAAAADQAAAAAAAAAAAAAAkAAuAAAAAAAEAAAAAAAAAAAAAACHAOMDAAAAAAAA
AAABAAAAcwUAAAUAAgAGAAUAAAAAAABTVF8zMzZjMWM2MmYyMWM0YjMzOWVlNDRlOTQyODQ0ZWJi
NwA8TW9kdWxlPgBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBtc2Nvcmxp
YgBTVF85ZjQzZDQyMGI5MmY0ZWUxOWExMjdjOWFlZjhjZTA1ZABkZWZhdWx0SW5zdGFuY2UAZ2V0
X01lc3NhZ2UAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAZ2V0X05hbWUATWlj
cm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0
X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBs
aWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRl
ZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1
dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAENvbVZpc2libGVBdHRyaWJ1dGUAQXNzZW1ibHlU
aXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtB
dHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRp
b25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1
Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRy
eVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJp
bGl0eUF0dHJpYnV0ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAGdldF9Db25uZWN0
aW9uU3RyaW5nAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2Vy
dmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25l
bnRNb2RlbABTVF85ZjQzZDQyMGI5MmY0ZWUxOWExMjdjOWFlZjhjZTA1ZC5kbGwAU3lzdGVtAEVu
dW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBnZXRfRGVsYXlWYWxpZGF0aW9uAEZpcmVJbmZvcm1h
dGlvbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVm
bGVjdGlvbgBBY3F1aXJlQ29ubmVjdGlvbgBFeGNlcHRpb24AQ3VsdHVyZUluZm8AZ2V0X1Jlc291
cmNlTWFuYWdlcgBDb25uZWN0aW9uTWFuYWdlcgBFdmVudHNPYmplY3RXcmFwcGVyAEZpcmVFcnJv
cgBDb25uZWN0aW9uRW51bWVyYXRvcgBEdHNFbnVtZXJhdG9yAEdldEVudW1lcmF0b3IALmN0b3IA
LmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMA
U3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUX2M4OWZk
MTc3NzJkNDQ0NzM5N2Y5MDczODUwYjQ3MTdhLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNl
cwBEZWJ1Z2dpbmdNb2RlcwBTVF9jODlmZDE3NzcyZDQ0NDczOTdmOTA3Mzg1MGI0NzE3YS5Qcm9w
ZXJ0aWVzAFNldHRpbmdzAGdldF9Db25uZWN0aW9ucwBCYXNlQ2xhc3MAU3VjY2VzcwBnZXRfRHRz
AFNjcmlwdFJlc3VsdHMAZ2V0X0V2ZW50cwBGb3JtYXQAT2JqZWN0AGdldF9EZWZhdWx0AHNldF9U
YXNrUmVzdWx0AGdldF9DdXJyZW50AE1vdmVOZXh0AGdldF9Bc3NlbWJseQAAAHFTAFQAXwBjADgA
OQBmAGQAMQA3ADcANwAyAGQANAA0ADQANwAzADkANwBmADkAMAA3ADMAOAA1ADAAYgA0ADcAMQA3
AGEALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAEAX0MAbwBuAG4A
ZQBjAHQAaQBvAG4ATQBhAG4AYQBnAGUAcgA9ACcAewAwAH0AJwAsACAAQwBvAG4AbgBlAGMAdABp
AG8AbgBTAHQAcgBpAG4AZwA9ACcAewAxAH0AJwABU0MAbwBuAG4AZQBjAHQAaQBvAG4AIABhAGMA
cQB1AGkAcgBlAGQAIABzAHUAYwBjAGUAcwBzAGYAdQBsAGwAeQAgAG8AbgAgACcAewAwAH0AJwAB
dUYAYQBpAGwAZQBkACAAdABvACAAYQBjAHEAdQBpAHIAZQAgAGMAbwBuAG4AZQBjAHQAaQBvAG4A
IAB0AG8AIAAnAHsAMAB9ACcALgAgAEUAcgByAG8AcgAgAE0AZQBzAHMAYQBnAGUAPQAnAHsAMQB9
ACcAAQCtl1AZPMbPQIymAtxaZjnvAAQgAQEIAyAAAQUgAQEREQQgAQEOBCABAQIFIAEBEWEGAAES
cRF1BCAAEnkGIAIBDhJ5CgcFAgISRRJJEk0EIAASfQUgABKAgQQgABJFBCAAEkkDIAACBSAAEoCF
AyAADgYAAw4OHBwKIAYBCA4ODggQAgQgARwcBQACDg4cCCAFAggODg4ICLd6XFYZNOCJCImEXc2A
gMyRBAAAAAAEAQAAAAMGElkDBhJdAwYSEAIGCAMGERgEAAASWQQAABJdBQABARJdBAAAEhADAAAB
BAgAElkECAASXQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgB
AAIAAAAAACgBACNTVF9jODlmZDE3NzcyZDQ0NDczOTdmOTA3Mzg1MGI0NzE3YQAABQEAAAAADgEA
CU1pY3Jvc29mdAAAHwEAGkNvcHlyaWdodCBAIE1pY3Jvc29mdCAyMDE2AABJAQAaLk5FVEZyYW1l
d29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3Jr
IDQuNQC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1z
Y29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49
Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAA
AAAAAAAAAFBBRFBBRFC0AAAAYDEAAAAAAAAAAAAAejEAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AGwxAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAPgQAAAAAAAAAAAAAPgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAIRbOxoAAAEAhFs7Gj8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBJ4DAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAHoDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAA0AAoAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAE0AaQBjAHIAbwBzAG8AZgB0AAAAcAAkAAEARgBpAGwAZQBEAGUAcwBj
AHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfAGMAOAA5AGYAZAAxADcANwA3ADIAZAA0ADQANAA3ADMA
OQA3AGYAOQAwADcAMwA4ADUAMABiADQANwAxADcAYQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBp
AG8AbgAAAAAAMQAuADAALgA2ADcAMQA1AC4AMgAzADQAMgA4AAAAAABwACgAAQBJAG4AdABlAHIA
bgBhAGwATgBhAG0AZQAAAFMAVABfADkAZgA0ADMAZAA0ADIAMABiADkAMgBmADQAZQBlADEAOQBh
ADEAMgA3AGMAOQBhAGUAZgA4AGMAZQAwADUAZAAuAGQAbABsAAAAWgAbAAEATABlAGcAYQBsAEMA
bwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAATQBpAGMAcgBvAHMAbwBm
AHQAIAAyADAAMQA2AAAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAA
AAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAFQAXwA5AGYANAAz
AGQANAAyADAAYgA5ADIAZgA0AGUAZQAxADkAYQAxADIANwBjADkAYQBlAGYAOABjAGUAMAA1AGQA
LgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBUAF8AYwA4ADkAZgBk
ADEANwA3ADcAMgBkADQANAA0ADcAMwA5ADcAZgA5ADAANwAzADgANQAwAGIANAA3ADEANwBhAAAA
QgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADcAMQA1AC4AMgAz
ADQAMgA4AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAA
LgA2ADcAMQA1AC4AMgAzADQAMgA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAIwxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Initialization  Audit"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{5e4d801a-3df1-4cd5-b10c-b4a0836dfa76}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Initialization  Audit">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Initialization  Audit\Execute cmd shell and retrieve environment variable information"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{32bbca9b-fdb0-4b52-895c-6f60003edeb5}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute cmd shell and retrieve environment variable information"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_34ea6d4670924f2aa30ddfa8764b7bcd"
              VSTAMajorVersion="14"
              VSTAMinorVersion="0"
              Language="CSharp" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Initialization  Audit\Log Environment"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{53e1645f-4036-481e-aa18-ab84b3b9e9e5}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log Environment"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{FD4092C7-1531-4C59-8065-369CAD340586}"
              SQLTask:SqlStatementSource="INSERT INTO Audit.Environment (&#xA;                RunningJobsText, &#xA;                EnvironmentText, &#xA;                JobInstanceID) VALUES &#xA;                (?, ?, ?)&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="255" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::vEnvironmentTEXT"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="8000" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::vCurJobInstanceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Initialization  Audit\Log Processed  Table JobInstanceSource"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{eae46d31-80ea-4e01-9d7e-5d567989fe98}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log Processed  Table JobInstanceSource"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{FD4092C7-1531-4C59-8065-369CAD340586}"
              SQLTask:SqlStatementSource="EXEC Audit.LogJobInstanceSource &#xA; @JobInstanceID = ?, &#xA;@SourceNAME = ?,  &#xA;@SourceLocationNAME = ?, &#xA;@JobInstanceSourceID=? output, &#xA;@SourceTypeIND = 'T' " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::vCurJobInstanceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="$Package::pSourceItemSubContTableName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="500" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::vSourceServerDatabase"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="1000" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::vJobInstanceSourceID"
                SQLTask:ParameterDirection="Output"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Initialization  Audit\Populate ETLUser"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{65dd56f1-cb20-488d-b918-d3214719da08}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Populate ETLUser"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{FD4092C7-1531-4C59-8065-369CAD340586}"
              SQLTask:SqlStatementSource="Exec [Audit].[LogETLUser] @UserNAME = ?, @UserEMAIL = ?, @UserID = ? OUTPUT" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::UserName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="256" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="$Project::pNotificationEmail"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="256" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::vCurUserID"
                SQLTask:ParameterDirection="Output"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Initialization  Audit\Populate Joblog"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{55a62595-659d-4dff-947c-c2a536334684}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Populate Joblog"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{FD4092C7-1531-4C59-8065-369CAD340586}"
              SQLTask:SqlStatementSource="EXEC [Audit].[LogJobOnBegin] &#xA;@JobName = ?,&#xA;@PackageID = ?,&#xA;@JobID = ? OUTPUT" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="255" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::PackageID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="72"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::vCurJobID"
                SQLTask:ParameterDirection="Output"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Initialization  Audit\Populate new Job Instance"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{448eda3c-b7f1-41bf-bf34-91e2607c0209}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Populate new Job Instance"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{FD4092C7-1531-4C59-8065-369CAD340586}"
              SQLTask:SqlStatementSource="EXEC [Audit].[logJobInstance] &#xA;@JobID = ?, &#xA;@UserID = ?,&#xA;@JobInstanceParentID = ?,&#xA;@packageVersionID = ?,&#xA;@ExecutionID = ?,&#xA;@JobStartDTS = ?, &#xA;@currentJobInstanceID = ? OUTPUT" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::vCurJobID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::vCurUserID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="$Package::pJobInstanceParentID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="System::VersionGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="72"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="72"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="5"
                SQLTask:DtsVariableName="User::vPackageStartDate"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="133"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="6"
                SQLTask:DtsVariableName="User::vCurJobInstanceID"
                SQLTask:ParameterDirection="Output"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Initialization  Audit.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{9e142ab1-510e-4953-bf6d-dcd8266257ba}"
          DTS:From="Package\Initialization  Audit\Populate ETLUser"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Initialization  Audit\Populate Joblog" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Initialization  Audit.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{f13680e9-cf70-4ddb-8ac2-4e7f1fe91c7f}"
          DTS:From="Package\Initialization  Audit\Populate Joblog"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Initialization  Audit\Populate new Job Instance" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Initialization  Audit.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{d1353006-1ef0-49f4-b38f-f7dff839ac43}"
          DTS:From="Package\Initialization  Audit\Populate new Job Instance"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Initialization  Audit\Log Processed  Table JobInstanceSource" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Initialization  Audit.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{8d6c5cb6-96ad-407f-a06e-6caebc702d1e}"
          DTS:From="Package\Initialization  Audit\Log Processed  Table JobInstanceSource"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Initialization  Audit\Execute cmd shell and retrieve environment variable information" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Initialization  Audit.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{066b7dbd-4696-468c-9c77-ca8a6e3b34ee}"
          DTS:From="Package\Initialization  Audit\Execute cmd shell and retrieve environment variable information"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\Initialization  Audit\Log Environment" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{5DC93F5A-4259-4C35-B6F0-05C5F8F1DB2D}"
      DTS:From="Package\Initialization  Audit"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Get LastRecordsProcessedDate For Package" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{2B54F4DA-BBB0-4F98-8FEC-2978E4B86233}"
      DTS:From="Package\Initialization"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Initialization  Audit" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{7CB4E018-6C83-4A65-9675-BE0065C981B3}"
      DTS:EvalOp="3"
      DTS:Expression="@[User::vTargetTableCount] == (DT_I8)0"
      DTS:From="Package\Determine IF Init vs Incr Load"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Initial Load from EDW_STAGE  to ItemPlanning" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{2339001C-88EA-4F0C-A1D0-F5A171C832DF}"
      DTS:EvalOp="3"
      DTS:Expression="@[User::vTargetTableCount] &gt; (DT_I8)0"
      DTS:From="Package\Determine IF Init vs Incr Load"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Incremental Load from EDW_STAGE  to Subcontracting" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{FAD8F4C4-9319-43C7-887B-BBE5DD3D61A3}"
      DTS:From="Package\Get LastRecordsProcessedDate For Package"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Determine IF Init vs Incr Load" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{D4A48215-64E3-45A3-874A-657ADBAC9B9B}"
      DTS:From="Package\Initial Load from EDW_STAGE  to ItemPlanning"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\Completion (Audit)" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{A6732780-5012-43DE-9E42-C44292510B9B}"
      DTS:From="Package\Incremental Load from EDW_STAGE  to Subcontracting"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\Completion (Audit)" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. SSISOps : DON'T CHANGE PREFIX. "
      DTS:DTSID="{7FD6D2ED-9B97-49D6-B6E6-A09851234112}"
      DTS:EventID="1414744396"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{4E64355C-D08F-4E96-84C0-E66AE98DF803}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
          DTS:DTSID="{1CE55365-ED06-4DA7-AB78-BDF452C69EBA}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOpsNF_CHECK">
          <DTS:VariableValue
            DTS:DataType="8">{3B00A5E8-DA1E-408E-AC58-1F9F4DD2BDF7}</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\SSISOpsEhObj_OnError_Start"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{0C3A7103-E173-4D26-B872-082A299D25F3}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_OnError_Start"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[User::varSSISOps_DisableBIxAuditing]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <ScriptProject
              Name="st_bfe1e5ee30f343bf959cdd98cc7b6dbd"
              VSTAMajorVersion="14"
              VSTAMinorVersion="0"
              Language="CSharp">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("st_bfe1e5ee30f343bf959cdd98cc7b6dbd")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Microsoft")]
[assembly: AssemblyProduct("st_bfe1e5ee30f343bf959cdd98cc7b6dbd")]
[assembly: AssemblyCopyright("Copyright @ Microsoft 2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Namespaces

using System;
using System.Data;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using Microsoft.SqlServer.Dts.Runtime;

#endregion

namespace st_bfe1e5ee30f343bf959cdd98cc7b6dbd
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // Begin BI xPress Code

            // End BI xPress Code

            Dts.TaskResult = (int)ScriptResults.Success;
        }

#region ScriptResults declaration

        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };

#endregion


        private void WriteVariable(string variableName, object variableValue)
        {
            Variables vars = null;
            bool isUnlocked = false;

            try
            {
                Dts.VariableDispenser.LockForWrite(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    vars[variableName].Value = variableValue;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }
        }
        private object ReadVariable(string variableName)
        {
            Variables vars = null;
            bool isUnlocked = false;
            object result;

            try
            {
                Dts.VariableDispenser.LockForRead(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    result = vars[variableName].Value;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }

            return result;
        }

    }
}]]></ProjectItem>
              <ProjectItem
                Name="st_bfe1e5ee30f343bf959cdd98cc7b6dbd.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{83e59ebf-ebe3-4af6-9c9a-92ea8f60a0b0}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>st_bfe1e5ee30f343bf959cdd98cc7b6dbd</RootNamespace>
    <AssemblyName>st_bfe1e5ee30f343bf959cdd98cc7b6dbd</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>st_bfe1e5ee30f343bf959cdd98cc7b6dbd</msb:CodeName>
		<msb:DisplayName>st_bfe1e5ee30f343bf959cdd98cc7b6dbd</msb:DisplayName>
		<msb:ProjectId>{9DB46B0B-38D9-4C8D-B0E2-8F5E83C97921}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_bfe1e5ee30f343bf959cdd98cc7b6dbd.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_bfe1e5ee30f343bf959cdd98cc7b6dbd.Properties.Settings.get_Default():st_bfe1e5ee30f343bf959cdd98cc7b6dbd.Properties.Sett" +
    "ings")]

namespace st_bfe1e5ee30f343bf959cdd98cc7b6dbd.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_bfe1e5ee30f343bf959cdd98cc7b6dbd.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_bfe1e5ee30f343bf959cdd98cc7b6dbd.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_bfe1e5ee30f343bf959cdd98cc7b6dbd.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace st_bfe1e5ee30f343bf959cdd98cc7b6dbd.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("st_bfe1e5ee30f343bf959cdd98cc7b6dbd.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="st_bfe1e5ee30f343bf959cdd98cc7b6dbd.dll">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
gQDrAzIA4QAUAzgAgQBMAwYA2QCgBQYA2QA6ABAA4QAKA0QAcQCTBAYAeQCTBAYA6QCnAEgA6QDB
BU8AoQCTBFQAwQCTBAYACAAUAG0ACAAYAHIAKQBzAOUALgALAL0ALgATAMYALgAbAOUALgAjAO4A
LgArABcBLgAzABcBLgA7AB0BLgBDAO4ALgBLACwBLgBTABcBLgBbAEwBQwBjAHIASQBzAOUAYQB7
AHIAYwBrAHIAIAA9AAMAAQAEAAMAAABtBK4AAAATAbMAAACqBbgAAgAGAAMAAgAHAAUAAQAIAAUA
AgAJAAcABIAAAAEAAAA7GoVbAAAAAAAARgAAAAQAAAAAAAAAAAAAAFsAMQAAAAAADQAAAAAAAAAA
AAAAZABTAwAAAAANAAAAAAAAAAAAAABkAAoAAAAAAAQAAAAAAAAAAAAAAFsA9AMAAAAAAAAAAAEA
AADkBAAABQACAAAAAAAAPE1vZHVsZT4ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZh
bHVlX18AbXNjb3JsaWIATG9ja0ZvclJlYWQAc3RfYmZlMWU1ZWUzMGYzNDNiZjk1OWNkZDk4Y2M3
YjZkYmQAZGVmYXVsdEluc3RhbmNlAFJlYWRWYXJpYWJsZQBXcml0ZVZhcmlhYmxlAFJ1bnRpbWVU
eXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAHZhcmlhYmxlTmFtZQBNaWNyb3NvZnQuU3FsU2Vy
dmVyLkR0cy5SdW50aW1lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNv
dXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGlu
Z3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAExvY2tGb3JXcml0ZQBDb21waWxlckdlbmVyYXRl
ZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1
dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1i
bHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29u
ZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0
aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5
Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3Nl
bWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1Zh
bHVlAHNldF9WYWx1ZQB2YXJpYWJsZVZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25p
bmcAVW5sb2NrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2Vy
dmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25l
bnRNb2RlbABzdF9iZmUxZTVlZTMwZjM0M2JmOTU5Y2RkOThjYzdiNmRiZC5kbGwAZ2V0X0l0ZW0A
U3lzdGVtAEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBT
eXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBFeGNlcHRpb24AQ3VsdHVyZUlu
Zm8AZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfVmFyaWFibGVEaXNwZW5zZXIALmN0b3IALmNjdG9y
AFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3Rl
bS5SZXNvdXJjZXMAc3RfYmZlMWU1ZWUzMGYzNDNiZjk1OWNkZDk4Y2M3YjZkYmQuUHJvcGVydGll
cy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAHN0X2JmZTFlNWVlMzBmMzQzYmY5
NTljZGQ5OGNjN2I2ZGJkLlByb3BlcnRpZXMAR2V0VmFyaWFibGVzAFNldHRpbmdzAFN1Y2Nlc3MA
Z2V0X0R0cwBTY3JpcHRSZXN1bHRzAE9iamVjdABSZXNldABnZXRfRGVmYXVsdABzZXRfVGFza1Jl
c3VsdABnZXRfQXNzZW1ibHkAAAAAcXMAdABfAGIAZgBlADEAZQA1AGUAZQAzADAAZgAzADQAMwBi
AGYAOQA1ADkAYwBkAGQAOQA4AGMAYwA3AGIANgBkAGIAZAAuAFAAcgBvAHAAZQByAHQAaQBlAHMA
LgBSAGUAcwBvAHUAcgBjAGUAcwAAAHvJr0ZT0X1Fg8W6+D+5rJsABCABAQgDIAABBSABARERBCAB
AQ4FIAEBEVkEIAASaQUHAhJBAgQgABJtBiABARASQQUgARJxHAQgAQEcBgcDEkECHAMgABwGAAES
dRF5BCAAEn0GIAIBDhJ9CLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGElEDBhJVAwYSEAIG
CAMGERQFIAIBDhwEIAEcDgQAABJRBAAAElUFAAEBElUEAAASEAMAAAEECAASUQQIABJVBAgAEhAI
AQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI3N0X2Jm
ZTFlNWVlMzBmMzQzYmY5NTljZGQ5OGNjN2I2ZGJkAAAFAQAAAAAOAQAJTWljcm9zb2Z0AAAfAQAa
Q29weXJpZ2h0IEAgTWljcm9zb2Z0IDIwMTgAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQu
NQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41AAC0AAAAzsrvvgEA
AACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9u
PTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4
OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0
AAAAUC8AAAAAAAAAAAAAai8AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFwvAAAAAAAAAAAAAAAA
X0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAAD4EAAAAAAAAAAAAAD4ENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQCFWzsaAAABAIVbOxo/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsASeAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAB6AwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAANAAKAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAABNAGkAYwByAG8AcwBvAGYAdAAAAHAAJAABAEYAaQBsAGUARABlAHMA
YwByAGkAcAB0AGkAbwBuAAAAAABzAHQAXwBiAGYAZQAxAGUANQBlAGUAMwAwAGYAMwA0ADMAYgBm
ADkANQA5AGMAZABkADkAOABjAGMANwBiADYAZABiAGQAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMA
aQBvAG4AAAAAADEALgAwAC4ANgA3ADEANQAuADIAMwA0ADIAOQAAAAAAcAAoAAEASQBuAHQAZQBy
AG4AYQBsAE4AYQBtAGUAAABzAHQAXwBiAGYAZQAxAGUANQBlAGUAMwAwAGYAMwA0ADMAYgBmADkA
NQA5AGMAZABkADkAOABjAGMANwBiADYAZABiAGQALgBkAGwAbAAAAFoAGwABAEwAZQBnAGEAbABD
AG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgAE0AaQBjAHIAbwBzAG8A
ZgB0ACAAMgAwADEAOAAAAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAA
AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAcwB0AF8AYgBmAGUA
MQBlADUAZQBlADMAMABmADMANAAzAGIAZgA5ADUAOQBjAGQAZAA5ADgAYwBjADcAYgA2AGQAYgBk
AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAHMAdABfAGIAZgBlADEA
ZQA1AGUAZQAzADAAZgAzADQAMwBiAGYAOQA1ADkAYwBkAGQAOQA4AGMAYwA3AGIANgBkAGIAZAAA
AEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgA3ADEANQAuADIA
MwA0ADIAOQAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAw
AC4ANgA3ADEANQAuADIAMwA0ADIAOQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAAB8PwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\SSISOpsEhObj_Package_OnError"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{74004B27-0AC3-4598-8109-7BE6A55BFE7F}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_Package_OnError"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{FD4092C7-1531-4C59-8065-369CAD340586}"
              SQLTask:SqlStatementSource="EXEC [bix].[usp_SSISOps_Audit_OnAlert_67] @Scope='Package',@EventType='E',@ExecutionID=?,@SourceID=?,@SourceName=?,@SourceType='UNKNOWN',@MessageCode=?,@MessageDescription=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="System::SourceName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="System::ErrorCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="System::ErrorDescription"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\SSISOpsEhObj_Task_OnError"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{0954BC73-2233-4E04-8799-CBF434E90FFC}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_Task_OnError"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{FD4092C7-1531-4C59-8065-369CAD340586}"
              SQLTask:SqlStatementSource="EXEC [bix].[usp_SSISOps_Audit_OnAlert_67] @Scope='Task',@EventType='E',@ExecutionID=?,@SourceID=?,@SourceName=?,@SourceType='UNKNOWN',@MessageCode=?,@MessageDescription=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="System::SourceName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="System::ErrorCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="System::ErrorDescription"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\SSISOpsNFObj_UpdateAlertList"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{B1524D1F-4166-4D5F-BC68-93A7E4E119EE}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsNFObj_UpdateAlertList">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="st_64e859ad216d4a1b946f3a81fb37d406"
              VSTAMajorVersion="14"
              VSTAMinorVersion="0"
              Language="CSharp">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("st_64e859ad216d4a1b946f3a81fb37d406")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Microsoft")]
[assembly: AssemblyProduct("st_64e859ad216d4a1b946f3a81fb37d406")]
[assembly: AssemblyCopyright("Copyright @ Microsoft 2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="st_64e859ad216d4a1b946f3a81fb37d406.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{f5f12d0e-10f8-4332-81a9-6eba7fc324c4}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>st_64e859ad216d4a1b946f3a81fb37d406</RootNamespace>
    <AssemblyName>st_64e859ad216d4a1b946f3a81fb37d406</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[/*
Copyright © 2015 Pragmatic Works Inc.
#####################################################################################################################
LEGAL NOTICE
#####################################################################################################################
THE FOLLOWING SOURCE CODE IS PRODUCED BY PRAGMATIC WORKS INC.
YOU MUST HAVE A VALID LICENSE OF "BI xPRESS" (PRODUCT OF PRAGMATIC WORKS) TO USE/MODIFY THE FOLLOWING SOURCE CODE.

YOU CAN NOT PUBLISH ANY PORTION OF THIS SOURCE CODE WITHOUT WRITTEN PERMISSION OF PRAGMATIC WORKS INC.
##################################################################################################################### 
*/
#region Namespaces

using System;
using System.Data;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using Microsoft.SqlServer.Dts.Runtime;
using System.Net;
using System.Net.Mail;
using System.Collections;

#endregion

namespace st_64e859ad216d4a1b946f3a81fb37d406
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // Begin BI xPress Code
            UpdateAlertList();
            // End BI xPress Code

            Dts.TaskResult = (int)ScriptResults.Success;
        }

#region ScriptResults declaration

        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };

#endregion

        private const string NotificationFrameworkAlertListVariableName = "User::varSSISOpsNF_AlertList";
        private const string NotificationFrameworkAlertListAllVariableName = "User::varSSISOpsNF_AlertList_All";
        private const string NotificationFrameworkCounter = "User::varSSISOpsNF_Notification_Counter";
        private const string NotificationFrameworkSubComponentName = "BI xPress Notification Framework Send Alert";

        private void UpdateAlertList()
        {
            System.Collections.Hashtable oRuntimeSettings = GetRuntimeSettings();

            string sFilteredAlerts = "|" + oRuntimeSettings["FILTERED_ALERTS"].ToString() + "|";

            string errorCodeValue = ReadVariable("System::ErrorCode").ToString();

            if (sFilteredAlerts.IndexOf("|" + errorCodeValue.ToString() + "|") >= 0)
                return; // Filter This

            string errorDescription = ReadVariable("System::ErrorDescription").ToString();
            string sourceName = ReadVariable("System::SourceName").ToString();
            string sourceId = ReadVariable("System::SourceID").ToString();

            bool isErrorScope = false;

            try
            {
                if (Dts.VariableDispenser.Contains("System::Cancel"))
                    isErrorScope = true;
                else
                    isErrorScope = false;
            }
            catch (Exception)
            {
                isErrorScope = false;
            }

            AlertType alertType = isErrorScope ? AlertType.ErrorAlert : AlertType.WarningAlert;

            int errorCode;

            if (string.IsNullOrEmpty(errorCodeValue) || !int.TryParse(errorCodeValue, out errorCode))
                errorCode = 0;

            AddAlertInfo(errorDescription, errorCode, sourceName, sourceId, alertType);
        }

        private void AddAlertInfo(string alertDescription, int alertCode, string sourceName, string sourceId, AlertType alertType)
        {
            if (string.IsNullOrEmpty(alertDescription))
                alertDescription = "<NO ALERT DESCRIPTION GIVEN>";

            if (string.IsNullOrEmpty(sourceName))
                sourceName = "<NO ALERT SOURCE NAME GIVEN>";

            System.Text.StringBuilder alertListBuilder = new System.Text.StringBuilder();
            System.Text.StringBuilder alertListAllBuilder = new System.Text.StringBuilder();

            AlertInfo alertInfo = new AlertInfo(alertDescription, alertCode, sourceName, sourceId, alertType);

            System.Xml.Serialization.XmlSerializer xmlSerializer = new System.Xml.Serialization.XmlSerializer(typeof(AlertInfo), new Type[] { typeof(AlertType) });

            // Build a flat list of XML AlertInfo elements that don't have to be validated each time we add new node(s).  This will save on processing time but will increase code complexity in the OnPostExecute event handler.
            using (System.IO.StringWriter stringWriter = new System.IO.StringWriter())
            {
                xmlSerializer.Serialize(stringWriter, alertInfo);

                System.Xml.XmlDocument alertInfoDocument = new System.Xml.XmlDocument();

                alertInfoDocument.LoadXml(stringWriter.GetStringBuilder().ToString());

                foreach (System.Xml.XmlNode documentNode in alertInfoDocument.ChildNodes)
                {
                    if (documentNode is System.Xml.XmlDeclaration || documentNode is System.Xml.XmlComment || documentNode is System.Xml.XmlAttribute || string.IsNullOrEmpty(documentNode.OuterXml))
                        continue;

                    string outerXml = documentNode.OuterXml;

                    outerXml = outerXml.Replace("xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"", string.Empty).Replace("xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"", string.Empty);

                    alertListBuilder.Append(outerXml);
                    alertListAllBuilder.Append(outerXml);
                }
            }

            string updatedAlertList = ReadVariable(NotificationFrameworkAlertListVariableName) as string;
            string existingAlertList;

            if (!string.IsNullOrEmpty(updatedAlertList))
                existingAlertList = updatedAlertList + alertListBuilder.ToString();
            else
                existingAlertList = alertListBuilder.ToString();

            WriteVariable(NotificationFrameworkAlertListVariableName, existingAlertList);

            string updatedAlertListAll = ReadVariable(NotificationFrameworkAlertListAllVariableName) as string;
            string existingAlertListAll;

            if (!string.IsNullOrEmpty(updatedAlertListAll))
                existingAlertListAll = updatedAlertListAll + alertListAllBuilder.ToString();
            else
                existingAlertListAll = alertListAllBuilder.ToString();
            
            WriteVariable(NotificationFrameworkAlertListAllVariableName, existingAlertListAll);
        }
        private void SetSetting(string SettingName, object Value, System.Collections.Hashtable runtimeSettings)
        {
            SettingName = SettingName.ToUpper(System.Globalization.CultureInfo.InvariantCulture).Trim();

            if (!runtimeSettings.ContainsKey(SettingName))
                throw new Exception(SettingName + " setting doesn't exist in runtime setting list.");

            runtimeSettings[SettingName] = Value;
        }

        private object GetSetting(string settingName, System.Collections.Hashtable runtimeSettings)
        {
            settingName = settingName.ToUpper(System.Globalization.CultureInfo.InvariantCulture).Trim();

            if (runtimeSettings.ContainsKey(settingName))
                return runtimeSettings[settingName];

            // If key not found then set default 
            switch (settingName)
            {
                case "MAX_NOTIFICATIONS":
                    return 1;
                case "ENABLE_ROWCOUNT_THRESHOLD":
                    return false;
                case "ENABLE_TIME_THRESHOLD":
                    return false;
                case "PRIORITY_MODE":
                    //// DELAYED (After Package) or URGENT (After Task) 
                    return "URGENT";
                case "EMAIL_FORMAT":
                    //// TEXT or HTML 
                    return "TEXT";
                case "SMTP_PORT":
                    //// Default 25 
                    return 25;
                case "SMTP_USESSL":
                    //// Default False
                    return false;
                case "SMTP_UID":
                    return "";
                case "SMTP_PWD":
                    return "";
                case "SMS_EMAILLIST":
                    ////Must be pipe seperated e.g. 66633422@tmobile.net|11223445@tmobile.net .... 
                    return "";
                case "FILTERED_ALERTS":
                    ////Must be pipe seperated e.g. -2344556|-11223445 .... 
                    return "";
                case "NOTIFY_ONERROR":
                    return true;
                case "NOTIFY_ONWARNING":
                    return false;
                case "NOTIFY_ONSUCCESS":
                    return false;
                case "NOTIFY_ONCOMPLETE":
                    return false;
                case "SMS_MAXLENGTH":
                    return 160;
                case "NF_CHECK":
                    return "";
                case "CC_EMAILLIST":
                    return "";
                case "BCC_EMAILLIST":
                    return "";
                case "NOTIFY_USING_EMAIL":
                    return true;
                case "NOTIFY_USING_SMS":
                    return true;
                case "NOTIFY_USING_EVENTLOG":
                    return false;
                case "NOTIFY_USING_LOGFILE":
                    return false;
                case "LOG_FOLDER_PATH":
                    return "C:\\SSIS\\Log";
                case "DELETE_LOG_OLDER_THAN_DAYS":
                    return 5;
                case "USE_CUSTOM_EMAIL_TEMPLATE":
                    return false;
                case "CUSTOM_EMAIL_TEMPLATE_FILEPATH":
                    return "C:\\SSIS\\Config\\NF_EmailTemplate.htm";
                default:
                    return null;
            }
        }

        [Serializable]
        public enum AlertType
        {
            ErrorAlert = 1,
            WarningAlert = 2,
            TimeThresholdAlert = 3,
            RowCountThresholdAlert = 4
        }

        // NOTE : Do not use double quotes {"} and semicolon {;} in the value field. E.g. MAX_NOTIFICATIONS=3;PRIORITY_MODE=URGENT;SMTP_UID=emailuser;SMTP_PWD=xx;@@4e; 
        // In above example SMTP_PWD=xx;@@4e this will cause problem in parsing because password is using {;}. System will consider password xx instead of xx;@@4e. 
        public System.Collections.Hashtable GetRuntimeSettings()
        {
            object otherConfigSettingsVariableValue = ReadVariable("User::varSSISOpsNF_OtherConfigSettings");
            string otherConfigSettings = otherConfigSettingsVariableValue != null ? otherConfigSettingsVariableValue.ToString() : null;

            System.Collections.Hashtable runtimeSettings = new System.Collections.Hashtable();

            // Set Default values
            runtimeSettings.Add("MAX_NOTIFICATIONS", 1);
            runtimeSettings.Add("ENABLE_ROWCOUNT_THRESHOLD", false);
            runtimeSettings.Add("ENABLE_TIME_THRESHOLD", false);
            runtimeSettings.Add("PRIORITY_MODE", "DELAYED");
            runtimeSettings.Add("EMAIL_FORMAT", "HTML");
            runtimeSettings.Add("SMTP_PORT", 25);
            runtimeSettings.Add("SMTP_USESSL", false);
            runtimeSettings.Add("SMTP_UID", string.Empty);
            runtimeSettings.Add("SMTP_PWD", string.Empty);
            runtimeSettings.Add("SMS_EMAILLIST", string.Empty);
            runtimeSettings.Add("FILTERED_ALERTS", string.Empty);
            runtimeSettings.Add("NOTIFY_ONERROR", true);
            runtimeSettings.Add("NOTIFY_ONWARNING", false);
            runtimeSettings.Add("NOTIFY_ONSUCCESS", false);
            runtimeSettings.Add("NOTIFY_ONCOMPLETE", false);
            runtimeSettings.Add("SMS_MAXLENGTH", 160);
            runtimeSettings.Add("CC_EMAILLIST", string.Empty);
            runtimeSettings.Add("BCC_EMAILLIST", string.Empty);
            runtimeSettings.Add("NOTIFY_USING_EMAIL", true);
            runtimeSettings.Add("NOTIFY_USING_SMS", true);
            runtimeSettings.Add("NOTIFY_USING_EVENTLOG", false);
            runtimeSettings.Add("NOTIFY_USING_LOGFILE", false);
            runtimeSettings.Add("LOG_FOLDER_PATH", "C:\\SSIS\\Log");
            runtimeSettings.Add("DELETE_LOG_OLDER_THAN_DAYS", 5);
            runtimeSettings.Add("USE_CUSTOM_EMAIL_TEMPLATE", false);
            runtimeSettings.Add("CUSTOM_EMAIL_TEMPLATE_FILEPATH", "C:\\SSIS\\Config\\NF_EmailTemplate.htm");

            if (!string.IsNullOrEmpty(otherConfigSettings))
            {
                // Parse settings (Setting1=value1;Setting2=value2;Setting3=value3 ...... SettingN=valueN;)

                const string PAIR_SEP = ";";
                const string NAMEVAL_SEP = "=";

                string[] arrNameValue = otherConfigSettings.Split(PAIR_SEP.ToCharArray());

                foreach (string sPair in arrNameValue)
                {
                    string[] arrTemp = sPair.Split(NAMEVAL_SEP.ToCharArray(), 2, StringSplitOptions.RemoveEmptyEntries);

                    try
                    {
                        if (arrTemp.Length >= 2)
                        {
                            string settingName = arrTemp[0];
                            string settingValue = arrTemp[1];

                            switch (settingName.ToUpper().Trim())
                            {
                                case "MAX_NOTIFICATIONS":
                                    runtimeSettings["MAX_NOTIFICATIONS"] = Convert.ToInt32(settingValue);
                                    break;
                                case "ENABLE_ROWCOUNT_THRESHOLD":
                                    runtimeSettings["ENABLE_ROWCOUNT_THRESHOLD"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "ENABLE_TIME_THRESHOLD":
                                    runtimeSettings["ENABLE_TIME_THRESHOLD"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "PRIORITY_MODE":
                                    // DELAYED (After Package) or URGENT (After Task) 
                                    runtimeSettings["PRIORITY_MODE"] = (string)settingValue;
                                    break;
                                case "EMAIL_FORMAT":
                                    // TEXT or HTML 
                                    runtimeSettings["EMAIL_FORMAT"] = (string)settingValue;
                                    break;
                                case "SMTP_PORT":
                                    // Default 25 
                                    runtimeSettings["SMTP_PORT"] = Convert.ToInt32(settingValue);
                                    break;
                                case "SMTP_USESSL":
                                    // Default false
                                    runtimeSettings["SMTP_USESSL"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "SMTP_UID":
                                    runtimeSettings["SMTP_UID"] = (string)settingValue;
                                    break;
                                case "SMTP_PWD":
                                    runtimeSettings["SMTP_PWD"] = (string)settingValue;
                                    break;
                                case "SMS_EMAILLIST":
                                    // Must be pipe seperated e.g. 66633422@tmobile.net|11223445@tmobile.net .... 
                                    runtimeSettings["SMS_EMAILLIST"] = (string)settingValue;
                                    break;
                                case "FILTERED_ALERTS":
                                    ////Must be pipe seperated e.g. -111|-222 .... 
                                    runtimeSettings["FILTERED_ALERTS"] = (string)settingValue;
                                    break;
                                case "NOTIFY_ONERROR":
                                    runtimeSettings["NOTIFY_ONERROR"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_ONWARNING":
                                    runtimeSettings["NOTIFY_ONWARNING"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_ONSUCCESS":
                                    runtimeSettings["NOTIFY_ONSUCCESS"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_ONCOMPLETE":
                                    runtimeSettings["NOTIFY_ONCOMPLETE"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "SMS_MAXLENGTH":
                                    runtimeSettings["SMS_MAXLENGTH"] = Convert.ToInt32(settingValue);
                                    break;
                                case "CC_EMAILLIST":
                                    runtimeSettings["CC_EMAILLIST"] = (string)settingValue;
                                    break;
                                case "BCC_EMAILLIST":
                                    runtimeSettings["BCC_EMAILLIST"] = (string)settingValue;
                                    break;
                                case "NOTIFY_USING_EMAIL":
                                    runtimeSettings["NOTIFY_USING_EMAIL"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_USING_SMS":
                                    runtimeSettings["NOTIFY_USING_SMS"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_USING_EVENTLOG":
                                    runtimeSettings["NOTIFY_USING_EVENTLOG"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_USING_LOGFILE":
                                    runtimeSettings["NOTIFY_USING_LOGFILE"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "LOG_FOLDER_PATH":
                                    runtimeSettings["LOG_FOLDER_PATH"] = (string)settingValue;
                                    break;
                                case "DELETE_LOG_OLDER_THAN_DAYS":
                                    runtimeSettings["DELETE_LOG_OLDER_THAN_DAYS"] = Convert.ToInt32(settingValue);
                                    break;
                                case "USE_CUSTOM_EMAIL_TEMPLATE":
                                    runtimeSettings["USE_CUSTOM_EMAIL_TEMPLATE"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "CUSTOM_EMAIL_TEMPLATE_FILEPATH":
                                    runtimeSettings["CUSTOM_EMAIL_TEMPLATE_FILEPATH"] = (string)settingValue;
                                    break;
                            }
                        }
                    }
                    catch (Exception ex)
                    {
                        Dts.Events.FireError(0, "BI xPress Notification Framework Event Handler", ex.Message, string.Empty, 0);
                    }
                }
            }

            SetNF(runtimeSettings);

            WriteVariable(NotificationFrameworkCounter, 0);

            return runtimeSettings;
        }

        public void SetNF(Hashtable runtimeSettings)
        {
            runtimeSettings.Add(((Char)78).ToString() + ((Char)70).ToString() + ((Char)95).ToString() + ((Char)67).ToString() + ((Char)72).ToString() + ((Char)69).ToString() + ((Char)67).ToString() + ((Char)75).ToString(), ReadVariable("User::varSSISOpsNF_" + ((Char)67).ToString() + ((Char)72).ToString() + ((Char)69).ToString() + ((Char)67).ToString() + ((Char)75).ToString()));
        }

        [Serializable]
        public class AlertInfo
        {
            /// <summary>
            /// Retained for serialization purposes.
            /// </summary>
            public AlertInfo()
            {
            }

            public AlertInfo(string alertDescription, int alertCode, string sourceName, string sourceId, AlertType alertType)
                : this(alertDescription, alertCode, sourceName, sourceId, alertType, DateTime.Now)
            {
            }

            public AlertInfo(string alertDescription, int alertCode, string sourceName, string sourceId, AlertType alertType, DateTime timeStamp)
            {
                AlertCode = alertCode;
                AlertDescription = alertDescription;
                AlertType = alertType;
                SourceName = sourceName;
                SourceId = sourceId;
                AlertTimeStamp = timeStamp;
            }

            public int AlertCode { get; set; }
            public string AlertDescription { get; set; }
            public DateTime AlertTimeStamp { get; set; }
            public AlertType AlertType { get; set; }
            public string SourceId { get; set; }
            public string SourceName { get; set; }
        }

        private void WriteVariable(string variableName, object variableValue)
        {
            Variables vars = null;
            bool isUnlocked = false;

            try
            {
                Dts.VariableDispenser.LockForWrite(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    vars[variableName].Value = variableValue;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }
        }
        private object ReadVariable(string variableName)
        {
            Variables vars = null;
            bool isUnlocked = false;
            object result;

            try
            {
                Dts.VariableDispenser.LockForRead(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    result = vars[variableName].Value;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }

            return result;
        }

    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>st_64e859ad216d4a1b946f3a81fb37d406</msb:CodeName>
		<msb:DisplayName>st_64e859ad216d4a1b946f3a81fb37d406</msb:DisplayName>
		<msb:ProjectId>{8180B47B-946E-4223-80A7-5D21F3AE393F}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_64e859ad216d4a1b946f3a81fb37d406.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_64e859ad216d4a1b946f3a81fb37d406.Properties.Settings.get_Default():st_64e859ad216d4a1b946f3a81fb37d406.Properties.Sett" +
    "ings")]

namespace st_64e859ad216d4a1b946f3a81fb37d406.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_64e859ad216d4a1b946f3a81fb37d406.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_64e859ad216d4a1b946f3a81fb37d406.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_64e859ad216d4a1b946f3a81fb37d406.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace st_64e859ad216d4a1b946f3a81fb37d406.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("st_64e859ad216d4a1b946f3a81fb37d406.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="st_64e859ad216d4a1b946f3a81fb37d406.dll">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
2ggQAGEA2ggQAGkA2ggGANEA2ggGAOEA2ggGAAEB2ggVAHEALAobABEBcwoBAHkA4QYuALkA5gUz
ABkBTQo3ABkBxAU+ABEBXQhDACEB6wlJABkBWQtOACkBwQNTAIkA2ggGADEBEgJyAJEA2gh7AJkA
2ggGAJEAugWGAEkB2ggGAJkAHAiOAEkBzAYQAKkAfQmTAFEBzAiZAKEAmQqeAKkA1AYzABkBYQui
ABkBfQGlAIkAdgGrAKEACwuxALEAuQMGABkBTQq1APEAcAO7ABkBQQjAABkB+gYzAHkANAvGAIEA
2ggQAHkA6gbLABkBTQvVAHkA2ggGAHkAxADLABkBKAvsABkBYQrxABkBYQr4ABkBQQgzAIEBAQAD
AYEBEAdOABEBQgoIAYEAwwEzAIkBtggOAZEB5gUzABkBTQobASEB3wMQACEBuwknAcEA4QYuAZkB
nAU1AcEAIgYGACEBWwoGACEBuAAQAJkBkgWeAHEA2ggGALkA2ggGADEBQAtBAekA2ghHAQkB2ggG
ABkBGgpUARkBFwZZAdkAIAtdAQ4ABAB0AQ4ACACtAQ4ADADuAQ4AEAA9AggAJACUAggAKACZAggA
MACZAggANACeAggAOACjAggAPACoAikAewB7Ay4ACwBTAy4AEwBcAy4AGwB7Ay4AIwCEAy4AKwCt
Ay4AMwCtAy4AOwCzAy4AQwCEAy4ASwDCAy4AUwCtAy4AWwDiA0MAYwCZAkkAewB7A2MAcwCZAqMA
awCZAuEAawCZAgECawCZAiECawCZAkECawCZAmECawCZAoECawCZAqECawCZAsACawCZAuACawCZ
AgADawCZAiADawCZAkADawCZAmADawCZAoADawCZAqADawCZAsADawCZAuADawCZAgAEawCZAiAE
awCZAiEAWgDRANsAFwEhAToBTwEDAAEABAADAAgABAAAADEIMgMAAH0DNwMAAGsKPAMAAKcBQQMA
AKwHRQMAAP4HSQMAACwDTgMAAKYARQMAADcCRQMCAAwAAwACAA0ABQABAA4ABQACAA8ABwACABYA
CQABABcACQACABgACwABABkACwACABoADQABABsADQACABwADwABAB0ADwACAB4AEQABAB8AEQAC
ACAAEwABACEAEwAEgAAAAQAAADsahVsAAAAAAAAJAAAABAAAAAAAAAAAAAAAYgGMAAAAAAANAAAA
AAAAAAAAAABrASkGAAAAAAQAAAAAAAAAAAAAAGIBwQYAAAAADQAAAAAAAAAAAAAAawFlAAAAAAAE
AAAAAAAAAAAAAABiAfMGAAAAAAAAAAABAAAAKwkAAAYAAgAHAAIACAACAAAAAAAAVG9JbnQzMgBz
dF82NGU4NTlhZDIxNmQ0YTFiOTQ2ZjNhODFmYjM3ZDQwNgA8TW9kdWxlPgA8UHJpdmF0ZUltcGxl
bWVudGF0aW9uRGV0YWlscz4AU2V0TkYAU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFu
YWdlZERUUwB2YWx1ZV9fAG1zY29ybGliAGdldF9Tb3VyY2VJZABzZXRfU291cmNlSWQAc291cmNl
SWQATG9ja0ZvclJlYWQAQWRkADxTb3VyY2VJZD5rX19CYWNraW5nRmllbGQAPEFsZXJ0Q29kZT5r
X19CYWNraW5nRmllbGQAPFNvdXJjZU5hbWU+a19fQmFja2luZ0ZpZWxkADxBbGVydFR5cGU+a19f
QmFja2luZ0ZpZWxkADxBbGVydERlc2NyaXB0aW9uPmtfX0JhY2tpbmdGaWVsZAA8QWxlcnRUaW1l
U3RhbXA+a19fQmFja2luZ0ZpZWxkAEFwcGVuZABSZXBsYWNlAGRlZmF1bHRJbnN0YW5jZQBnZXRf
QWxlcnRDb2RlAHNldF9BbGVydENvZGUAYWxlcnRDb2RlAFhtbE5vZGUAZ2V0X01lc3NhZ2UAUmVh
ZFZhcmlhYmxlAFdyaXRlVmFyaWFibGUASURpc3Bvc2FibGUASGFzaHRhYmxlAFJ1bnRpbWVUeXBl
SGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAGdldF9Tb3VyY2VOYW1lAHNldF9Tb3VyY2VOYW1lAHNv
dXJjZU5hbWUATm90aWZpY2F0aW9uRnJhbWV3b3JrQWxlcnRMaXN0QWxsVmFyaWFibGVOYW1lAE5v
dGlmaWNhdGlvbkZyYW1ld29ya0FsZXJ0TGlzdFZhcmlhYmxlTmFtZQB2YXJpYWJsZU5hbWUAU2V0
dGluZ05hbWUAc2V0dGluZ05hbWUATm90aWZpY2F0aW9uRnJhbWV3b3JrU3ViQ29tcG9uZW50TmFt
ZQBEYXRlVGltZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAGdldF9BbGVydFR5cGUA
c2V0X0FsZXJ0VHlwZQBhbGVydFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBy
ZXNvdXJjZUN1bHR1cmUAZ2V0X0ludmFyaWFudEN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9k
ZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAERpc3Bvc2UAVHJ5UGFyc2UARWRpdG9yQnJv
d3NhYmxlU3RhdGUATG9ja0ZvcldyaXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVn
Z2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2Fi
bGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJp
YnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAWG1sQXR0cmlidXRlAEFzc2VtYmx5Q29uZmln
dXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9u
UmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29w
eXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJs
eUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVl
AHNldF9WYWx1ZQB2YXJpYWJsZVZhbHVlAHZhbHVlAFNlcmlhbGl6ZQBJbmRleE9mAFN5c3RlbS5S
dW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcAR2V0U2V0dGluZwBTZXRTZXR0aW5nAENvbXB1dGVT
dHJpbmdIYXNoAGdldF9MZW5ndGgAVW5sb2NrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFz
awBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1v
ZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABzdF82NGU4NTlhZDIxNmQ0YTFiOTQ2ZjNhODFmYjM3
ZDQwNi5kbGwAU3lzdGVtLlhtbABMb2FkWG1sAGdldF9PdXRlclhtbABnZXRfSXRlbQBzZXRfSXRl
bQBTeXN0ZW0AVHJpbQBFbnVtAHJlc291cmNlTWFuAFRvQm9vbGVhbgBTY3JpcHRNYWluAFhtbERl
Y2xhcmF0aW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3Rl
bS5YbWwuU2VyaWFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBFeGNlcHRpb24AZ2V0X0FsZXJ0
RGVzY3JpcHRpb24Ac2V0X0FsZXJ0RGVzY3JpcHRpb24AYWxlcnREZXNjcmlwdGlvbgBDdWx0dXJl
SW5mbwBBZGRBbGVydEluZm8AZ2V0X0FsZXJ0VGltZVN0YW1wAHNldF9BbGVydFRpbWVTdGFtcAB0
aW1lU3RhbXAAQ2hhcgBHZXRTdHJpbmdCdWlsZGVyAGdldF9SZXNvdXJjZU1hbmFnZXIAVG9VcHBl
cgBFdmVudHNPYmplY3RXcmFwcGVyAGdldF9WYXJpYWJsZURpc3BlbnNlcgBTdHJpbmdXcml0ZXIA
VGV4dFdyaXRlcgBOb3RpZmljYXRpb25GcmFtZXdvcmtDb3VudGVyAFhtbFNlcmlhbGl6ZXIARmly
ZUVycm9yAElFbnVtZXJhdG9yAEdldEVudW1lcmF0b3IALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFn
bm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMA
c3RfNjRlODU5YWQyMTZkNGExYjk0NmYzYTgxZmIzN2Q0MDYuUHJvcGVydGllcy5SZXNvdXJjZXMu
cmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAGdldF9DaGlsZE5vZGVzAHN0XzY0ZTg1OWFkMjE2ZDRh
MWI5NDZmM2E4MWZiMzdkNDA2LlByb3BlcnRpZXMAR2V0VmFyaWFibGVzAEdldFJ1bnRpbWVTZXR0
aW5ncwBydW50aW1lU2V0dGluZ3MAQ29udGFpbnMAU3lzdGVtLkNvbGxlY3Rpb25zAFN0cmluZ1Nw
bGl0T3B0aW9ucwBnZXRfQ2hhcnMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAZ2V0X0V2
ZW50cwBDb25jYXQAT2JqZWN0AFJlc2V0AFNwbGl0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0
AFhtbENvbW1lbnQAWG1sRG9jdW1lbnQAZ2V0X0N1cnJlbnQAVGltZVRocmVzaG9sZEFsZXJ0AFJv
d0NvdW50VGhyZXNob2xkQWxlcnQAV2FybmluZ0FsZXJ0AEVycm9yQWxlcnQAQ29udmVydABYbWxO
b2RlTGlzdABVcGRhdGVBbGVydExpc3QATW92ZU5leHQAU3lzdGVtLlRleHQAZ2V0X05vdwBUb0No
YXJBcnJheQBDb250YWluc0tleQBnZXRfQXNzZW1ibHkAb3BfRXF1YWxpdHkASXNOdWxsT3JFbXB0
eQAAAAN8AAAfRgBJAEwAVABFAFIARQBEAF8AQQBMAEUAUgBUAFMAACNTAHkAcwB0AGUAbQA6ADoA
RQByAHIAbwByAEMAbwBkAGUAADFTAHkAcwB0AGUAbQA6ADoARQByAHIAbwByAEQAZQBzAGMAcgBp
AHAAdABpAG8AbgAAJVMAeQBzAHQAZQBtADoAOgBTAG8AdQByAGMAZQBOAGEAbQBlAAAhUwB5AHMA
dABlAG0AOgA6AFMAbwB1AHIAYwBlAEkARAAAHVMAeQBzAHQAZQBtADoAOgBDAGEAbgBjAGUAbAAA
OTwATgBPACAAQQBMAEUAUgBUACAARABFAFMAQwBSAEkAUABUAEkATwBOACAARwBJAFYARQBOAD4A
ADk8AE4ATwAgAEEATABFAFIAVAAgAFMATwBVAFIAQwBFACAATgBBAE0ARQAgAEcASQBWAEUATgA+
AABZeABtAGwAbgBzADoAeABzAGQAPQAiAGgAdAB0AHAAOgAvAC8AdwB3AHcALgB3ADMALgBvAHIA
ZwAvADIAMAAwADEALwBYAE0ATABTAGMAaABlAG0AYQAiAABreABtAGwAbgBzADoAeABzAGkAPQAi
AGgAdAB0AHAAOgAvAC8AdwB3AHcALgB3ADMALgBvAHIAZwAvADIAMAAwADEALwBYAE0ATABTAGMA
aABlAG0AYQAtAGkAbgBzAHQAYQBuAGMAZQAiAAE5VQBzAGUAcgA6ADoAdgBhAHIAUwBTAEkAUwBP
AHAAcwBOAEYAXwBBAGwAZQByAHQATABpAHMAdAAAQVUAcwBlAHIAOgA6AHYAYQByAFMAUwBJAFMA
TwBwAHMATgBGAF8AQQBsAGUAcgB0AEwAaQBzAHQAXwBBAGwAbAAAXyAAcwBlAHQAdABpAG4AZwAg
AGQAbwBlAHMAbgAnAHQAIABlAHgAaQBzAHQAIABpAG4AIAByAHUAbgB0AGkAbQBlACAAcwBlAHQA
dABpAG4AZwAgAGwAaQBzAHQALgABI00AQQBYAF8ATgBPAFQASQBGAEkAQwBBAFQASQBPAE4AUwAA
M0UATgBBAEIATABFAF8AUgBPAFcAQwBPAFUATgBUAF8AVABIAFIARQBTAEgATwBMAEQAACtFAE4A
QQBCAEwARQBfAFQASQBNAEUAXwBUAEgAUgBFAFMASABPAEwARAAAG1AAUgBJAE8AUgBJAFQAWQBf
AE0ATwBEAEUAABlFAE0AQQBJAEwAXwBGAE8AUgBNAEEAVAAAE1MATQBUAFAAXwBQAE8AUgBUAAAX
UwBNAFQAUABfAFUAUwBFAFMAUwBMAAARUwBNAFQAUABfAFUASQBEAAARUwBNAFQAUABfAFAAVwBE
AAAbUwBNAFMAXwBFAE0AQQBJAEwATABJAFMAVAAAHU4ATwBUAEkARgBZAF8ATwBOAEUAUgBSAE8A
UgAAIU4ATwBUAEkARgBZAF8ATwBOAFcAQQBSAE4ASQBOAEcAACFOAE8AVABJAEYAWQBfAE8ATgBT
AFUAQwBDAEUAUwBTAAAjTgBPAFQASQBGAFkAXwBPAE4AQwBPAE0AUABMAEUAVABFAAAbUwBNAFMA
XwBNAEEAWABMAEUATgBHAFQASAAAEU4ARgBfAEMASABFAEMASwAAGUMAQwBfAEUATQBBAEkATABM
AEkAUwBUAAAbQgBDAEMAXwBFAE0AQQBJAEwATABJAFMAVAAAJU4ATwBUAEkARgBZAF8AVQBTAEkA
TgBHAF8ARQBNAEEASQBMAAAhTgBPAFQASQBGAFkAXwBVAFMASQBOAEcAXwBTAE0AUwAAK04ATwBU
AEkARgBZAF8AVQBTAEkATgBHAF8ARQBWAEUATgBUAEwATwBHAAApTgBPAFQASQBGAFkAXwBVAFMA
SQBOAEcAXwBMAE8ARwBGAEkATABFAAAfTABPAEcAXwBGAE8ATABEAEUAUgBfAFAAQQBUAEgAADVE
AEUATABFAFQARQBfAEwATwBHAF8ATwBMAEQARQBSAF8AVABIAEEATgBfAEQAQQBZAFMAADNVAFMA
RQBfAEMAVQBTAFQATwBNAF8ARQBNAEEASQBMAF8AVABFAE0AUABMAEEAVABFAAA9QwBVAFMAVABP
AE0AXwBFAE0AQQBJAEwAXwBUAEUATQBQAEwAQQBUAEUAXwBGAEkATABFAFAAQQBUAEgAAA1VAFIA
RwBFAE4AVAAACVQARQBYAFQAAAEAF0MAOgBcAFMAUwBJAFMAXABMAG8AZwAAR0MAOgBcAFMAUwBJ
AFMAXABDAG8AbgBmAGkAZwBcAE4ARgBfAEUAbQBhAGkAbABUAGUAbQBwAGwAYQB0AGUALgBoAHQA
bQAATVUAcwBlAHIAOgA6AHYAYQByAFMAUwBJAFMATwBwAHMATgBGAF8ATwB0AGgAZQByAEMAbwBu
AGYAaQBnAFMAZQB0AHQAaQBuAGcAcwAAD0QARQBMAEEAWQBFAEQAAAlIAFQATQBMAAADOwAAAz0A
AF1CAEkAIAB4AFAAcgBlAHMAcwAgAE4AbwB0AGkAZgBpAGMAYQB0AGkAbwBuACAARgByAGEAbQBl
AHcAbwByAGsAIABFAHYAZQBuAHQAIABIAGEAbgBkAGwAZQByAABPVQBzAGUAcgA6ADoAdgBhAHIA
UwBTAEkAUwBPAHAAcwBOAEYAXwBOAG8AdABpAGYAaQBjAGEAdABpAG8AbgBfAEMAbwB1AG4AdABl
AHIAACdVAHMAZQByADoAOgB2AGEAcgBTAFMASQBTAE8AcABzAE4ARgBfAABxcwB0AF8ANgA0AGUA
OAA1ADkAYQBkADIAMQA2AGQANABhADEAYgA5ADQANgBmADMAYQA4ADEAZgBiADMANwBkADQAMAA2
AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAANGqN6LlxfkqNrmGX
L4r8tQAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERfQUgABKAiQwHCBI9Dg4ODgIRHAgEIAEcHAMg
AA4GAAMODg4OBCABCA4FIAASgJEEIAECDgQAAQIOBgACAg4QCBcHDRJFEkUSIBJJDg4ODhJNElES
VQ4SWQgAARKAmRGAnQogAgESgJkdEoCZByACARKAoRwEIAASRQUgABKAqQQgABJRAyAAHAIGDgUg
Ag4ODgUgARJFDgMgAAIFAAIODg4EAAASeQUgAQ4SeQQgAQIcBSACARwcAwcBCQUAAgIODhAHChwO
Ej0dDggdDg4OCRJBBCAAHQMGIAEdDh0DCiADHQ4dAwgRgL0EAAEIDgUgABKAxQggBQIIDg4OCAMH
AQMFAAEOHQ4FBwISYQIGIAEBEBJhBiABEoDNHAQgAQEcBgcDEmECHAUgABKA0QcgAgEOEoDRBAcC
CQgEIAEDCAMgAAgEAAARbQi3elxWGTTgiQiJhF3NgIDMkThVAHMAZQByADoAOgB2AGEAcgBTAFMA
SQBTAE8AcABzAE4ARgBfAEEAbABlAHIAdABMAGkAcwB0AEBVAHMAZQByADoAOgB2AGEAcgBTAFMA
SQBTAE8AcABzAE4ARgBfAEEAbABlAHIAdABMAGkAcwB0AF8AQQBsAGwATlUAcwBlAHIAOgA6AHYA
YQByAFMAUwBJAFMATwBwAHMATgBGAF8ATgBvAHQAaQBmAGkAYwBhAHQAaQBvAG4AXwBDAG8AdQBu
AHQAZQByAFZCAEkAIAB4AFAAcgBlAHMAcwAgAE4AbwB0AGkAZgBpAGMAYQB0AGkAbwBuACAARgBy
AGEAbQBlAHcAbwByAGsAIABTAGUAbgBkACAAQQBsAGUAcgB0AAQAAAAABAEAAAAEAgAAAAQDAAAA
BAQAAAADBhJ1AwYSeQMGEhACBggDBhEYAwYRHAMGEW0JIAUBDggODhEcByADAQ4cEj0GIAIcDhI9
BCAAEj0FIAEBEj0FIAIBDhwEIAEcDgQAABJ1BQABARJ5BAAAEhADAAABBAABCQ4LIAYBDggODhEc
EW0EIAARbQUgAQERbQQgABEcBSABAREcBAgAEnUECAASeQQIABIQAygACAMoAA4EKAARbQQoABEc
CAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNzdF82
NGU4NTlhZDIxNmQ0YTFiOTQ2ZjNhODFmYjM3ZDQwNgAABQEAAAAADgEACU1pY3Jvc29mdAAAHwEA
GkNvcHlyaWdodCBAIE1pY3Jvc29mdCAyMDE4AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0
LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNbQAAADOyu++AQAA
AJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249
NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5
I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQA
AACcVwAAAAAAAAAAAAC2VwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqFcAAAAAAAAAAAAAAABf
Q29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAA
AAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAA+BAAAAAAAAAAA
AAA+BDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEAhVs7
GgAAAQCFWzsaPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUA
SQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEngMAAAEAUwB0
AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAegMAAAEAMAAwADAAMAAwADQAYgAwAAAAGgABAAEA
QwBvAG0AbQBlAG4AdABzAAAAAAAAADQACgABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAATQBp
AGMAcgBvAHMAbwBmAHQAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
cwB0AF8ANgA0AGUAOAA1ADkAYQBkADIAMQA2AGQANABhADEAYgA5ADQANgBmADMAYQA4ADEAZgBi
ADMANwBkADQAMAA2AAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYA
NwAxADUALgAyADMANAAyADkAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAcwB0
AF8ANgA0AGUAOAA1ADkAYQBkADIAMQA2AGQANABhADEAYgA5ADQANgBmADMAYQA4ADEAZgBiADMA
NwBkADQAMAA2AC4AZABsAGwAAABaABsAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABD
AG8AcAB5AHIAaQBnAGgAdAAgAEAAIABNAGkAYwByAG8AcwBvAGYAdAAgADIAMAAxADgAAAAAACoA
AQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBp
AG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAHMAdABfADYANABlADgANQA5AGEAZAAyADEANgBkADQA
YQAxAGIAOQA0ADYAZgAzAGEAOAAxAGYAYgAzADcAZAA0ADAANgAuAGQAbABsAAAAaAAkAAEAUABy
AG8AZAB1AGMAdABOAGEAbQBlAAAAAABzAHQAXwA2ADQAZQA4ADUAOQBhAGQAMgAxADYAZAA0AGEA
MQBiADkANAA2AGYAMwBhADgAMQBmAGIAMwA3AGQANAAwADYAAABCAA8AAQBQAHIAbwBkAHUAYwB0
AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYANwAxADUALgAyADMANAAyADkAAAAAAEYADwABAEEA
cwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYANwAxADUALgAyADMANAAy
ADkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAMAAAAyDcAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnError].PrecedenceConstraints[{028FBDA7-7FD0-493C-95C6-F1007DFFB48D\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{028FBDA7-7FD0-493C-95C6-F1007DFFB48D}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceID]==@[System::PackageID] &amp;&amp; @[System::SourceName]==@[System::PackageName] &amp;&amp; SUBSTRING(@[System::SourceName], 1, 12)!=&quot;SSISOpsEhObj&quot; &amp;&amp; @[User::varSSISOps_DisableBIxAuditing]==false"
          DTS:From="Package.EventHandlers[OnError]\SSISOpsEhObj_OnError_Start"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{028FBDA7-7FD0-493C-95C6-F1007DFFB48D}"
          DTS:To="Package.EventHandlers[OnError]\SSISOpsEhObj_Package_OnError"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnError].PrecedenceConstraints[{E17F5CE7-AAA9-4FDB-BD46-6561FB8BF67D\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{E17F5CE7-AAA9-4FDB-BD46-6561FB8BF67D}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceID]!=@[System::PackageID] &amp;&amp; @[System::SourceName]!=@[System::PackageName] &amp;&amp; SUBSTRING(@[System::SourceName], 1, 12)!=&quot;SSISOpsEhObj&quot; &amp;&amp; @[User::varSSISOps_DisableBIxAuditing]==false"
          DTS:From="Package.EventHandlers[OnError]\SSISOpsEhObj_OnError_Start"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{E17F5CE7-AAA9-4FDB-BD46-6561FB8BF67D}"
          DTS:To="Package.EventHandlers[OnError]\SSISOpsEhObj_Task_OnError"
          DTS:Value="2" />
      </DTS:PrecedenceConstraints>
    </DTS:EventHandler>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnPostExecute]"
      DTS:CreationName="OnPostExecute"
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. SSISOps : DON'T CHANGE PREFIX. "
      DTS:DTSID="{F7AD49BE-77AE-4EE7-8C28-8A217545A302}"
      DTS:EventID="1164"
      DTS:EventName="OnPostExecute"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{DE5E9266-A4EC-4898-A8BB-8347CC4FC992}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
          DTS:DTSID="{427F7DBB-2E10-462D-810F-46843ABDBCDC}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOpsNF_CHECK">
          <DTS:VariableValue
            DTS:DataType="8">{3B00A5E8-DA1E-408E-AC58-1F9F4DD2BDF7}</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{80F01785-68A0-4BE5-8151-905450F8AAB3}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_14C0747143F3468E85B149B3D7799974_RowCount_1_DataObjectCatalog">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{ECC419BB-7E8F-44D0-A0EB-B3D831A24F40}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_14C0747143F3468E85B149B3D7799974_RowCount_1_DataObjectConnectionName">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{A06F258C-46F5-4676-8D4E-836A87EB36D7}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_14C0747143F3468E85B149B3D7799974_RowCount_1_DataObjectConnectionString">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{EBBC4588-A31D-4945-9B7A-D9E23E83835C}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_14C0747143F3468E85B149B3D7799974_RowCount_1_DataObjectDataSource">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{FC71B330-F3B4-4E33-B472-7CAE61974EE9}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_14C0747143F3468E85B149B3D7799974_RowCount_1_DataObjectQuery">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{8743FD2A-C1AD-4276-B4C9-1DC78CC2FB9C}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_14C0747143F3468E85B149B3D7799974_RowCount_1_DataObjectUserName">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{78CFC9E1-F3C4-4E3C-82D3-68EAE2958D47}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_14C0747143F3468E85B149B3D7799974_RowCount_2_DataObjectCatalog">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{917C0CDF-6039-48E7-868B-B43EC5B3DF2D}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_14C0747143F3468E85B149B3D7799974_RowCount_2_DataObjectConnectionName">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{A80985A4-618E-4729-B6F4-3307CAE4D877}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_14C0747143F3468E85B149B3D7799974_RowCount_2_DataObjectConnectionString">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{05EB3B42-1E58-4A85-9D93-3CFF958CEF92}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_14C0747143F3468E85B149B3D7799974_RowCount_2_DataObjectDataSource">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{A448E2FF-8294-48F1-B9DE-E39DEB2D84EE}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_14C0747143F3468E85B149B3D7799974_RowCount_2_DataObjectQuery">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{01493BD1-40A1-44F3-8AA2-803FB2CE3FFD}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_14C0747143F3468E85B149B3D7799974_RowCount_2_DataObjectUserName">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{577C5178-1B9A-43CE-BD2C-BF5B93E6BADF}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_14C0747143F3468E85B149B3D7799974_RowCount_3_DataObjectCatalog">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{AD697972-CC54-4F78-959C-561CFF653679}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_14C0747143F3468E85B149B3D7799974_RowCount_3_DataObjectConnectionName">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{BBC71714-779C-40FC-AD91-9041CC27F3A1}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_14C0747143F3468E85B149B3D7799974_RowCount_3_DataObjectConnectionString">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{4C079C24-F7C0-4723-97C1-5FC578A1153F}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_14C0747143F3468E85B149B3D7799974_RowCount_3_DataObjectDataSource">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{A5FEACE2-5316-4A67-8BD6-121891DD2D78}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_14C0747143F3468E85B149B3D7799974_RowCount_3_DataObjectUserName">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{087294F2-5205-4D86-83F8-F8E24A84870B}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_47812213D9C7424D9EBEF3F6B6D1B048_RowCount_1_DataObjectCatalog">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{B721FE0E-1070-4824-894E-B6D25A5E8F00}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_47812213D9C7424D9EBEF3F6B6D1B048_RowCount_1_DataObjectConnectionName">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{C3163905-6E6D-4F49-B183-0601F055E075}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_47812213D9C7424D9EBEF3F6B6D1B048_RowCount_1_DataObjectConnectionString">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{B6A28031-7E93-4DA4-ACBC-C8D296936C03}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_47812213D9C7424D9EBEF3F6B6D1B048_RowCount_1_DataObjectDataSource">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{23CF5D37-5DC8-46AB-B8D4-5D22FC4C5907}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_47812213D9C7424D9EBEF3F6B6D1B048_RowCount_1_DataObjectQuery">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{9EAE0560-95AB-4D01-8050-BF323B2A3FE4}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_47812213D9C7424D9EBEF3F6B6D1B048_RowCount_1_DataObjectUserName">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{0DD934F0-41BA-4303-BB9C-BE93373DF688}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_47812213D9C7424D9EBEF3F6B6D1B048_RowCount_2_DataObjectCatalog">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{64103ECA-0510-4AEE-9536-5A76540B81D1}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_47812213D9C7424D9EBEF3F6B6D1B048_RowCount_2_DataObjectConnectionName">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{93167700-16FB-48CD-ACF5-80D595F3277A}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_47812213D9C7424D9EBEF3F6B6D1B048_RowCount_2_DataObjectConnectionString">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{3719B869-CD35-4F51-BCD7-E083AF05C825}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_47812213D9C7424D9EBEF3F6B6D1B048_RowCount_2_DataObjectDataSource">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{7F3A8D07-5FD5-443E-89E0-CF292BF9109D}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_47812213D9C7424D9EBEF3F6B6D1B048_RowCount_2_DataObjectQuery">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{86E6EE7F-2599-460E-871E-D828475D52D6}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_47812213D9C7424D9EBEF3F6B6D1B048_RowCount_2_DataObjectUserName">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{5492123E-A330-4195-94F8-F814308684FD}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_ConnectionValues">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. Set this variable to list of variables you want to mask during logging process. You can use comma separated list you can use wildcard &quot; * &quot; for pattern matching names are case insensitive. This option is used to mask variable values during logging process. This option is helpful when you have sensitive data (e.g. varFTP_Password) or variable value is extremly large to display (e.g. varXML_Document). When masking is enabled, &quot;****&quot; is logged in the BIxPress Audit Database rather than actual value of variable. Note: You can configure list of variables you want to mask outside the package by configuring &quot;varSSISOps_FilteredVars&quot;. There are 3 places where you have to set this value (OnPreExecute, OnPostExecute, OnVariableValueChanged)."
          DTS:DTSID="{4FD89E54-D1A0-4C7F-BD50-4184D4FF7B27}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_FilteredVars">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. A variable introduces in 2017.2 which stored a CSV list of qualified user variable names. These variables will be evaluated at runtime to see if they're being evaluated as an expression and then logged within the first task's OnPostExecute event handler if there has indeed been a variable value change."
          DTS:DTSID="{915E54DB-DF42-4B31-A2C0-2B0E8DF01E83}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_UserVariablesToBeEvaluatedAsExpressions">
          <DTS:VariableValue
            DTS:DataType="8">User::vAuditDateTime,User::vCreateAllIndexSQL,User::vCurJobID,User::vCurJobInstanceID,User::vCurUserID,User::vDeletedRowCount,User::vDeletedTotalRowCount,User::vDropAllIndexSQL,User::vEnvironmentTEXT,User::vFileCreatedDate,User::vFileLastModifiedDate,User::vInsertedRowCount,User::vInsertedTotalRowCount,User::vJobInstanceSourceID,User::vLastRecordsProcessedDate,User::vPackageStartDate,User::vProcessedRowCount,User::vRejectedTotalRowCount,User::vSchemaExceptionTable,User::vSchemaTableName,User::vSourceSchemaName,User::vSourceServerDatabase,User::vSourceTableName,User::vSQLDeleteDuplicates,User::vSQLGetAuditDateTime,User::vSQLGetLastRecordProcessedDate,User::vSQLIndexStatement,User::vSQLInitIncrStatement,User::vSQLSelectToDestinationTable,User::vSQLSourceStatement,User::vSQLTruncateTargetTable,User::vSQLUpdateETLAuditColumn,User::vSQLUpdateETLAuditTable,User::vTargetTableCount,User::vUpdatedTotalRowCount</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. A variable introduced in 2017.2 which stores a temporary SQL query inserting multiple variable values into the [bix].[vw_SSISPackageVariableLog_999] view."
          DTS:DTSID="{EADC6FA4-A275-42E4-8985-A82D60E13556}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_VariableValuesChangedQuery">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_14C0747143F3468E85B149B3D7799974_1"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. Row Count Logging For [Incremental Load=&gt;Insert Redirected or Rejected Rows to Exception Table]"
          DTS:DTSID="{656029DA-38B7-43B9-9B60-EF19FDD45DDF}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_14C0747143F3468E85B149B3D7799974_1"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{FD4092C7-1531-4C59-8065-369CAD340586}"
              SQLTask:SqlStatementSource="[bix].[usp_SSISOps_Audit_Insert_RowCount_67] @ComponentUniqueID='{14C07471-43F3-468E-85B1-49B3D7799974}_38',@ComponentTypeCode='DEST',@ComponentTypeName='OLEDB',@ComponentName='Insert Redirected or Rejected Rows to Exception Table',@DataObjectType='VariableTableOrView',@DataObjectName='User::vSchemaExceptionTable',@DataObjectQuery=?,@DataObjectConnectionString=?,@DataObjectConnectionName='',@DataObjectDataSource=?,@DataObjectUserName=?,@DataObjectCatalog=?,@ExecutionID=?,@SourceName=?,@SourceID=?,@RecordCount=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::varSSISOps_14C0747143F3468E85B149B3D7799974_RowCount_1_DataObjectQuery"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::varSSISOps_14C0747143F3468E85B149B3D7799974_RowCount_1_DataObjectConnectionString"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::varSSISOps_14C0747143F3468E85B149B3D7799974_RowCount_1_DataObjectDataSource"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::varSSISOps_14C0747143F3468E85B149B3D7799974_RowCount_1_DataObjectUserName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="User::varSSISOps_14C0747143F3468E85B149B3D7799974_RowCount_1_DataObjectCatalog"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="5"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="6"
                SQLTask:DtsVariableName="System::SourceName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="7"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="8"
                SQLTask:DtsVariableName="User::varSSISOps_14C0747143F3468E85B149B3D7799974_RowCount_1"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_14C0747143F3468E85B149B3D7799974_2"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. Row Count Logging For [Incremental Load=&gt;OLE DB Source]"
          DTS:DTSID="{8FEFDF31-8F20-4032-83D5-1EC744A7D81E}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_14C0747143F3468E85B149B3D7799974_2"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{FD4092C7-1531-4C59-8065-369CAD340586}"
              SQLTask:SqlStatementSource="[bix].[usp_SSISOps_Audit_Insert_RowCount_67] @ComponentUniqueID='{14C07471-43F3-468E-85B1-49B3D7799974}_62',@ComponentTypeCode='SRC',@ComponentTypeName='OLEDB',@ComponentName='OLE DB Source',@DataObjectType='VariableSqlCommand',@DataObjectName='User::vSQLSourceStatement',@DataObjectQuery=?,@DataObjectConnectionString=?,@DataObjectConnectionName='',@DataObjectDataSource=?,@DataObjectUserName=?,@DataObjectCatalog=?,@ExecutionID=?,@SourceName=?,@SourceID=?,@RecordCount=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::varSSISOps_14C0747143F3468E85B149B3D7799974_RowCount_2_DataObjectQuery"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::varSSISOps_14C0747143F3468E85B149B3D7799974_RowCount_2_DataObjectConnectionString"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::varSSISOps_14C0747143F3468E85B149B3D7799974_RowCount_2_DataObjectDataSource"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::varSSISOps_14C0747143F3468E85B149B3D7799974_RowCount_2_DataObjectUserName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="User::varSSISOps_14C0747143F3468E85B149B3D7799974_RowCount_2_DataObjectCatalog"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="5"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="6"
                SQLTask:DtsVariableName="System::SourceName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="7"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="8"
                SQLTask:DtsVariableName="User::varSSISOps_14C0747143F3468E85B149B3D7799974_RowCount_2"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_14C0747143F3468E85B149B3D7799974_3"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. Row Count Logging For [Incremental Load=&gt;TF Upsert Destination]"
          DTS:DTSID="{7D2A476C-B8F2-426E-9C43-4EFC1193014A}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_14C0747143F3468E85B149B3D7799974_3"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{FD4092C7-1531-4C59-8065-369CAD340586}"
              SQLTask:SqlStatementSource="[bix].[usp_SSISOps_Audit_Insert_RowCount_67] @ComponentUniqueID='{14C07471-43F3-468E-85B1-49B3D7799974}_125',@ComponentTypeCode='DEST',@ComponentTypeName='TF Upsert Destination',@ComponentName='TF Upsert Destination',@DataObjectType='UNKNOWN',@DataObjectName='',@DataObjectQuery='',@DataObjectConnectionString=?,@DataObjectConnectionName='',@DataObjectDataSource=?,@DataObjectUserName=?,@DataObjectCatalog=?,@ExecutionID=?,@SourceName=?,@SourceID=?,@RecordCount=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::varSSISOps_14C0747143F3468E85B149B3D7799974_RowCount_3_DataObjectConnectionString"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::varSSISOps_14C0747143F3468E85B149B3D7799974_RowCount_3_DataObjectDataSource"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::varSSISOps_14C0747143F3468E85B149B3D7799974_RowCount_3_DataObjectUserName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::varSSISOps_14C0747143F3468E85B149B3D7799974_RowCount_3_DataObjectCatalog"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="5"
                SQLTask:DtsVariableName="System::SourceName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="6"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="7"
                SQLTask:DtsVariableName="User::varSSISOps_14C0747143F3468E85B149B3D7799974_RowCount_3"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_47812213D9C7424D9EBEF3F6B6D1B048_1"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. Row Count Logging For [DFT_Initial_Load=&gt;OLE DB Destination]"
          DTS:DTSID="{D349EAC5-9B7D-483A-87C2-DF6954638409}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_47812213D9C7424D9EBEF3F6B6D1B048_1"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{FD4092C7-1531-4C59-8065-369CAD340586}"
              SQLTask:SqlStatementSource="[bix].[usp_SSISOps_Audit_Insert_RowCount_67] @ComponentUniqueID='{47812213-D9C7-424D-9EBE-F3F6B6D1B048}_28',@ComponentTypeCode='DEST',@ComponentTypeName='OLEDB',@ComponentName='OLE DB Destination',@DataObjectType='VariableTableOrView',@DataObjectName='User::vSchemaTableName',@DataObjectQuery=?,@DataObjectConnectionString=?,@DataObjectConnectionName='',@DataObjectDataSource=?,@DataObjectUserName=?,@DataObjectCatalog=?,@ExecutionID=?,@SourceName=?,@SourceID=?,@RecordCount=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::varSSISOps_47812213D9C7424D9EBEF3F6B6D1B048_RowCount_1_DataObjectQuery"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::varSSISOps_47812213D9C7424D9EBEF3F6B6D1B048_RowCount_1_DataObjectConnectionString"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::varSSISOps_47812213D9C7424D9EBEF3F6B6D1B048_RowCount_1_DataObjectDataSource"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::varSSISOps_47812213D9C7424D9EBEF3F6B6D1B048_RowCount_1_DataObjectUserName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="User::varSSISOps_47812213D9C7424D9EBEF3F6B6D1B048_RowCount_1_DataObjectCatalog"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="5"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="6"
                SQLTask:DtsVariableName="System::SourceName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="7"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="8"
                SQLTask:DtsVariableName="User::varSSISOps_47812213D9C7424D9EBEF3F6B6D1B048_RowCount_1"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_47812213D9C7424D9EBEF3F6B6D1B048_2"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. Row Count Logging For [DFT_Initial_Load=&gt;OLE DB Source]"
          DTS:DTSID="{A86BDA22-72DF-406F-B11A-48E92E759A29}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_47812213D9C7424D9EBEF3F6B6D1B048_2"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{FD4092C7-1531-4C59-8065-369CAD340586}"
              SQLTask:SqlStatementSource="[bix].[usp_SSISOps_Audit_Insert_RowCount_67] @ComponentUniqueID='{47812213-D9C7-424D-9EBE-F3F6B6D1B048}_57',@ComponentTypeCode='SRC',@ComponentTypeName='OLEDB',@ComponentName='OLE DB Source',@DataObjectType='VariableSqlCommand',@DataObjectName='User::vSQLSourceStatement',@DataObjectQuery=?,@DataObjectConnectionString=?,@DataObjectConnectionName='',@DataObjectDataSource=?,@DataObjectUserName=?,@DataObjectCatalog=?,@ExecutionID=?,@SourceName=?,@SourceID=?,@RecordCount=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::varSSISOps_47812213D9C7424D9EBEF3F6B6D1B048_RowCount_2_DataObjectQuery"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::varSSISOps_47812213D9C7424D9EBEF3F6B6D1B048_RowCount_2_DataObjectConnectionString"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::varSSISOps_47812213D9C7424D9EBEF3F6B6D1B048_RowCount_2_DataObjectDataSource"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::varSSISOps_47812213D9C7424D9EBEF3F6B6D1B048_RowCount_2_DataObjectUserName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="User::varSSISOps_47812213D9C7424D9EBEF3F6B6D1B048_RowCount_2_DataObjectCatalog"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="5"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="6"
                SQLTask:DtsVariableName="System::SourceName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="7"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="8"
                SQLTask:DtsVariableName="User::varSSISOps_47812213D9C7424D9EBEF3F6B6D1B048_RowCount_2"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_SSISOpsScript"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{86631F50-4D99-4B15-AD19-18DF960F3A0E}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_OnPostExecute_SSISOpsScript"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[User::varSSISOps_DisableDataSrcInfoLogging]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <ScriptProject
              Name="st_bce871e6fd5b4e2b8a2ae35fcf695e86"
              VSTAMajorVersion="14"
              VSTAMinorVersion="0"
              Language="CSharp">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("st_bce871e6fd5b4e2b8a2ae35fcf695e86")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Microsoft")]
[assembly: AssemblyProduct("st_bce871e6fd5b4e2b8a2ae35fcf695e86")]
[assembly: AssemblyCopyright("Copyright @ Microsoft 2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="st_bce871e6fd5b4e2b8a2ae35fcf695e86.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{17543aaf-46e0-44f4-9000-ee9ea9a9e819}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>st_bce871e6fd5b4e2b8a2ae35fcf695e86</RootNamespace>
    <AssemblyName>st_bce871e6fd5b4e2b8a2ae35fcf695e86</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Namespaces

using System;
using System.Data;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using Microsoft.SqlServer.Dts.Runtime;

#endregion

namespace st_bce871e6fd5b4e2b8a2ae35fcf695e86
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // Begin BI xPress Code
string sSourceID = ReadVariable("System::SourceID").ToString().ToUpper();






            // End BI xPress Code

            Dts.TaskResult = (int)ScriptResults.Success;
        }

#region ScriptResults declaration

        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };

#endregion

        public string ReadTextFile(string filename)
        {
            string functionReturnValue = null;
            System.IO.StreamReader sr = new System.IO.StreamReader(filename);
            functionReturnValue = sr.ReadToEnd();
            sr.Close();
            return functionReturnValue;
        }
        
        private void WriteVariable(string variableName, object variableValue)
        {
            Variables vars = null;
            bool isUnlocked = false;

            try
            {
                Dts.VariableDispenser.LockForWrite(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    vars[variableName].Value = variableValue;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }
        }
        
        private object ReadVariable(string variableName)
        {
            Variables vars = null;
            bool isUnlocked = false;
            object result;

            try
            {
                Dts.VariableDispenser.LockForRead(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    result = vars[variableName].Value;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }

            return result;
        }

        //Replace string function.
        //startPos : 1 based index
        public static String Replace(String oText, String oFind, String oReplace, int startPos, int Occurances)
        {
            int iCount = 0;
            int iPos = oText.IndexOf(oFind, startPos - 1);
            String strReturn = "";
            while (iPos != -1)
            {
                strReturn += oText.Substring(0, iPos) + oReplace;
                oText = oText.Substring(iPos + oFind.Length);
                iPos = oText.IndexOf(oFind);
                iCount++;
                if (Occurances > 0 && iCount >= Occurances)
                    break;
            }
            if (oText.Length > 0)
                strReturn += oText;
            return strReturn;
        }
        public static string Left(string param, int length)
        {
            //we start at 0 since we want to get the characters starting from the
            //left and with the specified lenght and assign it to a variable

            if (length > param.Length)
                length = param.Length; 

            string result = param.Substring(0, length);
            //return the result of the operation
            return result;
        }
        public static string Right(string param, int length)
        {
            //start at the index based on the lenght of the sting minus
            //the specified lenght and assign it a variable

            if (length > param.Length)
                length = param.Length; 

            string result = param.Substring(param.Length - length, length);
            //return the result of the operation
            return result;
        }

    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>st_bce871e6fd5b4e2b8a2ae35fcf695e86</msb:CodeName>
		<msb:DisplayName>st_bce871e6fd5b4e2b8a2ae35fcf695e86</msb:DisplayName>
		<msb:ProjectId>{45B96DE0-70C8-4093-B771-87990F605062}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_bce871e6fd5b4e2b8a2ae35fcf695e86.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_bce871e6fd5b4e2b8a2ae35fcf695e86.Properties.Settings.get_Default():st_bce871e6fd5b4e2b8a2ae35fcf695e86.Properties.Sett" +
    "ings")]

namespace st_bce871e6fd5b4e2b8a2ae35fcf695e86.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_bce871e6fd5b4e2b8a2ae35fcf695e86.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_bce871e6fd5b4e2b8a2ae35fcf695e86.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_bce871e6fd5b4e2b8a2ae35fcf695e86.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace st_bce871e6fd5b4e2b8a2ae35fcf695e86.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("st_bce871e6fd5b4e2b8a2ae35fcf695e86.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="st_bce871e6fd5b4e2b8a2ae35fcf695e86.dll">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
zgAEANAhAAAAAJYAhQDTAAUAPiIAAAAAlgBTBtwACgBZIgAAAACWAFgG3AAMAHsiAAAAAIYYJQUG
AA4AgyIAAAAAgxglBQYADgCLIgAAAACTCPME4gAOALciAAAAAJMILAHnAA4AviIAAAAAkwg4AewA
DgDGIgAAAACWCF4G8gAPAM0iAAAAAIYYJQUGAA8A1SIAAAAAkRgrBfcADwAAAAEA9gAAAAEA6QAA
AAIAXQMAAAEA6QAAAAEAeQYAAAIAfgAAAAMAhAAAAAQAGAYAAAUAZQUAAAEAVwQAAAIAsQMAAAEA
VwQAAAIAsQMAAAEAawMJACUFAQARACUFBgAZACUFCgApACUFEAAxACUFEAA5ACUFEABBACUFEABJ
ACUFEABRACUFEABZACUFEABhACUFEABpACUFBgCZACUFBgC5ACUFFQDJACUFBgB5AJMDGwDRAAcF
GwBxACkGHwDZAGoGAQDhACUFEADpAHQAGwDpAIgBBgDZAA8FLgDxAKMBEADxAAIGMwCBAF0EOgD5
AFMDQACBALgDBgDxAE0GBgDxAGgAEAD5AEkDTADRAHEDVgDRAJwDXADRAD8GYgDRAKYDaQDRAJwD
bQDRAHEDcgDRAD8GdwBxACUFBgB5ACUFBgABAcoAfQABAX8GhgChACUFjADBACUFBgAIABQApgAI
ABgAqwApAHMAMgEuAAsACgEuABMAEwEuABsAMgEuACMAOwEuACsAZAEuADMAZAEuADsAagEuAEMA
OwEuAEsAeQEuAFMAZAEuAFsAmQFDAGMAqwBJAHMAMgFhAHsAqwBjAGsAqwAkACgARQBQAAMAAQAE
AAMAAAD3BPsAAABMAQABAABiBgUBAgAKAAMAAgALAAUAAQAMAAUAAgANAAcABIAAAAEAAAA7GoVb
AAAAAAAAAQAAAAQAAAAAAAAAAAAAAJQAXwAAAAAADQAAAAAAAAAAAAAAnQC/AwAAAAANAAAAAAAA
AAAAAACdADgAAAAAAAQAAAAAAAAAAAAAAJQAZgQAAAAAAAAAAAEAAACBBQAABQACAAAAAHN0X2Jj
ZTg3MWU2ZmQ1YjRlMmI4YTJhZTM1ZmNmNjk1ZTg2ADxNb2R1bGU+AFN5c3RlbS5JTwBNaWNyb3Nv
ZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBtc2NvcmxpYgBMb2NrRm9yUmVhZABSZWFk
VG9FbmQAb0ZpbmQAb1JlcGxhY2UAZGVmYXVsdEluc3RhbmNlAFJlYWRWYXJpYWJsZQBXcml0ZVZh
cmlhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAFJlYWRUZXh0RmlsZQB2
YXJpYWJsZU5hbWUAZmlsZW5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBUeXBl
AEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNj
cmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBDbG9zZQBFZGl0b3JC
cm93c2FibGVTdGF0ZQBMb2NrRm9yV3JpdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVi
dWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dz
YWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0
cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRy
aWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25z
QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJp
YnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0
cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQBzZXRfVmFsdWUA
dmFyaWFibGVWYWx1ZQB2YWx1ZQBJbmRleE9mAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9T
dHJpbmcAU3Vic3RyaW5nAGdldF9MZW5ndGgAbGVuZ3RoAFVubG9jawBNaWNyb3NvZnQuU3FsU2Vy
dmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBT
Y3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAc3RfYmNlODcxZTZmZDViNGUy
YjhhMmFlMzVmY2Y2OTVlODYuZGxsAHBhcmFtAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNl
TWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24A
U3lzdGVtLlJlZmxlY3Rpb24ARXhjZXB0aW9uAEN1bHR1cmVJbmZvAFN0cmVhbVJlYWRlcgBUZXh0
UmVhZGVyAGdldF9SZXNvdXJjZU1hbmFnZXIAVG9VcHBlcgBnZXRfVmFyaWFibGVEaXNwZW5zZXIA
LmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNl
cnZpY2VzAE9jY3VyYW5jZXMAU3lzdGVtLlJlc291cmNlcwBzdF9iY2U4NzFlNmZkNWI0ZTJiOGEy
YWUzNWZjZjY5NWU4Ni5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9k
ZXMAc3RfYmNlODcxZTZmZDViNGUyYjhhMmFlMzVmY2Y2OTVlODYuUHJvcGVydGllcwBHZXRWYXJp
YWJsZXMAU2V0dGluZ3MAc3RhcnRQb3MAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAQ29u
Y2F0AE9iamVjdABSZXNldABMZWZ0AFJpZ2h0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AG9U
ZXh0AGdldF9Bc3NlbWJseQAAIVMAeQBzAHQAZQBtADoAOgBTAG8AdQByAGMAZQBJAEQAAAEAcXMA
dABfAGIAYwBlADgANwAxAGUANgBmAGQANQBiADQAZQAyAGIAOABhADIAYQBlADMANQBmAGMAZgA2
ADkANQBlADgANgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAAuU
siv7zP9EsEuwfeTOqaAABCABAQgDIAABBSABARERBCABAQ4FIAEBEVkDIAAOBCAAEm0DBwEOBQcC
EkECBCAAEnkGIAEBEBJBBSABEn0cBCABARwGBwMSQQIcAyAAHAUHAwgIDgUgAggOCAUgAg4ICAYA
Aw4ODg4DIAAIBCABDggEIAEIDgUAAg4ODggAARKAgRGAhQUgABKAiQcgAgEOEoCJCLd6XFYZNOCJ
CImEXc2AgMyRBAAAAAAEAQAAAAMGElEDBhJVAwYSEAIGCAMGERQEIAEODgUgAgEOHAQgARwOCAAF
Dg4ODggIBQACDg4IBAAAElEEAAASVQUAAQESVQQAABIQAwAAAQQIABJRBAgAElUECAASEAgBAAgA
AAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjc3RfYmNlODcx
ZTZmZDViNGUyYjhhMmFlMzVmY2Y2OTVlODYAAAUBAAAAAA4BAAlNaWNyb3NvZnQAAB8BABpDb3B5
cmlnaHQgQCBNaWNyb3NvZnQgMjAxOAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBU
DhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUAtAAAAM7K774BAAAAkQAA
AGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAu
MC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lz
dGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAADAy
AAAAAAAAAAAAAEoyAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8MgAAAAAAAAAAAAAAAF9Db3JE
bGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAA+BAAAAAAAAAAAAAA+BDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAhVs7GgAAAQCFWzsaPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEngMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAegMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAADQACgABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAATQBpAGMAcgBvAHMAbwBmAHQAAABwACQAAQBGAGkAbABlAEQAZQBzAGMA
cgBpAHAAdABpAG8AbgAAAAAAcwB0AF8AYgBjAGUAOAA3ADEAZQA2AGYAZAA1AGIANABlADIAYgA4
AGEAMgBhAGUAMwA1AGYAYwBmADYAOQA1AGUAOAA2AAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkA
bwBuAAAAAAAxAC4AMAAuADYANwAxADUALgAyADMANAAyADkAAAAAAHAAKAABAEkAbgB0AGUAcgBu
AGEAbABOAGEAbQBlAAAAcwB0AF8AYgBjAGUAOAA3ADEAZQA2AGYAZAA1AGIANABlADIAYgA4AGEA
MgBhAGUAMwA1AGYAYwBmADYAOQA1AGUAOAA2AC4AZABsAGwAAABaABsAAQBMAGUAZwBhAGwAQwBv
AHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABNAGkAYwByAG8AcwBvAGYA
dAAgADIAMAAxADgAAAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAA
AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAHMAdABfAGIAYwBlADgA
NwAxAGUANgBmAGQANQBiADQAZQAyAGIAOABhADIAYQBlADMANQBmAGMAZgA2ADkANQBlADgANgAu
AGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABzAHQAXwBiAGMAZQA4ADcA
MQBlADYAZgBkADUAYgA0AGUAMgBiADgAYQAyAGEAZQAzADUAZgBjAGYANgA5ADUAZQA4ADYAAABC
AA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYANwAxADUALgAyADMA
NAAyADkAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAu
ADYANwAxADUALgAyADMANAAyADkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAXDIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_Start"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{A8267857-0EEF-4CF8-AC28-F589EA1270E0}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_OnPostExecute_Start"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[User::varSSISOps_DisableBIxAuditing]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <ScriptProject
              Name="st_44a70c349055442abc1442207577970c"
              VSTAMajorVersion="14"
              VSTAMinorVersion="0"
              Language="CSharp">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("st_44a70c349055442abc1442207577970c")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Microsoft")]
[assembly: AssemblyProduct("st_44a70c349055442abc1442207577970c")]
[assembly: AssemblyCopyright("Copyright @ Microsoft 2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Namespaces

using System;
using System.Data;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using Microsoft.SqlServer.Dts.Runtime;

#endregion

namespace st_44a70c349055442abc1442207577970c
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // Begin BI xPress Code

            // End BI xPress Code

            Dts.TaskResult = (int)ScriptResults.Success;
        }

#region ScriptResults declaration

        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };

#endregion


        private void WriteVariable(string variableName, object variableValue)
        {
            Variables vars = null;
            bool isUnlocked = false;

            try
            {
                Dts.VariableDispenser.LockForWrite(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    vars[variableName].Value = variableValue;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }
        }
        private object ReadVariable(string variableName)
        {
            Variables vars = null;
            bool isUnlocked = false;
            object result;

            try
            {
                Dts.VariableDispenser.LockForRead(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    result = vars[variableName].Value;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }

            return result;
        }

    }
}]]></ProjectItem>
              <ProjectItem
                Name="st_44a70c349055442abc1442207577970c.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{b7bc8419-8ce0-4992-bbe3-c0f0c7e2ec6c}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>st_44a70c349055442abc1442207577970c</RootNamespace>
    <AssemblyName>st_44a70c349055442abc1442207577970c</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>st_44a70c349055442abc1442207577970c</msb:CodeName>
		<msb:DisplayName>st_44a70c349055442abc1442207577970c</msb:DisplayName>
		<msb:ProjectId>{2F05DFBE-9B72-4673-AE8F-1BE726E7FA8E}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_44a70c349055442abc1442207577970c.csproj"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_44a70c349055442abc1442207577970c.Properties.Settings.get_Default():st_44a70c349055442abc1442207577970c.Properties.Sett" +
    "ings")]

namespace st_44a70c349055442abc1442207577970c.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_44a70c349055442abc1442207577970c.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_44a70c349055442abc1442207577970c.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_44a70c349055442abc1442207577970c.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace st_44a70c349055442abc1442207577970c.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("st_44a70c349055442abc1442207577970c.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="st_44a70c349055442abc1442207577970c.dll">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
gQDrAzIA4QAUAzgAgQBMAwYA2QCgBQYA2QBeABAA4QAKA0QAcQCTBAYAeQCTBAYA6QCnAEgA6QDB
BU8AoQCTBFQAwQCTBAYACAAUAG0ACAAYAHIAKQBzAOUALgALAL0ALgATAMYALgAbAOUALgAjAO4A
LgArABcBLgAzABcBLgA7AB0BLgBDAO4ALgBLACwBLgBTABcBLgBbAEwBQwBjAHIASQBzAOUAYQB7
AHIAYwBrAHIAIAA9AAMAAQAEAAMAAABtBK4AAAATAbMAAACqBbgAAgAGAAMAAgAHAAUAAQAIAAUA
AgAJAAcABIAAAAEAAAA7GoZbAAAAAAAAOgAAAAQAAAAAAAAAAAAAAFsAMQAAAAAADQAAAAAAAAAA
AAAAZABTAwAAAAANAAAAAAAAAAAAAABkAAoAAAAAAAQAAAAAAAAAAAAAAFsA9AMAAAAAAAAAAAEA
AADkBAAABQACAAAAAAAAPE1vZHVsZT4ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZh
bHVlX18AbXNjb3JsaWIAc3RfNDRhNzBjMzQ5MDU1NDQyYWJjMTQ0MjIwNzU3Nzk3MGMATG9ja0Zv
clJlYWQAZGVmYXVsdEluc3RhbmNlAFJlYWRWYXJpYWJsZQBXcml0ZVZhcmlhYmxlAFJ1bnRpbWVU
eXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAHZhcmlhYmxlTmFtZQBNaWNyb3NvZnQuU3FsU2Vy
dmVyLkR0cy5SdW50aW1lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNv
dXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGlu
Z3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAExvY2tGb3JXcml0ZQBDb21waWxlckdlbmVyYXRl
ZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1
dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1i
bHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29u
ZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0
aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5
Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3Nl
bWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1Zh
bHVlAHNldF9WYWx1ZQB2YXJpYWJsZVZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25p
bmcAVW5sb2NrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2Vy
dmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25l
bnRNb2RlbABzdF80NGE3MGMzNDkwNTU0NDJhYmMxNDQyMjA3NTc3OTcwYy5kbGwAZ2V0X0l0ZW0A
U3lzdGVtAEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBT
eXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBFeGNlcHRpb24AQ3VsdHVyZUlu
Zm8AZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfVmFyaWFibGVEaXNwZW5zZXIALmN0b3IALmNjdG9y
AFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3Rl
bS5SZXNvdXJjZXMAc3RfNDRhNzBjMzQ5MDU1NDQyYWJjMTQ0MjIwNzU3Nzk3MGMuUHJvcGVydGll
cy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAHN0XzQ0YTcwYzM0OTA1NTQ0MmFi
YzE0NDIyMDc1Nzc5NzBjLlByb3BlcnRpZXMAR2V0VmFyaWFibGVzAFNldHRpbmdzAFN1Y2Nlc3MA
Z2V0X0R0cwBTY3JpcHRSZXN1bHRzAE9iamVjdABSZXNldABnZXRfRGVmYXVsdABzZXRfVGFza1Jl
c3VsdABnZXRfQXNzZW1ibHkAAAAAcXMAdABfADQANABhADcAMABjADMANAA5ADAANQA1ADQANAAy
AGEAYgBjADEANAA0ADIAMgAwADcANQA3ADcAOQA3ADAAYwAuAFAAcgBvAHAAZQByAHQAaQBlAHMA
LgBSAGUAcwBvAHUAcgBjAGUAcwAAAG+OOhNcxRhGhDuIyJPCUr0ABCABAQgDIAABBSABARERBCAB
AQ4FIAEBEVkEIAASaQUHAhJBAgQgABJtBiABARASQQUgARJxHAQgAQEcBgcDEkECHAMgABwGAAES
dRF5BCAAEn0GIAIBDhJ9CLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGElEDBhJVAwYSEAIG
CAMGERQFIAIBDhwEIAEcDgQAABJRBAAAElUFAAEBElUEAAASEAMAAAEECAASUQQIABJVBAgAEhAI
AQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI3N0XzQ0
YTcwYzM0OTA1NTQ0MmFiYzE0NDIyMDc1Nzc5NzBjAAAFAQAAAAAOAQAJTWljcm9zb2Z0AAAfAQAa
Q29weXJpZ2h0IEAgTWljcm9zb2Z0IDIwMTgAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQu
NQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41AAC0AAAAzsrvvgEA
AACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9u
PTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4
OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0
AAAAUC8AAAAAAAAAAAAAai8AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFwvAAAAAAAAAAAAAAAA
X0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAAD4EAAAAAAAAAAAAAD4ENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQCGWzsaAAABAIZbOxo/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsASeAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAB6AwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAANAAKAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAABNAGkAYwByAG8AcwBvAGYAdAAAAHAAJAABAEYAaQBsAGUARABlAHMA
YwByAGkAcAB0AGkAbwBuAAAAAABzAHQAXwA0ADQAYQA3ADAAYwAzADQAOQAwADUANQA0ADQAMgBh
AGIAYwAxADQANAAyADIAMAA3ADUANwA3ADkANwAwAGMAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMA
aQBvAG4AAAAAADEALgAwAC4ANgA3ADEANQAuADIAMwA0ADMAMAAAAAAAcAAoAAEASQBuAHQAZQBy
AG4AYQBsAE4AYQBtAGUAAABzAHQAXwA0ADQAYQA3ADAAYwAzADQAOQAwADUANQA0ADQAMgBhAGIA
YwAxADQANAAyADIAMAA3ADUANwA3ADkANwAwAGMALgBkAGwAbAAAAFoAGwABAEwAZQBnAGEAbABD
AG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgAE0AaQBjAHIAbwBzAG8A
ZgB0ACAAMgAwADEAOAAAAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAA
AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAcwB0AF8ANAA0AGEA
NwAwAGMAMwA0ADkAMAA1ADUANAA0ADIAYQBiAGMAMQA0ADQAMgAyADAANwA1ADcANwA5ADcAMABj
AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAHMAdABfADQANABhADcA
MABjADMANAA5ADAANQA1ADQANAAyAGEAYgBjADEANAA0ADIAMgAwADcANQA3ADcAOQA3ADAAYwAA
AEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgA3ADEANQAuADIA
MwA0ADMAMAAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAw
AC4ANgA3ADEANQAuADIAMwA0ADMAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAAB8PwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_Task_BuildVariablesUsingExpressionsQuery"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{947C1114-C631-4E97-A1D8-22278E59557E}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_OnPostExecute_Task_BuildVariablesUsingExpressionsQuery">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="st_12ff6aa5ce584bf2a109e4c2f0374981"
              VSTAMajorVersion="14"
              VSTAMinorVersion="0"
              Language="CSharp">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("st_12ff6aa5ce584bf2a109e4c2f0374981")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Microsoft")]
[assembly: AssemblyProduct("st_12ff6aa5ce584bf2a109e4c2f0374981")]
[assembly: AssemblyCopyright("Copyright @ Microsoft 2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_12ff6aa5ce584bf2a109e4c2f0374981.Properties.Settings.get_Default():st_12ff6aa5ce584bf2a109e4c2f0374981.Properties.Sett" +
    "ings")]

namespace st_12ff6aa5ce584bf2a109e4c2f0374981.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Namespaces

using System;
using System.Data;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using Microsoft.SqlServer.Dts.Runtime;

#endregion

namespace st_12ff6aa5ce584bf2a109e4c2f0374981
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // Begin BI xPress Code
            try
            {
                if (!Convert.ToBoolean(ReadVariable("User::varSSISOps_IsAnyVariableValueChanged")))
                {
                    Dts.TaskResult = (int)ScriptResults.Success;

                    return;
                }

                WriteVariable("User::varSSISOps_VariableValuesChangedQuery", string.Empty);

                System.Text.StringBuilder sqlQuery = new System.Text.StringBuilder();

                sqlQuery.AppendLine("DECLARE @VariableValuesTbl [bix].[VariableValuesChangedTableType]");
                sqlQuery.AppendLine();

                string executionId = ReadVariable("System::ExecutionInstanceGUID").ToString().Replace("{", string.Empty).Replace("}", string.Empty).Trim().ToUpperInvariant();
                string sourceId = ReadVariable("System::SourceID").ToString().Replace("{", string.Empty).Replace("}", string.Empty).Trim().ToUpperInvariant();
                int maxCharsToLog = Convert.ToInt32(ReadVariable("User::varSSISOps_MaxVarCharsToLog"));
                string filteredVariableNamesCsv = ReadVariable("User::varSSISOps_FilteredVars") as string;
                string[] filteredVariableNames = !string.IsNullOrEmpty(filteredVariableNamesCsv) ? filteredVariableNamesCsv.Split(",".ToCharArray(), StringSplitOptions.RemoveEmptyEntries) : new string[0];

                int expressionVariableCount = 0;
                string userVariablesEvaluatedAsExpressionsCsv = ReadVariable("User::varSSISOps_UserVariablesToBeEvaluatedAsExpressions") as string;
                string[] userVariablesEvaluatedAsExpressions = !string.IsNullOrEmpty(userVariablesEvaluatedAsExpressionsCsv) ? userVariablesEvaluatedAsExpressionsCsv.Split(",".ToCharArray(), StringSplitOptions.RemoveEmptyEntries) : new string[0];
                
                foreach (string userVariableEvaluatedAsExpression in userVariablesEvaluatedAsExpressions)
                {
                    // Always unable to lock the current variable because it's already locked and logged above.
                    if (string.IsNullOrEmpty(userVariableEvaluatedAsExpression))
                    {
                        continue;
                    }
                
                    string unqualifiedVariableName;
                    object variableValue;

                    if (!GetExpressionEvaluatedUserVariableValue(userVariableEvaluatedAsExpression, out unqualifiedVariableName, out variableValue) || variableValue == null)
                    {
                        continue;
                    }

                    bool isVariableFilteredOut = IsVariableValueMasked(userVariableEvaluatedAsExpression, filteredVariableNames);

                    sqlQuery.AppendLine(GenerateInsertStatement(executionId, unqualifiedVariableName, sourceId, isVariableFilteredOut ? "*****" : GetTruncatedVariableValue(variableValue, maxCharsToLog)));

                    expressionVariableCount++;
                }

                sqlQuery.AppendLine("EXEC [bix].[usp_SSISOps_Audit_OnVariableValuesChanged_67] @VariableValuesTbl");

                if (expressionVariableCount > 0)
                {
                    WriteVariable("User::varSSISOps_VariableValuesChangedQuery", sqlQuery.ToString());
                }
            }
            catch (Exception)
            {
                Dts.Events.FireWarning(0, "VariableValuesChanged", "Can not log values for variables bound to an expression.", string.Empty, 0);
            }

            Dts.TaskResult = (int)ScriptResults.Success;


            // End BI xPress Code
        }

#region ScriptResults declaration

        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };

#endregion

        private string EscapeSql(string sqlValue)
        {
            if (sqlValue == null)
            {
                return null;
            }

            return sqlValue.Replace("'", "''");
        }

        private string GenerateInsertStatement(string executionId, string variableName, string sourceId, string variableValue)
        {
            return string.Format(
                "INSERT INTO @VariableValuesTbl ([ExecutionID], [VariableName], [SourceID], [VariableValue]){4}" +
                "    VALUES ('{0}', N'{1}', '{2}', N'{3}'){4}",
                EscapeSql(executionId),
                EscapeSql(variableName),
                EscapeSql(sourceId),
                EscapeSql(variableValue),
                Environment.NewLine);
        }

        private bool GetExpressionEvaluatedUserVariableValue(string variableName, out string unqualifiedVariableName, out object variableValue)
        {
            Variables vars = null;
            bool isUnlocked = false;

            try
            {
                Dts.VariableDispenser.LockForRead(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    Variable lockedVariable = vars[variableName];

                    if (lockedVariable != null && !lockedVariable.SystemVariable && lockedVariable.EvaluateAsExpression)
                    {
                        unqualifiedVariableName = lockedVariable.Name;
                        variableValue = lockedVariable.Value;

                        return true;
                    }
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                unqualifiedVariableName = null;
                variableValue = null;

                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                {
                    vars.Unlock();
                }
            }

            unqualifiedVariableName = null;
            variableValue = null;

            return false;
        }

        private string GetTruncatedVariableValue(object variableValue, int maxCharsToLog)
        {
            if (variableValue == DBNull.Value || variableValue == null)
            {
                return string.Empty;
            }

            string variableValueString = variableValue.ToString();
            bool isLogFullValue = maxCharsToLog < 1;

            if (isLogFullValue || variableValueString.Length <= maxCharsToLog)
            {
                return variableValueString;
            }

            return variableValueString.Substring(0, maxCharsToLog) + " ...<VALUE TRUNCATED - Change value of [varSSISOps_MaxVarCharsToLog] to -1 if you want to log full value (Not recommended for performance reason)>";
        }

        private bool IsVariableValueMasked(string variableName, System.Collections.Generic.IEnumerable<string> maskedVariableNames)
        {
            if (string.IsNullOrEmpty(variableName))
            {
                return false;
            }

            if (maskedVariableNames == null)
            {
                return false;
            }

            foreach (string filteredVariableName in maskedVariableNames)
            {
                if (string.IsNullOrEmpty(filteredVariableName))
                {
                    continue;
                }

                string trimmedFilteredVariableName = filteredVariableName.Trim();

                if (System.Text.RegularExpressions.Regex.IsMatch(variableName, trimmedFilteredVariableName.Replace("*", "\\w*"), System.Text.RegularExpressions.RegexOptions.IgnoreCase))
                {
                    return true;
                }
            }

            return false;
        }
        private void WriteVariable(string variableName, object variableValue)
        {
            Variables vars = null;
            bool isUnlocked = false;

            try
            {
                Dts.VariableDispenser.LockForWrite(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    vars[variableName].Value = variableValue;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }
        }
        private object ReadVariable(string variableName)
        {
            Variables vars = null;
            bool isUnlocked = false;
            object result;

            try
            {
                Dts.VariableDispenser.LockForRead(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    result = vars[variableName].Value;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }

            return result;
        }

    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>st_12ff6aa5ce584bf2a109e4c2f0374981</msb:CodeName>
		<msb:DisplayName>st_12ff6aa5ce584bf2a109e4c2f0374981</msb:DisplayName>
		<msb:ProjectId>{202154DF-E1F0-4CE1-9F8C-C83249D4B1EB}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_12ff6aa5ce584bf2a109e4c2f0374981.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="st_12ff6aa5ce584bf2a109e4c2f0374981.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{1e6a9b49-d91b-422a-ae92-5881d964d825}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>st_12ff6aa5ce584bf2a109e4c2f0374981</RootNamespace>
    <AssemblyName>st_12ff6aa5ce584bf2a109e4c2f0374981</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_12ff6aa5ce584bf2a109e4c2f0374981.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_12ff6aa5ce584bf2a109e4c2f0374981.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_12ff6aa5ce584bf2a109e4c2f0374981.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace st_12ff6aa5ce584bf2a109e4c2f0374981.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("st_12ff6aa5ce584bf2a109e4c2f0374981.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="st_12ff6aa5ce584bf2a109e4c2f0374981.dll">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
/CMAAAAAgQC+AG0BCwB8JAAAAACBAPkAdwENABglAAAAAIEA7AB9AQ8AtCUAAAAAhhhkBgYAEAC8
JQAAAACDGGQGBgAQAMQlAAAAAJMIDAaCARAA8CUAAAAAkwi8AYcBEAD3JQAAAACTCMgBjAEQAP8l
AAAAAJYI/weSAREABiYAAAAAhhhkBgYAEQAOJgAAAACRGGoGlwERAAAAAQA/BAAAAQCmAAAAAgBr
AQAAAwCdAAAABAAxBAAAAQBrAQIAAgBTAQIAAwAxBAAAAQAxBAAAAgCHBAAAAQBrAQAAAgBDBwAA
AQBrAQAAAgAxBAAAAQBrAQAAAQBIBAkAZAYBABEAZAYGABkAZAYKACkAZAYQADEAZAYQADkAZAYQ
AEEAZAYQAEkAZAYQAFEAZAYQAFkAZAYQAGEAZAYQAGkAZAYGALkAZAYGANkAZAYVAOkAZAYGAPEA
fgUvAHEAugc0APkACwgBAAEBrQg5AHkAZAYGAHkAmAE8AHkAmAFCAIEAdARHAAEB1ABLAAEBaAVH
AAEBGghHAPEAQQBRAAEBpQhWAAEBfghbAAEB+QdgAPkA0AdqABEBaARwABkBowF5AAEB4gd9APkA
NAaNACEBsgAQACEBNgeTAJEAWAWaACkBlwigAJkABwGqAJkAkwWqAJkASgFHAJkA2wOuAJEAqAQG
ACEB8wcGADEBQgS2AAEBnQS7AAEBfQS/AAEB2wfFAAwAVgbcABQATwjrADkBlQTwAEkBYwiqAFEB
GAIGACEBNQIQAJkA5QP/AHEAZAYGAIEAZAYGAFkBOAELAVkBiggUAcEAZAYaAeEAZAYGAAgAFAA0
AQgAGAA5ASkAcwDSAS4ACwCqAS4AEwCzAS4AGwDSAS4AIwDbAS4AKwAEAi4AMwAEAi4AOwAKAi4A
QwDbAS4ASwAZAi4AUwAEAi4AWwA5AkMAYwA5AUkAcwDSAWEAewA5AWMAawA5ARsAhACyAMsA+QAE
AQMAAQAEAAMAAAAQBpsBAADcAaABAAADCKUBAgALAAMAAgAMAAUAAQANAAUAAgAOAAcA1gDlAASA
AAABAAAAOxqGWwAAAAAAAAEAAAAEAAAAAAAAAAAAAAAiAXkAAAAAAA0AAAAAAAAAAAAAACsBrwQA
AAAADQAAAAAAAAAAAAAAKwFSAAAAAAAEAAAAAAAAAAAAAAAiAWEFAAAAAAAAAAABAAAAtQYAAAUA
AgAAAABzdF8xMmZmNmFhNWNlNTg0YmYyYTEwOWU0YzJmMDM3NDk4MQBJRW51bWVyYWJsZWAxAElF
bnVtZXJhdG9yYDEAVG9JbnQzMgA8TW9kdWxlPgBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWRE
VFMAdmFsdWVfXwBtc2NvcmxpYgBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBzb3VyY2VJZABl
eGVjdXRpb25JZABMb2NrRm9yUmVhZABJc1ZhcmlhYmxlVmFsdWVNYXNrZWQAUmVwbGFjZQBkZWZh
dWx0SW5zdGFuY2UAUmVhZFZhcmlhYmxlAFdyaXRlVmFyaWFibGUAZ2V0X1N5c3RlbVZhcmlhYmxl
AElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAGdldF9OYW1l
AHVucXVhbGlmaWVkVmFyaWFibGVOYW1lAHZhcmlhYmxlTmFtZQBNaWNyb3NvZnQuU3FsU2VydmVy
LkR0cy5SdW50aW1lAEFwcGVuZExpbmUAZ2V0X05ld0xpbmUAVHlwZQBGYWlsdXJlAGdldF9DdWx0
dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJh
c2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARGlzcG9zZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBM
b2NrRm9yV3JpdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29k
ZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBB
c3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZy
YW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlE
ZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2Vt
Ymx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0
VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVD
b21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQBzZXRfVmFsdWUAR2V0VHJ1bmNhdGVkVmFy
aWFibGVWYWx1ZQBHZXRFeHByZXNzaW9uRXZhbHVhdGVkVXNlclZhcmlhYmxlVmFsdWUAdmFyaWFi
bGVWYWx1ZQBzcWxWYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAEZpcmVXYXJu
aW5nAFRvU3RyaW5nAFN1YnN0cmluZwBtYXhDaGFyc1RvTG9nAElzTWF0Y2gAZ2V0X0xlbmd0aABV
bmxvY2sATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1v
ZGVsAHN0XzEyZmY2YWE1Y2U1ODRiZjJhMTA5ZTRjMmYwMzc0OTgxLmRsbABEQk51bGwARXNjYXBl
U3FsAGdldF9JdGVtAFN5c3RlbQBUcmltAEVudW0AcmVzb3VyY2VNYW4AVG9Cb29sZWFuAFNjcmlw
dE1haW4AZ2V0X0V2YWx1YXRlQXNFeHByZXNzaW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3Rl
bS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEV4Y2VwdGlvbgBDdWx0dXJlSW5mbwBT
dHJpbmdCdWlsZGVyAGdldF9SZXNvdXJjZU1hbmFnZXIARXZlbnRzT2JqZWN0V3JhcHBlcgBnZXRf
VmFyaWFibGVEaXNwZW5zZXIASUVudW1lcmF0b3IAR2V0RW51bWVyYXRvcgAuY3RvcgAuY2N0b3IA
U3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVt
LlJlc291cmNlcwBzdF8xMmZmNmFhNWNlNTg0YmYyYTEwOWU0YzJmMDM3NDk4MS5Qcm9wZXJ0aWVz
LlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAc3RfMTJmZjZhYTVjZTU4NGJmMmEx
MDllNGMyZjAzNzQ5ODEuUHJvcGVydGllcwBHZXRWYXJpYWJsZXMAbWFza2VkVmFyaWFibGVOYW1l
cwBTZXR0aW5ncwBTeXN0ZW0uVGV4dC5SZWd1bGFyRXhwcmVzc2lvbnMAU3lzdGVtLkNvbGxlY3Rp
b25zAFN0cmluZ1NwbGl0T3B0aW9ucwBSZWdleE9wdGlvbnMAU3VjY2VzcwBnZXRfRHRzAFNjcmlw
dFJlc3VsdHMAZ2V0X0V2ZW50cwBDb25jYXQARm9ybWF0AER0c09iamVjdABSZXNldABTcGxpdABn
ZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABUb1VwcGVySW52YXJpYW50AEdlbmVyYXRlSW5zZXJ0
U3RhdGVtZW50AEVudmlyb25tZW50AGdldF9DdXJyZW50AENvbnZlcnQATW92ZU5leHQAU3lzdGVt
LlRleHQAUmVnZXgAVG9DaGFyQXJyYXkAZ2V0X0Fzc2VtYmx5AG9wX0luZXF1YWxpdHkASXNOdWxs
T3JFbXB0eQAAAFVVAHMAZQByADoAOgB2AGEAcgBTAFMASQBTAE8AcABzAF8ASQBzAEEAbgB5AFYA
YQByAGkAYQBiAGwAZQBWAGEAbAB1AGUAQwBoAGEAbgBnAGUAZAAAV1UAcwBlAHIAOgA6AHYAYQBy
AFMAUwBJAFMATwBwAHMAXwBWAGEAcgBpAGEAYgBsAGUAVgBhAGwAdQBlAHMAQwBoAGEAbgBnAGUA
ZABRAHUAZQByAHkAAICDRABFAEMATABBAFIARQAgAEAAVgBhAHIAaQBhAGIAbABlAFYAYQBsAHUA
ZQBzAFQAYgBsACAAWwBiAGkAeABdAC4AWwBWAGEAcgBpAGEAYgBsAGUAVgBhAGwAdQBlAHMAQwBo
AGEAbgBnAGUAZABUAGEAYgBsAGUAVAB5AHAAZQBdAAA7UwB5AHMAdABlAG0AOgA6AEUAeABlAGMA
dQB0AGkAbwBuAEkAbgBzAHQAYQBuAGMAZQBHAFUASQBEAAADewAAA30AACFTAHkAcwB0AGUAbQA6
ADoAUwBvAHUAcgBjAGUASQBEAABDVQBzAGUAcgA6ADoAdgBhAHIAUwBTAEkAUwBPAHAAcwBfAE0A
YQB4AFYAYQByAEMAaABhAHIAcwBUAG8ATABvAGcAADtVAHMAZQByADoAOgB2AGEAcgBTAFMASQBT
AE8AcABzAF8ARgBpAGwAdABlAHIAZQBkAFYAYQByAHMAAAMsAABxVQBzAGUAcgA6ADoAdgBhAHIA
UwBTAEkAUwBPAHAAcwBfAFUAcwBlAHIAVgBhAHIAaQBhAGIAbABlAHMAVABvAEIAZQBFAHYAYQBs
AHUAYQB0AGUAZABBAHMARQB4AHAAcgBlAHMAcwBpAG8AbgBzAAALKgAqACoAKgAqAACAmUUAWABF
AEMAIABbAGIAaQB4AF0ALgBbAHUAcwBwAF8AUwBTAEkAUwBPAHAAcwBfAEEAdQBkAGkAdABfAE8A
bgBWAGEAcgBpAGEAYgBsAGUAVgBhAGwAdQBlAHMAQwBoAGEAbgBnAGUAZABfADYANwBdACAAQABW
AGEAcgBpAGEAYgBsAGUAVgBhAGwAdQBlAHMAVABiAGwAACtWAGEAcgBpAGEAYgBsAGUAVgBhAGwA
dQBlAHMAQwBoAGEAbgBnAGUAZAAAcUMAYQBuACAAbgBvAHQAIABsAG8AZwAgAHYAYQBsAHUAZQBz
ACAAZgBvAHIAIAB2AGEAcgBpAGEAYgBsAGUAcwAgAGIAbwB1AG4AZAAgAHQAbwAgAGEAbgAgAGUA
eABwAHIAZQBzAHMAaQBvAG4ALgAAAycAAQUnACcAAYEVSQBOAFMARQBSAFQAIABJAE4AVABPACAA
QABWAGEAcgBpAGEAYgBsAGUAVgBhAGwAdQBlAHMAVABiAGwAIAAoAFsARQB4AGUAYwB1AHQAaQBv
AG4ASQBEAF0ALAAgAFsAVgBhAHIAaQBhAGIAbABlAE4AYQBtAGUAXQAsACAAWwBTAG8AdQByAGMA
ZQBJAEQAXQAsACAAWwBWAGEAcgBpAGEAYgBsAGUAVgBhAGwAdQBlAF0AKQB7ADQAfQAgACAAIAAg
AFYAQQBMAFUARQBTACAAKAAnAHsAMAB9ACcALAAgAE4AJwB7ADEAfQAnACwAIAAnAHsAMgB9ACcA
LAAgAE4AJwB7ADMAfQAnACkAewA0AH0AAYElIAAuAC4ALgA8AFYAQQBMAFUARQAgAFQAUgBVAE4A
QwBBAFQARQBEACAALQAgAEMAaABhAG4AZwBlACAAdgBhAGwAdQBlACAAbwBmACAAWwB2AGEAcgBT
AFMASQBTAE8AcABzAF8ATQBhAHgAVgBhAHIAQwBoAGEAcgBzAFQAbwBMAG8AZwBdACAAdABvACAA
LQAxACAAaQBmACAAeQBvAHUAIAB3AGEAbgB0ACAAdABvACAAbABvAGcAIABmAHUAbABsACAAdgBh
AGwAdQBlACAAKABOAG8AdAAgAHIAZQBjAG8AbQBtAGUAbgBkAGUAZAAgAGYAbwByACAAcABlAHIA
ZgBvAHIAbQBhAG4AYwBlACAAcgBlAGEAcwBvAG4AKQA+AAEDKgAAB1wAdwAqAABxcwB0AF8AMQAy
AGYAZgA2AGEAYQA1AGMAZQA1ADgANABiAGYAMgBhADEAMAA5AGUANABjADIAZgAwADMANwA0ADkA
OAAxAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAaQrgNOOX2Emc
GmQK57yhygAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERaRMHDhI9Dg4IDh0OCA4dDggODhwCBAAB
AhwEIAASfQIGDgUgARI9DgQgABI9AyAADgUgAg4ODgQAAQgcBAABAg4EIAAdAwkgAh0OHQMRgIUF
IAASgIkIIAUBCA4ODggDAAAOBgACDg4dHAgHBBJJAhJNAgUgABKAkQYgAQEQEkkFIAESTRwJAAIC
EoCVEoCVAyAAAgMgABwDBwEOBAYSgJkDIAAIBSACDggIBQACDg4OCgcEFRJVAQ4ODgIFFRJRAQ4I
IAAVElUBEwAFFRJVAQ4EIAATAAgAAwIODhGAoQUHAhJJAgQgAQEcBgcDEkkCHAgAARKArRGAsQUg
ABKAtQcgAgEOEoC1CLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGEmEDBhJlAwYSEAIGCAMG
ERQEIAEODgcgBA4ODg4OCCADAg4QDhAcBSACDhwICSACAg4VElEBDgUgAgEOHAQgARwOBAAAEmEE
AAASZQUAAQESZQQAABIQAwAAAQQIABJhBAgAEmUECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5v
bkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjc3RfMTJmZjZhYTVjZTU4NGJmMmExMDllNGMy
ZjAzNzQ5ODEAAAUBAAAAAA4BAAlNaWNyb3NvZnQAAB8BABpDb3B5cmlnaHQgQCBNaWNyb3NvZnQg
MjAxOAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5
TmFtZRIuTkVUIEZyYW1ld29yayA0LjUAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2Vz
LlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRy
YWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50
aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAAg/AAAAAAAAAAAAACI/AAAAIAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAUPwAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxs
AAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQ
AAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhA
AAA+BAAAAAAAAAAAAAA+BDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv
/gAAAQAAAAEAhls7GgAAAQCGWzsaPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYA
YQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAA
ALAEngMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAegMAAAEAMAAwADAAMAAwADQA
YgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAADQACgABAEMAbwBtAHAAYQBuAHkATgBh
AG0AZQAAAAAATQBpAGMAcgBvAHMAbwBmAHQAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAA
dABpAG8AbgAAAAAAcwB0AF8AMQAyAGYAZgA2AGEAYQA1AGMAZQA1ADgANABiAGYAMgBhADEAMAA5
AGUANABjADIAZgAwADMANwA0ADkAOAAxAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAA
AAAxAC4AMAAuADYANwAxADUALgAyADMANAAzADAAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABO
AGEAbQBlAAAAcwB0AF8AMQAyAGYAZgA2AGEAYQA1AGMAZQA1ADgANABiAGYAMgBhADEAMAA5AGUA
NABjADIAZgAwADMANwA0ADkAOAAxAC4AZABsAGwAAABaABsAAQBMAGUAZwBhAGwAQwBvAHAAeQBy
AGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABNAGkAYwByAG8AcwBvAGYAdAAgADIA
MAAxADgAAAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAo
AAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAHMAdABfADEAMgBmAGYANgBhAGEA
NQBjAGUANQA4ADQAYgBmADIAYQAxADAAOQBlADQAYwAyAGYAMAAzADcANAA5ADgAMQAuAGQAbABs
AAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABzAHQAXwAxADIAZgBmADYAYQBhADUA
YwBlADUAOAA0AGIAZgAyAGEAMQAwADkAZQA0AGMAMgBmADAAMwA3ADQAOQA4ADEAAABCAA8AAQBQ
AHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYANwAxADUALgAyADMANAAzADAA
AAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYANwAx
ADUALgAyADMANAAzADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAND8AAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_Task_LogVariablesUsingExpressions"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{05C0CCAE-E154-441B-ACBE-C503DFA76F71}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_OnPostExecute_Task_LogVariablesUsingExpressions">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{FD4092C7-1531-4C59-8065-369CAD340586}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="User::varSSISOps_VariableValuesChangedQuery" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_Package_OnPostExecute"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{FA564601-9319-4F5C-B208-3EFFBBB6AF39}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_Package_OnPostExecute"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{FD4092C7-1531-4C59-8065-369CAD340586}"
              SQLTask:SqlStatementSource="EXEC [bix].[usp_SSISOps_Audit_OnPostExecute_67] @Scope='Package',@ExecutionID=?,@SourceID=?,@RowCountSupport=1,@LogCustomValues=0,@Connections=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::varSSISOps_ConnectionValues"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_Package_OnPostExecute_LogConnectionManagers"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{297D6601-1F4F-44B5-BEE3-F45209A0FDC7}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_Package_OnPostExecute_LogConnectionManagers"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[User::varSSISOps_DisableConnLogging]==true</DTS:PropertyExpression>
          <DTS:ObjectData>
            <ScriptProject
              Name="st_533ddf1dbc8a4986bd43395f1c889efe"
              VSTAMajorVersion="14"
              VSTAMinorVersion="0"
              Language="CSharp">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("st_533ddf1dbc8a4986bd43395f1c889efe")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Microsoft")]
[assembly: AssemblyProduct("st_533ddf1dbc8a4986bd43395f1c889efe")]
[assembly: AssemblyCopyright("Copyright @ Microsoft 2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Namespaces

using System;
using System.Data;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using Microsoft.SqlServer.Dts.Runtime;

#endregion

namespace st_533ddf1dbc8a4986bd43395f1c889efe
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // Begin BI xPress Code
            System.Text.StringBuilder connectionManagersStringBuilder = new System.Text.StringBuilder();
            bool isLogConnections = !Convert.ToBoolean(ReadVariable("User::varSSISOps_DisableConnLogging"));

            if (isLogConnections)
            {
                string filteredConnectionManagerNamesCsv = ReadVariable("User::varSSISOps_FilteredConns").ToString();
                string[] filteredConnectionManagerNames = filteredConnectionManagerNamesCsv.Split(',');

                foreach (ConnectionManager connectionManager in Dts.Connections)
                {
                    try
                    {
                        bool isConnectionManagerFilteredOut = false;

                        foreach (string filteredConnectionManagerName in filteredConnectionManagerNames)
                        {
                            if (string.IsNullOrEmpty(filteredConnectionManagerName))
                            {
                                continue;
                            }

                            string trimmedFilteredConnectionManagerName = filteredConnectionManagerName.Trim();

                            if (System.Text.RegularExpressions.Regex.IsMatch(connectionManager.Name, trimmedFilteredConnectionManagerName.Replace("*", "\\w*"), System.Text.RegularExpressions.RegexOptions.IgnoreCase))
                            {
                                isConnectionManagerFilteredOut = true;

                                break;
                            }
                        }

                        string connectionString = connectionManager.ConnectionString;
                        string dataSource = string.Empty;

                        if (isConnectionManagerFilteredOut)
                        {
                            connectionString = "*****";
                            dataSource = "*****";
                        }
                        else
                        {
                            try
                            {
                                if (connectionManager.Properties.Contains("ServerName"))
                                {
                                    dataSource = connectionManager.Properties["ServerName"].GetValue(connectionManager).ToString();
                                }
                                else if (connectionManager.Properties.Contains("SqlServerName"))
                                {
                                    dataSource = connectionManager.Properties["SqlServerName"].GetValue(connectionManager).ToString();
                                }
                                else if (connectionManager.Properties.Contains("Host"))
                                {
                                    dataSource = connectionManager.Properties["Host"].GetValue(connectionManager).ToString();
                                }
                                else if (connectionManager.Properties.Contains("ServerHost"))
                                {
                                    dataSource = connectionManager.Properties["ServerHost"].GetValue(connectionManager).ToString();
                                }
                                else if (connectionManager.Properties.Contains("Server"))
                                {
                                    dataSource = connectionManager.Properties["Server"].GetValue(connectionManager).ToString();
                                }
                                else if (connectionManager.CreationName == "FLATFILE" || (connectionManager.CreationName == "FILE" && connectionString.IndexOf(".", StringComparison.InvariantCultureIgnoreCase) > 0))
                                {
                                    dataSource = System.IO.Path.GetFileName(connectionString);
                                }
                            }
                            catch (Exception) { }
                        }

                        connectionManagersStringBuilder.AppendLine(connectionManager.Name.PadRight(30, '.') + "... " + connectionManager.CreationName.PadRight(10, ' ') + "  \t" + dataSource.PadRight(15, ' ') + "  \t" + connectionString);
                    }
                    catch (Exception ex)
                    {
                        connectionManagersStringBuilder.AppendLine(connectionManager.Name.PadRight(30, '.') + "... {Error reading connection: " + ex.Message + "}");
                    }
                }

                WriteVariable("User::varSSISOps_ConnectionValues", connectionManagersStringBuilder.ToString());
            }


            // End BI xPress Code

            Dts.TaskResult = (int)ScriptResults.Success;
        }

#region ScriptResults declaration

        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };

#endregion


        private void WriteVariable(string variableName, object variableValue)
        {
            Variables vars = null;
            bool isUnlocked = false;

            try
            {
                Dts.VariableDispenser.LockForWrite(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    vars[variableName].Value = variableValue;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }
        }
        private object ReadVariable(string variableName)
        {
            Variables vars = null;
            bool isUnlocked = false;
            object result;

            try
            {
                Dts.VariableDispenser.LockForRead(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    result = vars[variableName].Value;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }

            return result;
        }

    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>st_533ddf1dbc8a4986bd43395f1c889efe</msb:CodeName>
		<msb:DisplayName>st_533ddf1dbc8a4986bd43395f1c889efe</msb:DisplayName>
		<msb:ProjectId>{ADB385B4-A779-4D1B-B5C8-FCD0CC75A44A}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_533ddf1dbc8a4986bd43395f1c889efe.csproj"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_533ddf1dbc8a4986bd43395f1c889efe.Properties.Settings.get_Default():st_533ddf1dbc8a4986bd43395f1c889efe.Properties.Sett" +
    "ings")]

namespace st_533ddf1dbc8a4986bd43395f1c889efe.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="st_533ddf1dbc8a4986bd43395f1c889efe.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{7d48f268-c37b-4318-9269-7915136093d1}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>st_533ddf1dbc8a4986bd43395f1c889efe</RootNamespace>
    <AssemblyName>st_533ddf1dbc8a4986bd43395f1c889efe</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_533ddf1dbc8a4986bd43395f1c889efe.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_533ddf1dbc8a4986bd43395f1c889efe.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_533ddf1dbc8a4986bd43395f1c889efe.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace st_533ddf1dbc8a4986bd43395f1c889efe.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("st_533ddf1dbc8a4986bd43395f1c889efe.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="st_533ddf1dbc8a4986bd43395f1c889efe.dll">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
MTkAAAAABQBsAAAAFAUAACN+AACABQAAnAcAACNTdHJpbmdzAAAAABwNAAAsAgAAI1VTAEgPAAAQ
AAAAI0dVSUQAAABYDwAANAIAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6ATMAFgAAAQAAAC0A
AAAFAAAABgAAAAsAAAAEAAAAPAAAAAIAAAAQAAAAAwAAAAIAAAADAAAABAAAAAEAAAAEAAAAAQAA
AAEAAAAAAE4EAQAAAAAABgCsArQFBgA7A7QFBgD4AaEFDwAoBgAABgAlAtsEBgCPAtsEBgBwAtsE
BgAiA9sEBgDMAtsEBgDlAtsEBgA8AtsEBgBXApIDCgAAA/0DCgBqAf0DBgAZBVcHDgBjBQoBDgA7
BQoBBgDtBH8EBgADB38EDgCGBgoBBgCLBH8EBgDbAaEFBgArBdQFBgAIBcYEEgCeATgEEgAMAjgE
EgCGAbEEBgDAAbQFBgBGB38EBgAUBX8EBgDDA38ECgAmBP0DDgDFBgoBEgBjB6IGEgDRBqIGDgB1
BgoBDgCQBwoBBgD3BH8EBgDSAwoADgB4BQoBDgBRBQoBDgCqAAoBBgA1AX8EBgCzAH8EBgBtB9sE
AAAAAAEAAAAAAAEAAQABABAApgRoADkAAQABAAAAEADbBTcGTQABAAUAAAEQAJAGNwZtAAMACQAD
AQAA7gYAAFUABAAMABEAkAQSAREAWgEWAREAWAAaAQYGMwAeAVaA3gYhAVaAOgEhAVAgAAAAAIYA
rAQGAAEAaCMAAAAAgQClACUBAQAEJAAAAACBAJgAKwEDAKAkAAAAAIYYlAUGAAQAqCQAAAAAgxiU
BQYABACwJAAAAACTCCcFMAEEANwkAAAAAJMIQgE1AQQA4yQAAAAAkwhOAToBBADrJAAAAACWCB8H
QAEFAPIkAAAAAIYYlAUGAAUA+iQAAAAAkRiaBUUBBQAAAAEA4AAAAAIAbQMAAAEA4AAAAAEAhAMJ
AJQFAQARAJQFBgAZAJQFCgApAJQFEAAxAJQFEAA5AJQFEABBAJQFEABJAJQFEABRAJQFEABZAJQF
EABhAJQFEABpAJQFBgCxAJQFBgDRAJQFFQDhAJQFBgB5AJQFBgDpAJwEMACZAMEDNQD5ABkHOQBx
AOYGQAABAcEGRgAJAYYFTACBADoHUQD5AIIHVgD5AIYENQCJANcANQD5AFAAWwARAcoDYQCJAKwD
NQD5AIoHagCJAGYGbQAhAZkGcwAhAXYEeAApAXsDfwCJAPkANQD5AHYHhAD5AIoDigA5Ae0AkgD5
ABAHlwD5APwGnQB5ACoBowCRAIwANQD5APwGqQBBAU4HsQABASsHAQABAU0FuwBJAbMBEABJAYMG
wQChAHYEyABRAWMDzwChANcDBgBJAQoHBgBJAUQAEABRAVkD2wBxAJQFBgCZAJQFBgBZAcUA3wBZ
AWkH6AC5AJQF7gDZAJQFBgAIABQACAEIABgADQEpAHMAgAEuAAsAWAEuABMAYQEuABsAgAEuACMA
iQEuACsAsgEuADMAsgEuADsAuAEuAEMAiQEuAEsAxwEuAFMAsgEuAFsA5wFDAGMADQFJAHMAgAFh
AHsADQFjAGsADQEbALUA1AADAAEABAADAAAAKwVJAQAAYgFOAQAAIwdTAQIABgADAAIABwAFAAEA
CAAFAAIACQAHAASAAAABAAAAOxqGWwAAAAAAAGgAAAAEAAAAAAAAAAAAAAD2ADsAAAAAAA0AAAAA
AAAAAAAAAP8A3gMAAAAADQAAAAAAAAAAAAAA/wAUAAAAAAAEAAAAAAAAAAAAAAD2AH8EAAAAAAAA
AAABAAAA5QUAAAUAAgAAAAA8TW9kdWxlPgBTeXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZlci5N
YW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIATG9ja0ZvclJlYWQAUmVwbGFjZQBkZWZhdWx0SW5z
dGFuY2UAc3RfNTMzZGRmMWRiYzhhNDk4NmJkNDMzOTVmMWM4ODllZmUAZ2V0X01lc3NhZ2UAUmVh
ZFZhcmlhYmxlAFdyaXRlVmFyaWFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5k
bGUAZ2V0X05hbWUAdmFyaWFibGVOYW1lAEdldEZpbGVOYW1lAGdldF9DcmVhdGlvbk5hbWUATWlj
cm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBBcHBlbmRMaW5lAFR5cGUARmFpbHVyZQBnZXRf
Q3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9k
ZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAExvY2tG
b3JXcml0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0
cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2Vt
Ymx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3
b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2Ny
aXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQ
cm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNr
RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBh
dGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHNldF9WYWx1ZQB2YXJpYWJsZVZhbHVlAEdldFZh
bHVlAHZhbHVlAEluZGV4T2YAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBnZXRfQ29ubmVjdGlv
blN0cmluZwBUb1N0cmluZwBJc01hdGNoAFBhdGgAVW5sb2NrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
U2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlw
dE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABzdF81MzNkZGYxZGJjOGE0OTg2YmQ0
MzM5NWYxYzg4OWVmZS5kbGwAZ2V0X0l0ZW0AU3lzdGVtAFRyaW0ARW51bQByZXNvdXJjZU1hbgBU
b0Jvb2xlYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXph
dGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBFeGNlcHRpb24AU3RyaW5nQ29tcGFyaXNvbgBDdWx0dXJl
SW5mbwBDaGFyAFN0cmluZ0J1aWxkZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBDb25uZWN0aW9uTWFu
YWdlcgBnZXRfVmFyaWFibGVEaXNwZW5zZXIAQ29ubmVjdGlvbkVudW1lcmF0b3IARHRzRW51bWVy
YXRvcgBHZXRFbnVtZXJhdG9yAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVt
LlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAHN0XzUzM2RkZjFkYmM4
YTQ5ODZiZDQzMzk1ZjFjODg5ZWZlLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1
Z2dpbmdNb2RlcwBzdF81MzNkZGYxZGJjOGE0OTg2YmQ0MzM5NWYxYzg4OWVmZS5Qcm9wZXJ0aWVz
AGdldF9Qcm9wZXJ0aWVzAER0c1Byb3BlcnRpZXMAR2V0VmFyaWFibGVzAFNldHRpbmdzAENvbnRh
aW5zAFN5c3RlbS5UZXh0LlJlZ3VsYXJFeHByZXNzaW9ucwBnZXRfQ29ubmVjdGlvbnMAUmVnZXhP
cHRpb25zAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAENvbmNhdABPYmplY3QAUmVzZXQA
UGFkUmlnaHQAU3BsaXQAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tSZXN1bHQAZ2V0X0N1cnJlbnQAQ29u
dmVydABNb3ZlTmV4dABTeXN0ZW0uVGV4dABSZWdleABnZXRfQXNzZW1ibHkAb3BfRXF1YWxpdHkA
SXNOdWxsT3JFbXB0eQBEdHNQcm9wZXJ0eQAAR1UAcwBlAHIAOgA6AHYAYQByAFMAUwBJAFMATwBw
AHMAXwBEAGkAcwBhAGIAbABlAEMAbwBuAG4ATABvAGcAZwBpAG4AZwAAPVUAcwBlAHIAOgA6AHYA
YQByAFMAUwBJAFMATwBwAHMAXwBGAGkAbAB0AGUAcgBlAGQAQwBvAG4AbgBzAAADKgAAB1wAdwAq
AAALKgAqACoAKgAqAAAVUwBlAHIAdgBlAHIATgBhAG0AZQAAG1MAcQBsAFMAZQByAHYAZQByAE4A
YQBtAGUAAAlIAG8AcwB0AAAVUwBlAHIAdgBlAHIASABvAHMAdAAADVMAZQByAHYAZQByAAARRgBM
AEEAVABGAEkATABFAAAJRgBJAEwARQAAAy4AAAkuAC4ALgAgAAAHIAAgAAkAAD8uAC4ALgAgAHsA
RQByAHIAbwByACAAcgBlAGEAZABpAG4AZwAgAGMAbwBuAG4AZQBjAHQAaQBvAG4AOgAgAAADfQAA
Q1UAcwBlAHIAOgA6AHYAYQByAFMAUwBJAFMATwBwAHMAXwBDAG8AbgBuAGUAYwB0AGkAbwBuAFYA
YQBsAHUAZQBzAABxcwB0AF8ANQAzADMAZABkAGYAMQBkAGIAYwA4AGEANAA5ADgANgBiAGQANAAz
ADMAOQA1AGYAMQBjADgAOAA5AGUAZgBlAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8A
dQByAGMAZQBzAAAA6Xp3b25TRkiTsns5+OTrMQAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERZRQH
DBI9HQ4SQRJFAg4OHQ4IDg4SSQQAAQIcAyAADgYgAR0OHQMFIAASgIEFIAASgIUEIAASQQQgABJF
BAABAg4FIAIODg4IAAMCDg4RgI0CBg4FIAASgJEEIAECHAYgARKAlRwEIAEcHAUAAgIODgcgAggO
EYCZBAABDg4FIAIOCAMFAAEOHQ4FIAESPQ4HAAQODg4ODgMgAAIFBwISUQIFIAASgKUGIAEBEBJR
BiABEoCpHAQgAQEcBgcDElECHAMgABwIAAESgK0RgLEFIAASgLUHIAIBDhKAtQi3elxWGTTgiQiJ
hF3NgIDMkQQAAAAABAEAAAADBhJdAwYSYQMGEhACBggDBhEUBSACAQ4cBCABHA4EAAASXQQAABJh
BQABARJhBAAAEhADAAABBAgAEl0ECAASYQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhj
ZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNzdF81MzNkZGYxZGJjOGE0OTg2YmQ0MzM5NWYxYzg4
OWVmZQAABQEAAAAADgEACU1pY3Jvc29mdAAAHwEAGkNvcHlyaWdodCBAIE1pY3Jvc29mdCAyMDE4
AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1l
Ei5ORVQgRnJhbWV3b3JrIDQuNQAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5S
ZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFs
LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGlt
ZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAB0NwAAAAAAAAAAAACONwAAACAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAgDcAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAA
AAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAPgQAAAAAAAAAAAAAPgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAIZbOxoAAAEAhls7Gj8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBJ4DAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAHoDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAA0AAoAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAE0AaQBjAHIAbwBzAG8AZgB0AAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIA
aQBwAHQAaQBvAG4AAAAAAHMAdABfADUAMwAzAGQAZABmADEAZABiAGMAOABhADQAOQA4ADYAYgBk
ADQAMwAzADkANQBmADEAYwA4ADgAOQBlAGYAZQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8A
bgAAAAAAMQAuADAALgA2ADcAMQA1AC4AMgAzADQAMwAwAAAAAABwACgAAQBJAG4AdABlAHIAbgBh
AGwATgBhAG0AZQAAAHMAdABfADUAMwAzAGQAZABmADEAZABiAGMAOABhADQAOQA4ADYAYgBkADQA
MwAzADkANQBmADEAYwA4ADgAOQBlAGYAZQAuAGQAbABsAAAAWgAbAAEATABlAGcAYQBsAEMAbwBw
AHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAATQBpAGMAcgBvAHMAbwBmAHQA
IAAyADAAMQA4AAAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAA
AHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABzAHQAXwA1ADMAMwBkAGQA
ZgAxAGQAYgBjADgAYQA0ADkAOAA2AGIAZAA0ADMAMwA5ADUAZgAxAGMAOAA4ADkAZQBmAGUALgBk
AGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAcwB0AF8ANQAzADMAZABkAGYA
MQBkAGIAYwA4AGEANAA5ADgANgBiAGQANAAzADMAOQA1AGYAMQBjADgAOAA5AGUAZgBlAAAAQgAP
AAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADcAMQA1AC4AMgAzADQA
MwAwAAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2
ADcAMQA1AC4AMgAzADQAMwAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAKA3AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_Task_OnPostExecute"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{E1B8590A-2836-4491-8A28-F24DF327DE32}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_Task_OnPostExecute"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{FD4092C7-1531-4C59-8065-369CAD340586}"
              SQLTask:SqlStatementSource="EXEC [bix].[usp_SSISOps_Audit_OnPostExecute_67] @Scope='Task',@ExecutionID=?,@SourceID=?,@RowCountSupport=1,@LogCustomValues=0" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\SSISOpsNFObj_SendAlert"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{43033382-FC91-47BB-88D6-26860E66B429}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsNFObj_SendAlert">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="st_c1c093725e6348008983f38dc6bc73f2"
              VSTAMajorVersion="14"
              VSTAMinorVersion="0"
              Language="CSharp">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("st_c1c093725e6348008983f38dc6bc73f2")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Microsoft")]
[assembly: AssemblyProduct("st_c1c093725e6348008983f38dc6bc73f2")]
[assembly: AssemblyCopyright("Copyright @ Microsoft 2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="st_c1c093725e6348008983f38dc6bc73f2.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{9b5b5180-45f3-4e2a-ae3d-cb2d0c83aee4}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>st_c1c093725e6348008983f38dc6bc73f2</RootNamespace>
    <AssemblyName>st_c1c093725e6348008983f38dc6bc73f2</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[/*
Copyright © 2015 Pragmatic Works Inc.
#####################################################################################################################
LEGAL NOTICE
#####################################################################################################################
THE FOLLOWING SOURCE CODE IS PRODUCED BY PRAGMATIC WORKS INC.
YOU MUST HAVE A VALID LICENSE OF "BI xPRESS" (PRODUCT OF PRAGMATIC WORKS) TO USE/MODIFY THE FOLLOWING SOURCE CODE.

YOU CAN NOT PUBLISH ANY PORTION OF THIS SOURCE CODE WITHOUT WRITTEN PERMISSION OF PRAGMATIC WORKS INC.
##################################################################################################################### 
*/
#region Namespaces

using System;
using System.Data;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using Microsoft.SqlServer.Dts.Runtime;
using System.Net;
using System.Net.Mail;
using System.Collections;

#endregion

namespace st_c1c093725e6348008983f38dc6bc73f2
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // Begin BI xPress Code
            PerformNotificationAction();

            if (_isErrorEncountered)
                Dts.TaskResult = (int)ScriptResults.Failure;
            else
                Dts.TaskResult = (int)ScriptResults.Success;
            // End BI xPress Code
        }

#region ScriptResults declaration

        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };

#endregion

        private const string NotificationFrameworkAlertListVariableName = "User::varSSISOpsNF_AlertList";
        private const string NotificationFrameworkAlertListAllVariableName = "User::varSSISOpsNF_AlertList_All";
        private const string NotificationFrameworkCounter = "User::varSSISOpsNF_Notification_Counter";
        private const string NotificationFrameworkSubComponentName = "BI xPress Notification Framework Send Alert";

        private bool _isErrorEncountered;

        private void PerformNotificationAction()
        {
            const string PREFIX_DISABLED = "{D}";

            bool isPackageRunning = false;
            string sPkgName = ReadVariable("System::PackageName").ToString();

            System.DateTime dtStart = (DateTime)ReadVariable("System::StartTime");
            System.DateTime dtEnd = DateTime.Now;

            string sExecAcct = ReadVariable("System::UserName").ToString();
            string sMachine = ReadVariable("System::MachineName").ToString();
            string sInteractive = ReadVariable("System::InteractiveMode").ToString();
            string sStepName = null;

            System.Collections.Hashtable oRuntimeSettings = GetRuntimeSettings();

            string priorityModeSetting = GetSetting("PRIORITY_MODE", oRuntimeSettings) != null ? GetSetting("PRIORITY_MODE", oRuntimeSettings).ToString() : string.Empty;

            string alertInfosContents;
            bool isPackageTheSource = ReadVariable("System::SourceID").ToString() == ReadVariable("System::PackageID").ToString();

            if (isPackageTheSource)
            {
                // Package finished running 
                isPackageRunning = false;
                sStepName = string.Empty;
                alertInfosContents = ReadVariable(NotificationFrameworkAlertListAllVariableName) as string ?? string.Empty;
            }
            else
            {
                isPackageRunning = true;

                // Task finished running
                if (priorityModeSetting == "DELAYED")
                    return; // Do all work when package is completed 

                alertInfosContents = ReadVariable(NotificationFrameworkAlertListVariableName) as string ?? string.Empty;
            }

            // Parse the collection of AlertInfo here.
            System.Collections.Generic.List<AlertInfo> alertInfos = ParseAlertInfos(alertInfosContents);

            if (isPackageTheSource && alertInfos.Count > 0)
                sStepName = GetLastAlertSource(alertInfos);

            string messageBody = null;
            string subjectLine = null;
            string messageBodySms = null;

            int errorCount = 0;
            int warningCount = 0;
            int otherCount = 0;
            int notificationCounter = (int)ReadVariable(NotificationFrameworkCounter);
            int maxNotifyCount = (int)GetSetting("MAX_NOTIFICATIONS", oRuntimeSettings);

            bool bEmailMethod = (bool)GetSetting("NOTIFY_USING_EMAIL", oRuntimeSettings);
            bool bSMSMethod = (bool)GetSetting("NOTIFY_USING_SMS", oRuntimeSettings);
            bool bEventLogMethod = (bool)GetSetting("NOTIFY_USING_EVENTLOG", oRuntimeSettings);
            bool bLogFileMethod = (bool)GetSetting("NOTIFY_USING_LOGFILE", oRuntimeSettings);
            bool bUseCustEmailTemplate = (bool)GetSetting("USE_CUSTOM_EMAIL_TEMPLATE", oRuntimeSettings);
            string sCustEmailTemplatePath = (string)GetSetting("CUSTOM_EMAIL_TEMPLATE_FILEPATH", oRuntimeSettings);
            string sLogFolderPath = (string)GetSetting("LOG_FOLDER_PATH", oRuntimeSettings);
            int iDeleteLogOlderThanDays = (int)GetSetting("DELETE_LOG_OLDER_THAN_DAYS", oRuntimeSettings);

            if (alertInfos.Count <= 0 && ((bool)GetSetting("NOTIFY_ONCOMPLETE", oRuntimeSettings) == false && (bool)GetSetting("NOTIFY_ONSUCCESS", oRuntimeSettings) == false))
                return;

            if (alertInfos.Count <= 0 && isPackageRunning)
                return;

            if (isPackageRunning && notificationCounter >= maxNotifyCount && (bool)GetSetting("NOTIFY_ONCOMPLETE", oRuntimeSettings) == false)
                return;

            bool isDelayedMode = priorityModeSetting == "DELAYED";

            if ((bool)GetSetting("NOTIFY_ONCOMPLETE", oRuntimeSettings) == false && isDelayedMode == false && notificationCounter > 0)
                return;

            // Send Email
            object fromAddressObj = ReadVariable("User::varSSISOpsNF_From");
            string sFrom = fromAddressObj != null ? fromAddressObj.ToString() : "NotificationFramework@BIxPress.com";
            string sEmailList = string.Empty;

            if (bEmailMethod && (ReadVariable("User::varSSISOpsNF_To") != null))
            {
                sEmailList = ReadVariable("User::varSSISOpsNF_To").ToString();
                sEmailList = GetFilteredEmailList(sEmailList, ";", PREFIX_DISABLED);
            }

            MailMessage oMessage = null;

            if (!string.IsNullOrEmpty(sEmailList))
            {
                oMessage = new MailMessage();
                oMessage.From = new MailAddress(sFrom);
                oMessage.To.Add(sEmailList.Replace(";", ","));

                if (isDelayedMode == false)
                    oMessage.Priority = MailPriority.High;

                string sCCList = (string)GetSetting("CC_EMAILLIST", oRuntimeSettings);
                string sBCCList = (string)GetSetting("BCC_EMAILLIST", oRuntimeSettings);

                if (string.IsNullOrEmpty(sCCList) == false)
                    oMessage.CC.Add(sCCList.Replace(";", ",").Replace("|", ","));

                if (string.IsNullOrEmpty(sBCCList) == false)
                    oMessage.Bcc.Add(sBCCList.Replace(";", ",").Replace("|", ","));

                if ((string)GetSetting("EMAIL_FORMAT", oRuntimeSettings) == "HTML")
                {
                    oMessage.IsBodyHtml = true;
                    messageBody = GetHTMLNotificationMessage(sPkgName, dtStart, dtEnd, FormatTimeDifference(dtStart, dtEnd), sMachine, sExecAcct, sInteractive, isPackageRunning, sStepName, ref errorCount, ref warningCount, ref otherCount, alertInfos, false, 0, bUseCustEmailTemplate, sCustEmailTemplatePath);
                }
                else
                {
                    oMessage.IsBodyHtml = false;
                    messageBody = GetTextNotificationMessage(sPkgName, dtStart, dtEnd, FormatTimeDifference(dtStart, dtEnd), sMachine, sExecAcct, sInteractive, isPackageRunning, sStepName, ref errorCount, ref warningCount, ref otherCount, alertInfos, false, 0, bUseCustEmailTemplate, sCustEmailTemplatePath);
                }

                oMessage.Body = messageBody;
            }

            if (bEventLogMethod || bLogFileMethod)
            {
                errorCount = 0;
                warningCount = 0;
                otherCount = 0;
                messageBody = GetTextNotificationMessage(sPkgName, dtStart, dtEnd, FormatTimeDifference(dtStart, dtEnd), sMachine, sExecAcct, sInteractive, isPackageRunning, sStepName, ref errorCount, ref warningCount, ref otherCount, alertInfos, false, 0, false, string.Empty);

                if (bLogFileMethod && (iDeleteLogOlderThanDays > 0))
                    DeleteOldFiles(sLogFolderPath, "NF_LOG_*.txt", iDeleteLogOlderThanDays);
            }

            if (warningCount > 0 && (bool)GetSetting("NOTIFY_ONWARNING", oRuntimeSettings))
            {
            }
            else
            {
                // Yes Send Alert 
                if ((errorCount > 0 && (bool)GetSetting("NOTIFY_ONSUCCESS", oRuntimeSettings) && (bool)GetSetting("NOTIFY_ONCOMPLETE", oRuntimeSettings) == false && (bool)GetSetting("NOTIFY_ONERROR", oRuntimeSettings) == false && (bool)GetSetting("NOTIFY_ONWARNING", oRuntimeSettings) == false))
                    return;
            }

            // Send SMS 
            int iMaxLen = (int)GetSetting("SMS_MAXLENGTH", oRuntimeSettings);
            string sSMSList = (string)GetSetting("SMS_EMAILLIST", oRuntimeSettings);

            if (string.IsNullOrEmpty(sSMSList) == false)
                sSMSList = GetFilteredEmailList(sSMSList, "|", PREFIX_DISABLED);

            MailMessage oMessageSMS = null;

            if (bSMSMethod == true && !string.IsNullOrEmpty(sSMSList))
            {
                oMessageSMS = new MailMessage();
                oMessageSMS.From = new MailAddress(sFrom);
                oMessageSMS.To.Add(sSMSList.Replace("|", ","));
                errorCount = 0;
                warningCount = 0;
                otherCount = 0;
                messageBodySms = GetTextNotificationMessage(sPkgName, dtStart, dtEnd, FormatTimeDifference(dtStart, dtEnd), sMachine, sExecAcct, sInteractive, isPackageRunning, sStepName, ref errorCount, ref warningCount, ref otherCount, alertInfos, true, iMaxLen, false, string.Empty);

                string sTempBody;

                if (errorCount > 0)
                    sTempBody = errorCount == 1 ? "<SSIS Error>" : "<SSIS Errors>";
                else if (warningCount > 0)
                    sTempBody = warningCount == 1 ? "<SSIS Warning>" : "<SSIS Warnings>";
                else if (otherCount > 0)
                    sTempBody = otherCount == 1 ? "<SSIS Message>" : "<SSIS Messages>";
                else
                    sTempBody = "<SSIS Success>";

                sTempBody += System.Environment.NewLine + messageBodySms;

                if (sTempBody.Length >= iMaxLen - sFrom.Length)
                    oMessageSMS.Body = sTempBody.Substring(iMaxLen - sFrom.Length);
                else
                    oMessageSMS.Body = sTempBody;
            }

            if (isPackageRunning)
            {
                if (errorCount > 0)
                    subjectLine = "ERROR : Package " + ReadVariable("System::PackageName") + " has error(s) at task [" + ReadVariable("System::SourceName") + "]";
                else if (warningCount > 0)
                    subjectLine = "WARNING : Package " + ReadVariable("System::PackageName").ToString() + " has warning(s) at task [" + ReadVariable("System::SourceName").ToString() + "]";
                else
                {
                    if (otherCount > 0)
                        subjectLine = "ALERT : Package " + ReadVariable("System::PackageName").ToString() + " generated runtime alert(s)";
                    else
                        return;
                }
            }
            else
            {
                if (errorCount > 0)
                    subjectLine = "ERROR : Package " + ReadVariable("System::PackageName").ToString() + " completed with [" + errorCount.ToString() + "] error(s)";
                else if (warningCount > 0)
                    subjectLine = "WARNING : Package " + ReadVariable("System::PackageName").ToString() + " completed with [" + warningCount.ToString() + "] warning(s)";
                else if (otherCount > 0)
                    subjectLine = "ALERT : Package " + ReadVariable("System::PackageName").ToString() + " completed with [" + otherCount.ToString() + "] alert(s)";
                else
                    subjectLine = "SUCCESS : Package " + ReadVariable("System::PackageName").ToString() + " completed successfully";
            }

            SmtpClient oSmtpClient = null;

            if (bEmailMethod || bSMSMethod)
            {
                oSmtpClient = new SmtpClient(ReadVariable("User::varSSISOpsNF_SMTPServerName").ToString(), (int)GetSetting("SMTP_PORT", oRuntimeSettings));

                if (string.IsNullOrEmpty(GetSetting("SMTP_UID", oRuntimeSettings).ToString()) == false)
                    oSmtpClient.Credentials = new System.Net.NetworkCredential(GetSetting("SMTP_UID", oRuntimeSettings).ToString(), GetSetting("SMTP_PWD", oRuntimeSettings).ToString());
                else
                    oSmtpClient.UseDefaultCredentials = true;

                if ((bool)GetSetting("SMTP_USESSL", oRuntimeSettings))
                    oSmtpClient.EnableSsl = true;
            }

            if (isPackageRunning)
            {
                // Already sent immediate mode alert
                WriteVariable(NotificationFrameworkAlertListVariableName, string.Empty);
                alertInfos.Clear();
            }

            if (oMessage != null && oSmtpClient != null)
            {
                oMessage.Subject = subjectLine;

                try
                {
                    oSmtpClient.Send(oMessage);
                }
                catch (System.Net.Mail.SmtpException ex)
                {
                    _isErrorEncountered = true;

                    string exceptionMessage = UnwindExceptionMessages(ex);

                    Dts.Events.FireError((int)ex.StatusCode, NotificationFrameworkSubComponentName, exceptionMessage, "http://help.pragmaticworks.com/BIxPress/", 0);
                }
            }

            if (oMessageSMS != null && oSmtpClient != null)
            {
                if (iMaxLen > 400)
                {
                    ////Must be MMS 
                    oMessageSMS.Subject = subjectLine;

                    if (isDelayedMode == false)
                        oMessageSMS.Priority = MailPriority.High;
                }
                else
                    oMessageSMS.Subject = string.Empty;

                try
                {
                    oSmtpClient.Send(oMessageSMS);
                }
                catch (System.Net.Mail.SmtpException ex)
                {
                    _isErrorEncountered = true;

                    string exceptionMessage = UnwindExceptionMessages(ex);

                    Dts.Events.FireError((int)ex.StatusCode, NotificationFrameworkSubComponentName, exceptionMessage, "http://help.pragmaticworks.com/BIxPress/", 0);
                }
            }

            // Event Log
            if (bEventLogMethod)
            {
                if (errorCount > 0)
                    WriteToEventLog(messageBody, "BI xPress", System.Diagnostics.EventLogEntryType.Error, "Application", 1);
                else if (warningCount > 0)
                    WriteToEventLog(messageBody, "BI xPress", System.Diagnostics.EventLogEntryType.Warning, "Application", 1);
                else
                    WriteToEventLog(messageBody, "BI xPress", System.Diagnostics.EventLogEntryType.Information, "Application", 1);
            }

            // Log File
            if (bLogFileMethod)
            {
                // Log Event to Text File 
                string sPath = null;
                string sFileName = null;

                sPkgName = sPkgName.Replace("<", string.Empty).Replace(">", string.Empty).Replace(":", string.Empty).Replace("/", string.Empty).Replace("\\", string.Empty).Replace("*", string.Empty).Replace("|", string.Empty).Replace("?", string.Empty);

                if (errorCount > 0)
                    sFileName = "NF_LOG_" + System.DateTime.Now.ToString("yyyy-MM-dd hhmmss") + "_ERROR_" + sPkgName + ".txt";
                else if (warningCount > 0)
                    sFileName = "NF_LOG_" + System.DateTime.Now.ToString("yyyy-MM-dd hhmmss") + "_WARNING_" + sPkgName + ".txt";
                else
                    sFileName = "NF_LOG_" + System.DateTime.Now.ToString("yyyy-MM-dd hhmmss") + "_INFO_" + sPkgName + ".txt";

                sPath = System.IO.Path.Combine(sLogFolderPath, sFileName);
                SaveTextToFile(messageBody, sPath, false, null);
            }

            // Increment notification counter
            WriteVariable(NotificationFrameworkCounter, notificationCounter++);
        }

        private System.Collections.Generic.List<AlertInfo> ParseAlertInfos(string alertInfosContents)
        {
            if (string.IsNullOrEmpty(alertInfosContents))
                return new System.Collections.Generic.List<AlertInfo>();

            System.Collections.Generic.List<AlertInfo> alertInfos = new System.Collections.Generic.List<AlertInfo>();

            try
            {
                // Create the XML document once here immediately before use so we don't have to validate it each time we add an AlertInfo object to the list.
                System.Xml.XmlDocument document = new System.Xml.XmlDocument();

                // This is the static XML document declaration that we will load our children into.
                // The <AlertInfos /> element will become our parent element which will contain all of the serialized
                // AlertInfo objects that we added in the OnWarning, OnError, etc. event handlers.
                document.LoadXml("<?xml version=\"1.0\" encoding=\"UTF-16\" ?><AlertInfos />");

                System.Xml.XmlDocumentFragment documentFragment = document.CreateDocumentFragment();

                documentFragment.InnerXml = alertInfosContents;

                document.DocumentElement.AppendChild(documentFragment);

                System.Xml.Serialization.XmlSerializer xmlSerializer = new System.Xml.Serialization.XmlSerializer(typeof(AlertInfo), new Type[] { typeof(AlertType) });

                foreach (System.Xml.XmlElement alertInfoElement in document.DocumentElement.ChildNodes)
                {
                    using (System.IO.StringReader reader = new System.IO.StringReader(alertInfoElement.OuterXml))
                    {
                        AlertInfo parsedAlertInfo = xmlSerializer.Deserialize(reader) as AlertInfo;

                        if (parsedAlertInfo != null)
                            alertInfos.Add(parsedAlertInfo);
                    }
                }
            }
            catch (Exception ex)
            {
                Dts.Events.FireError(60001, NotificationFrameworkSubComponentName, "There was an error while attempting to parse the accumulated alerts for BI xPress Notification Framework.  Error message: " + ex.Message, "http://help.pragmaticworks.com/BIxPress", 0);
            }

            return alertInfos;
        }

        private string UnwindExceptionMessages(Exception ex)
        {
            if (ex == null)
                return string.Empty;

            string messages = !string.IsNullOrEmpty(ex.Message) ? ex.Message : string.Empty;

            string childMessages = UnwindExceptionMessages(ex.InnerException);

            if (!string.IsNullOrEmpty(childMessages))
                messages += "  " + childMessages;

            return messages;
        }

        public bool WriteToEventLog(string logEntry, string appName, System.Diagnostics.EventLogEntryType eventType, string logName, int eventId)
        {
            try
            {
                System.Diagnostics.EventLog objEventLog = new System.Diagnostics.EventLog();
            
                // Register the App as an Event Source 
                if (!System.Diagnostics.EventLog.SourceExists(appName))
                    System.Diagnostics.EventLog.CreateEventSource(appName, logName);

                objEventLog.Source = appName;
                objEventLog.WriteEntry(logEntry, eventType, eventId);

                return true;
            }
            catch (Exception ex)
            {
                _isErrorEncountered = true;
            
                Dts.Events.FireError(-1, NotificationFrameworkSubComponentName, string.Format("An error occurred while creating the Windows Event Log \"{0}\": {1}.", logName, ex.Message), string.Empty, 0);

                return false;
            }
        }

        public bool SaveTextToFile(string fileContents, string filePath, bool isAppend, System.Text.Encoding encoding)
        {
            if (string.IsNullOrEmpty(filePath))
            {
                _isErrorEncountered = true;
            
                Dts.Events.FireError(-1073573549, NotificationFrameworkSubComponentName, "The log file path is invalid.  Unable to save log file.", string.Empty, 0);

                return false;
            }

            string directoryPath = System.IO.Path.GetDirectoryName(filePath);

            if (string.IsNullOrEmpty(filePath))
            {
                _isErrorEncountered = true;
                
                Dts.Events.FireError(-1073573549, NotificationFrameworkSubComponentName, "The log file directory path is invalid.  Unable to save log file.", string.Empty, 0);

                return false;
            }

            if (directoryPath != null && !System.IO.Directory.Exists(directoryPath))
            {
                _isErrorEncountered = true;
                
                Dts.Events.FireError(-1073573549, NotificationFrameworkSubComponentName, string.Format("The log file directory \"{0}\" does not exist.  Unable to save log file because the specified directory does not exist.", directoryPath), string.Empty, 0);

                return false;
            }

            try
            {
                using (System.IO.StreamWriter objWriter = encoding == null ? new System.IO.StreamWriter(filePath, isAppend) : new System.IO.StreamWriter(filePath, isAppend, encoding))
                {
                    objWriter.Write(fileContents);
                    objWriter.Close();
                }
            }
            catch (Exception ex)
            {
                _isErrorEncountered = true;
            
                Dts.Events.FireError(-1, NotificationFrameworkSubComponentName, string.Format("An error occurred while creating the log file \"{0}\": {1}", filePath, ex.Message), string.Empty, 0);

                return false;
            }

            return true;
        }

        /// <summary>
        /// This will delete files with specified pattern which are older than specified days.
        /// </summary>
        /// <param name="directoryPath">The directory path for which to remove files.</param>
        /// <param name="fileExtensionSearchPattern">The log files search pattern.</param>
        /// <param name="olderThanDays">The number of days ago to begin deleting files.</param>
        /// <returns>The number of files that were deleted.</returns>
        public int DeleteOldFiles(string directoryPath, string fileExtensionSearchPattern, int olderThanDays)
        {
            int iDeleted = 0;

            try
            {
                if (!System.IO.Directory.Exists(directoryPath))
                {
                    Dts.Events.FireError(-1073573549, NotificationFrameworkSubComponentName, string.Format("The directory \"{0}\" does not exist.  Unable to delete old log files because the directory does not exist.", directoryPath), string.Empty, 0);

                    return 0;
                }

                string[] files = System.IO.Directory.GetFiles(directoryPath, fileExtensionSearchPattern);

                foreach (string myfile in files)
                {
                    System.IO.FileInfo fi = new System.IO.FileInfo(myfile);

                    // Write full path of this file 
                    if (fi.CreationTime < DateTime.Today.AddDays(0 - olderThanDays))
                    {
                        fi.Delete();
                        iDeleted++;
                    }
                }
            }
            catch (Exception ex)
            {
                Dts.Events.FireError(-1, NotificationFrameworkSubComponentName, string.Format("An error occurred while deleting old log files from the \"{0}\" directory: {1}", directoryPath, ex.Message), string.Empty, 0);
            }

            return iDeleted;
        }

        public string GetSubStringBetween(string stringToParse, string startString, string endString)
        {
            if (string.IsNullOrEmpty(stringToParse))
                return null;

            int startPosition = stringToParse.IndexOf(startString);
            int endPosition = stringToParse.IndexOf(endString);

            if (startPosition < 0 | endPosition < 0)
                return null;

            return stringToParse.Substring(startPosition + startString.Length, endPosition - (startPosition + startString.Length));
        }

        // Example : ReplaceSubStringBetween("---<a>test</a>---", "<a>", "</a>", "HHH",False) ===> ---<a>HHH</a>--- 
        // Example : ReplaceSubStringBetween("---<a>test</a>---", "<a>", "</a>", "HHH",True) ===> ---HHH--- 
        public string ReplaceSubStringBetween(string stringToParse, string startString, string endString, string replacewith, bool replacemarkers)
        {
            if (string.IsNullOrEmpty(stringToParse))
                return null;

            int startPosition = stringToParse.IndexOf(startString);
            int endPosition = stringToParse.IndexOf(endString);

            if (startPosition < 0 | endPosition < 0)
                return stringToParse;

            string s1 = null;
            string s2 = null;

            if (replacemarkers == false)
            {
                s1 = stringToParse.Remove(startPosition + startString.Length, (endPosition) - (startPosition + startString.Length));
                s2 = s1.Insert(startPosition + startString.Length, replacewith);
            }
            else
            {
                s1 = stringToParse.Remove(startPosition, (endPosition + endString.Length) - (startPosition));
                s2 = s1.Insert(startPosition, replacewith);
            }

            return s2;
        }

        private string GetPkgStatus(bool bPkgRunning, string sStepName, int iErrors, int iWarnings)
        {
            string sStatus = null;
            string s = string.Empty;

            if (string.IsNullOrEmpty(sStepName) == false)
                s = " @ STEP [" + sStepName + "]";

            if (iErrors > 0)
            {
                if (bPkgRunning == false)
                    sStatus = "COMPLETED W/ ERRORS";
                else
                    sStatus = "HAS " + (iErrors > 0 ? " ERRORS" : string.Empty) + s;
            }
            else
            {
                if (bPkgRunning == false)
                    sStatus = "COMPLETED" + (iWarnings > 0 ? " W/ WARNINGS" : string.Empty);
                else
                    sStatus = "HAS " + (iWarnings > 0 ? " WARNINGS" : string.Empty) + s;
            }

            return sStatus;
        }

        private string GetTextNotificationMessage(string sPkgName, DateTime dtStartTime, DateTime dtEndTime, string sRunTime, string sMachineName, string sExecAcctName, string sInteractive, bool bPkgRunning, string sStepName, ref int iErrors, ref int iWarnings, ref int iOtherAlerts, System.Collections.Generic.List<AlertInfo> alertList, bool bForSMS, int iSMSLength, bool bUseCustEmailTemplate, string sCustEmailTemplatePath)
        {
            System.Text.StringBuilder oSB = new System.Text.StringBuilder();
            System.Text.StringBuilder oSBAlerts = new System.Text.StringBuilder();

            System.Text.StringBuilder sbAlerts = new System.Text.StringBuilder();

            string sStatus = null;

            string sAlertType = null;

            string sTemplate = string.Empty;

            if (bForSMS == true)
                bUseCustEmailTemplate = false;

            string sAlertRow = string.Empty;
            string sAlertRows = string.Empty;

            if (bUseCustEmailTemplate == true)
            {
                try
                {
                    sTemplate = System.IO.File.ReadAllText(sCustEmailTemplatePath);
                    sAlertRow = GetSubStringBetween(sTemplate, "<!--{{AlertBlockStart}}-->", "<!--{{AlertBlockEnd}}-->");
                }
                catch (Exception)
                {
                    bUseCustEmailTemplate = false;
                }
            }

            if (alertList.Count > 0)
            {
                if (bForSMS == false)
                    oSBAlerts.AppendLine("************ Total [" + alertList.Count + "] Alerts *************");
                else
                    oSBAlerts.AppendLine("<< [" + alertList.Count + "] Alerts >> ");

                oSBAlerts.AppendLine();

                foreach (AlertInfo alertInfo in alertList)
                {
                    if (alertInfo.AlertType == AlertType.ErrorAlert)
                    {
                        sAlertType = "ERROR";
                        iErrors = iErrors + 1;
                    }
                    else if (alertInfo.AlertType == AlertType.WarningAlert)
                    {
                        sAlertType = "WARNING";
                        iWarnings = iWarnings + 1;
                    }
                    else if (alertInfo.AlertType == AlertType.TimeThresholdAlert)
                    {
                        sAlertType = "TIME THRESHOLD ALERT";
                        iOtherAlerts = iOtherAlerts + 1;
                    }
                    else
                        sAlertType = "ALERT";

                    if (bForSMS)
                        oSBAlerts.AppendLine(alertInfo.SourceName + " >> " + sAlertType + " : " + alertInfo.AlertDescription);
                    else
                    {
                        if (bUseCustEmailTemplate && string.IsNullOrEmpty(sAlertRow) == false)
                            sAlertRows = sAlertRows + sAlertRow.Replace("{{AlertSourceName}}", alertInfo.SourceName).Replace("{{AlertTime}}", alertInfo.AlertTimeStamp.ToString(System.Globalization.CultureInfo.CurrentCulture)).Replace("{{AlertType}}", sAlertType).Replace("{{AlertMessage}}", alertInfo.AlertDescription).Replace("{{AlertCode}}", alertInfo.AlertCode.ToString(System.Globalization.CultureInfo.InvariantCulture));
                        else
                            oSBAlerts.AppendLine((((("[" + (alertInfo.AlertTimeStamp).ToString("MM/dd HH:mm:ss") + "] ") + alertInfo.SourceName + " = > ") + sAlertType + "[") + alertInfo.AlertCode.ToString(System.Globalization.CultureInfo.InvariantCulture) + "] : ") + alertInfo.AlertDescription + System.Environment.NewLine);
                    }
                }
            }

            sStatus = GetPkgStatus(bPkgRunning, sStepName, iErrors, iWarnings);

            string sShortStatus = GetShortStatus(iErrors, iWarnings);

            if (bUseCustEmailTemplate)
            {
                sTemplate = sTemplate.Replace("{{PackageName}}", sPkgName
                        ).Replace("{{StatusLong}}", sStatus
                        ).Replace("{{StatusShort}}", sShortStatus
                        ).Replace("{{TotalAlertCount}}", (iErrors + iWarnings).ToString()
                        ).Replace("{{ErrorCount}}", iErrors.ToString()
                        ).Replace("{{WarningCount}}", iWarnings.ToString()
                        ).Replace("{{RunTime}}", sRunTime
                        ).Replace("{{MachineName}}", sMachineName
                        ).Replace("{{ExecutionAccount}}", sExecAcctName
                        ).Replace("{{WasInteractive}}", sInteractive
                        ).Replace("{{PackageStartTime}}", dtStartTime.ToString()
                        ).Replace("{{FrameworkVersion}}", "2018.1.29.1"
                        ).Replace("{{PackageEndTime}}", dtEndTime.ToString());

                return ReplaceSubStringBetween(sTemplate, "<!--{{AlertBlockStart}}-->", "<!--{{AlertBlockEnd}}-->", sAlertRows, true);
            }
            else
            {
                oSB.AppendLine("Package: " + sPkgName);
                oSB.AppendLine("Status: " + sStatus);

                if (bForSMS)
                    oSB.AppendLine("Start Time: " + dtStartTime.ToString("MM/dd HH:mm:ss"));
                else
                    oSB.AppendLine("Start Time: " + dtStartTime);

                if (bPkgRunning == false)
                {
                    if (bForSMS == false)
                        oSB.AppendLine("End Time: " + dtEndTime);

                    oSB.AppendLine("Run Time: " + FormatTimeDifference(dtStartTime, dtEndTime));
                }
                else if (bForSMS == false)
                    oSB.AppendLine("End Time: <Still Running>");

                if (bForSMS == false)
                {
                    oSB.AppendLine("Total Errors: " + iErrors);
                    oSB.AppendLine("Total Warnings: " + iWarnings);
                    oSB.AppendLine("Machine Name: " + sMachineName);
                    oSB.AppendLine("Was Interactive?: " + sInteractive);
                    oSB.AppendLine("Execution Account: " + sExecAcctName);
                    oSB.AppendLine();
                }

                return oSB.ToString() + oSBAlerts.ToString();
            }
        }

        private string GetHTMLNotificationMessage(string sPkgName, DateTime dtStartTime, DateTime dtEndTime, string sRunTime, string sMachineName, string sExecAcctName, string sInteractive, bool bPkgRunning, string sStepName, ref int iErrors, ref int iWarnings, ref int iOtherAlerts, System.Collections.Generic.List<AlertInfo> alertList, bool bForSMS, int iSMSLength, bool bUseCustEmailTemplate, string sCustEmailTemplatePath)
        {
            System.Text.StringBuilder sb = new System.Text.StringBuilder();
            System.Text.StringBuilder sbAlerts = new System.Text.StringBuilder();
            string sStatus = null;
            string sColor = null;
            string sTemplate = string.Empty;

            string sAlertBlock = string.Empty;
            string sErrorBlock = string.Empty;
            string sWarningBlock = string.Empty;
            string sErrorSourceBlock = string.Empty;
            string sWarningSourceBlock = string.Empty;
            string sErrorRow = string.Empty;
            string sWarningRow = string.Empty;

            if (bForSMS == true)
                bUseCustEmailTemplate = false;

            if (bUseCustEmailTemplate)
            {
                try
                {
                    sTemplate = System.IO.File.ReadAllText(sCustEmailTemplatePath);
                    sAlertBlock = GetSubStringBetween(sTemplate, "<!--{{AlertBlockStart}}-->", "<!--{{AlertBlockEnd}}-->");

                    if (string.IsNullOrEmpty(sAlertBlock) == false)
                    {
                        sWarningBlock = sAlertBlock;
                        sErrorBlock = sAlertBlock;
                    }
                    else
                    {
                        sErrorBlock = GetSubStringBetween(sTemplate, "<!--{{ErrorBlockStart}}-->", "<!--{{ErrorBlockEnd}}-->");
                        sWarningBlock = GetSubStringBetween(sTemplate, "<!--{{WarningBlockStart}}-->", "<!--{{WarningBlockEnd}}-->");
                    }

                    sErrorSourceBlock = GetSubStringBetween(sErrorBlock, "<!--{{AlertSourceStart}}-->", "<!--{{AlertSourceEnd}}-->");
                    sErrorRow = GetSubStringBetween(sErrorBlock, "<!--{{AlertRowStart}}-->", "<!--{{AlertRowEnd}}-->");

                    if (string.IsNullOrEmpty(sWarningBlock) == false)
                    {
                        sWarningSourceBlock = GetSubStringBetween(sWarningBlock, "<!--{{AlertSourceStart}}-->", "<!--{{AlertSourceEnd}}-->");
                        sWarningRow = GetSubStringBetween(sWarningBlock, "<!--{{AlertRowStart}}-->", "<!--{{AlertRowEnd}}-->");
                    }
                }
                catch (Exception)
                {
                    // Dts.FireError "Can not load template file. " + ex.Message
                    // Dont use template becuase we cant load file 
                    bUseCustEmailTemplate = false;
                }
            }

            string sAlertHTML = string.Empty;

            /////////////////////////////////////////// 
            //Loop Through ERRORS 
            /////////////////////////////////////////// 

            string sErrorHTML = string.Empty;
            string sPrevSource = string.Empty;

            string sSourceAlertRows = string.Empty;

            foreach (AlertInfo alertInfo in alertList)
            {
                if (alertInfo.AlertType != AlertType.ErrorAlert)
                    continue;

                iErrors++;
                sColor = "FFD5D5";

                if (bUseCustEmailTemplate == true && string.IsNullOrEmpty(sErrorRow) == true)
                    continue;

                if (sPrevSource != alertInfo.SourceName)
                {
                    // Alert Source Line 
                    if (bUseCustEmailTemplate == true)
                    {
                        if (iErrors > 1)
                            sErrorHTML = ReplaceSubStringBetween(sErrorHTML, "<!--{{AlertRowStart}}-->", "<!--{{AlertRowEnd}}-->", sSourceAlertRows, true); // Prev Source Block

                        if (string.IsNullOrEmpty(sWarningSourceBlock) == false)
                            sErrorHTML += sErrorSourceBlock.Replace("{{AlertSourceName}}", alertInfo.SourceName);
                        else
                            sErrorHTML += sErrorRow.Replace("{{AlertSourceName}}", alertInfo.SourceName);

                        sSourceAlertRows = string.Empty;
                    }
                    else
                        sErrorHTML += (("<tr><td width=\"100%\" bgcolor=\"#" + sColor + "\"><b>Source :</b> ") + alertInfo.SourceName + "</td></tr>") + System.Environment.NewLine;
                }

                // Alert Line 
                if (bUseCustEmailTemplate == true)
                    sSourceAlertRows = sSourceAlertRows + sErrorRow.Replace("{{AlertSourceName}}", alertInfo.SourceName).Replace("{{AlertTime}}", alertInfo.AlertTimeStamp.ToString(System.Globalization.CultureInfo.CurrentCulture)).Replace("{{AlertType}}", "Error").Replace("{{AlertMessage}}", alertInfo.AlertDescription).Replace("{{AlertCode}}", alertInfo.AlertCode.ToString(System.Globalization.CultureInfo.InvariantCulture));
                else
                    sErrorHTML = sErrorHTML + ((("<tr><td width=\"100%\"><b>" + alertInfo.AlertTimeStamp.ToString(System.Globalization.CultureInfo.CurrentCulture) + " : " + "</b>[") + alertInfo.AlertCode + "] ") + alertInfo.AlertDescription + "</td></tr>") + System.Environment.NewLine;

                sPrevSource = alertInfo.SourceName;
            }

            if (iErrors > 0)
            {
                if (bUseCustEmailTemplate == true)
                {
                    // Replace last source detail after loop is done 
                    // Populate Prev Source Block 
                    sErrorHTML = ReplaceSubStringBetween(sErrorHTML, "<!--{{AlertRowStart}}-->", "<!--{{AlertRowEnd}}-->", sSourceAlertRows, true);
                    // Populate Error Block 
                    if (string.IsNullOrEmpty(sAlertBlock) == false)
                        sAlertHTML += sErrorHTML;
                    else
                    {
                        sErrorBlock = ReplaceSubStringBetween(sErrorBlock, "<!--{{AlertSourceStart}}-->", "<!--{{AlertSourceEnd}}-->", sErrorHTML, true);
                        sTemplate = ReplaceSubStringBetween(sTemplate, "<!--{{ErrorBlockStart}}-->", "<!--{{ErrorBlockEnd}}-->", sErrorBlock, true);
                    }
                }
                else
                {
                    sbAlerts.AppendLine("<table border=\"1\" width=\"100%\" style=\"border-collapse: collapse;font-family: verdana; font-size: 10pt\">");
                    sbAlerts.AppendLine("<tr><td width=\"100%\" bgcolor=\"#FF0000\"><font color=\"#FFFFFF\" Size=\"4\"><b>ERRORS</b></font></td></tr>");
                    sbAlerts.AppendLine(sErrorHTML);
                    sbAlerts.AppendLine("</table><BR>");
                }
            }
            else if (bUseCustEmailTemplate)
                sTemplate = ReplaceSubStringBetween(sTemplate, "<!--{{ErrorBlockStart}}-->", "<!--{{ErrorBlockEnd}}-->", string.Empty, true);

            /////////////////////////////////////////// 
            //Loop Through Warnings 
            /////////////////////////////////////////// 
            string sWarningHTML = string.Empty;
            sPrevSource = string.Empty;

            foreach (AlertInfo alertInfo in alertList)
            {
                if (alertInfo.AlertType != AlertType.WarningAlert)
                    continue;

                iWarnings++;
                sColor = "FFFF80";

                if (bUseCustEmailTemplate == true && string.IsNullOrEmpty(sWarningRow) == true)
                    continue;

                if (sPrevSource != alertInfo.SourceName)
                {
                    if (bUseCustEmailTemplate == true)
                    {
                        if (iWarnings > 1)
                            sWarningHTML = ReplaceSubStringBetween(sWarningHTML, "<!--{{AlertRowStart}}-->", "<!--{{AlertRowEnd}}-->", sSourceAlertRows, true); // Prev Source Block

                        if (string.IsNullOrEmpty(sWarningSourceBlock) == false)
                            sWarningHTML += sWarningSourceBlock.Replace("{{AlertSourceName}}", alertInfo.SourceName);
                        else
                            sWarningHTML += sWarningRow.Replace("{{AlertSourceName}}", alertInfo.SourceName);

                        sSourceAlertRows = string.Empty;
                    }
                    else
                        sWarningHTML += (("<tr><td width=\"100%\" bgcolor=\"#" + sColor + "\"><b>Source :</b> ") + alertInfo.SourceName + "</td></tr>") + System.Environment.NewLine;
                }

                if (bUseCustEmailTemplate == true && string.IsNullOrEmpty(sWarningRow) == false)
                    sSourceAlertRows += sErrorRow.Replace("{{AlertSourceName}}", alertInfo.SourceName).Replace("{{AlertTime}}", alertInfo.AlertTimeStamp.ToString(System.Globalization.CultureInfo.CurrentCulture)).Replace("{{AlertType}}", "Warning").Replace("{{AlertMessage}}", alertInfo.AlertDescription).Replace("{{AlertCode}}", alertInfo.AlertCode.ToString(System.Globalization.CultureInfo.InvariantCulture));
                else
                    sWarningHTML += ((("<tr><td width=\"100%\"><b>" + alertInfo.AlertTimeStamp.ToString(System.Globalization.CultureInfo.CurrentCulture) + " : " + "</b>[") + alertInfo.AlertCode.ToString(System.Globalization.CultureInfo.InvariantCulture) + "] ") + alertInfo.AlertDescription + "</td></tr>") + System.Environment.NewLine;

                sPrevSource = alertInfo.SourceName;
            }

            if (iWarnings > 0)
            {
                if (bUseCustEmailTemplate == true)
                {
                    if (string.IsNullOrEmpty(sWarningRow) == false)
                    {
                        sWarningHTML = ReplaceSubStringBetween(sWarningHTML, "<!--{{AlertRowStart}}-->", "<!--{{AlertRowEnd}}-->", sSourceAlertRows, true);

                        // Populate Warning Block
                        if (string.IsNullOrEmpty(sAlertBlock) == false)
                            sAlertHTML += sWarningHTML;
                        else
                        {
                            sWarningBlock = ReplaceSubStringBetween(sWarningBlock, "<!--{{AlertSourceStart}}-->", "<!--{{AlertSourceEnd}}-->", sWarningHTML, true);
                            sTemplate = ReplaceSubStringBetween(sTemplate, "<!--{{WarningBlockStart}}-->", "<!--{{WarningBlockEnd}}-->", sWarningBlock, true);
                        }
                    }
                }
                else
                {
                    sbAlerts.AppendLine("<table border=\"1\" width=\"100%\" style=\"border-collapse: collapse;font-family: verdana; font-size: 10pt\">");
                    sbAlerts.AppendLine("<tr><td width=\"100%\" bgcolor=\"#FD6013\"><font color=\"#FFFFFF\" Size=\"4\"><b>WARNINGS</b></font></td></tr>");
                    sbAlerts.AppendLine(sWarningHTML);
                    sbAlerts.AppendLine("</table><BR>");
                }
            }
            else if (bUseCustEmailTemplate)
                sTemplate = ReplaceSubStringBetween(sTemplate, "<!--{{WarningBlockStart}}-->", "<!--{{WarningBlockEnd}}-->", string.Empty, true);

            if (string.IsNullOrEmpty(sAlertBlock) == false)
            {
                sAlertBlock = ReplaceSubStringBetween(sAlertBlock, "<!--{{AlertSourceStart}}-->", "<!--{{AlertSourceEnd}}-->", sAlertHTML, true);
                sTemplate = ReplaceSubStringBetween(sTemplate, "<!--{{AlertBlockStart}}-->", "<!--{{AlertBlockEnd}}-->", sAlertBlock, true);
            }

            sStatus = GetPkgStatus(bPkgRunning, sStepName, iErrors, iWarnings);

            if (bUseCustEmailTemplate == true)
            {
                string sShortStatus = GetShortStatus(iErrors, iWarnings);

                sTemplate = sTemplate.Replace("{{PackageName}}", sPkgName
                    ).Replace("{{StatusLong}}", sStatus
                    ).Replace("{{StatusShort}}", sShortStatus
                    ).Replace("{{TotalAlertCount}}", (iErrors + iWarnings).ToString()
                    ).Replace("{{ErrorCount}}", iErrors.ToString()
                    ).Replace("{{WarningCount}}", iWarnings.ToString()
                    ).Replace("{{RunTime}}", sRunTime
                    ).Replace("{{MachineName}}", sMachineName
                    ).Replace("{{ExecutionAccount}}", sExecAcctName
                    ).Replace("{{WasInteractive}}", sInteractive
                    ).Replace("{{PackageStartTime}}", dtStartTime.ToString()
                    ).Replace("{{FrameworkVersion}}", "2018.1.29.1"
                    ).Replace("{{PackageEndTime}}", dtEndTime.ToString());
            }
            else
            {
                sbAlerts.AppendLine("<br><br><font face=\"Tahoma\" size=\"1\">This report was generated by <a href=\"http://www.pragmaticworks.com/pages/?src=bixpress&tag=NFEmail&url=/\">BI xPress Notification Framework</a> 2018.1.29.1</font>");

                sColor = ((iErrors > 0 ? "FF0000" : ((iWarnings > 0 | iOtherAlerts > 0 ? "FD6013" : "00FF00"))));
                sb.AppendLine("<table border=\"1\" width=\"100%\" style=\"border-collapse: collapse;font-family: verdana; font-size: 10pt\">");
                sb.AppendLine((("<tr><td><p><b><font size=\"4\">" + sPkgName + " <font color=\"#") + sColor + "\">") + sStatus + "</font></font></b></td></tr>");
                sb.AppendLine("<tr><td width=\"100%\" bgcolor=\"#0B6BE1\"><font color=\"#FFFFFF\"><b>Package Execution Summary</b></font></td></tr>");
                sb.AppendLine("<tr><td width=\"100%\">");
                sb.AppendLine("<table border=\"1\" width=\"100%\" style=\"border-collapse: collapse;font-family: verdana; font-size: 10pt\">");
                sb.AppendLine(("<tr><td width=\"189\" bgcolor=\"#F2F2F2\"><b>Execution Status</b></td><td> <font color=\"#" + sColor + "\">") + sStatus + "</font></td></tr>");
                sb.AppendLine("<tr><td width=\"189\" bgcolor=\"#F2F2F2\"><b>Start Time</b></td><td>" + dtStartTime + "</td></tr>");
                sb.AppendLine("<tr><td width=\"189\" bgcolor=\"#F2F2F2\"><b>End Time</b></td><td>" + dtEndTime + "</td></tr>");
                sb.AppendLine("<tr><td width=\"189\" bgcolor=\"#F2F2F2\"><b>Run Time</b></td><td>" + sRunTime + "</td></tr>");
                sb.AppendLine("<tr><td width=\"189\" bgcolor=\"#F2F2F2\"><b>Total Errors</b></td><td>" + iErrors + "</td></tr>");
                sb.AppendLine("<tr><td width=\"189\" bgcolor=\"#F2F2F2\"><b>Total Warnings</b></td><td>" + iWarnings + "</td></tr>");
                sb.AppendLine("<tr><td width=\"189\" bgcolor=\"#F2F2F2\"><b>Machine Name</b></td><td>" + sMachineName + "</td></tr>");
                sb.AppendLine("<tr><td width=\"189\" bgcolor=\"#F2F2F2\"><b>Execution Account</b></td><td>" + sExecAcctName + "</td></tr>");
                sb.AppendLine("<tr><td width=\"189\" bgcolor=\"#F2F2F2\"><b>Was Interactive?</b></td><td>" + sInteractive + "</td></tr>");
                sb.AppendLine("</table>");
                sb.AppendLine("</td></tr></table><BR>");
                sb.AppendLine();
            }

            if (bUseCustEmailTemplate == true)
                return sTemplate;
            else
                return sb.ToString() + sbAlerts.ToString();
        }

        private string GetShortStatus(int iErrors, int iWarnings)
        {
            if (iErrors > 0)
                return "ERROR";
            else if (iWarnings > 0)
                return "WARNING";
            else
                return "SUCCESS";
        }

        public string FormatTimeDifference(DateTime dStart, DateTime dEnd)
        {
            return FormatTimeSpanFromSec(dEnd.Subtract(dStart));
        }

        public string FormatTimeSpanFromSec(TimeSpan ts)
        {
            try
            {
                string msg = string.Empty;

                if (ts.Days > 0)
                    msg = ts.Days + " day,";

                if (ts.Hours > 0)
                    msg = msg + ts.Hours + " hr,";

                if (ts.Minutes > 0)
                    msg = msg + ts.Minutes + " min,";

                if (ts.Seconds > 0)
                    msg = msg + Math.Round(ts.Seconds + (ts.Milliseconds / 1000.0), 1) + " sec";
                else if (ts.TotalMilliseconds > 0 && string.IsNullOrEmpty(msg))
                    msg = Math.Round(ts.TotalMilliseconds / 1000.0, 2) + " sec";

                return msg.TrimEnd(',');
            }
            catch (Exception)
            {
                return "[0 sec]";
            }
        }

        object GetPropVal(object obj, string propname)
        {
            return System.ComponentModel.TypeDescriptor.GetProperties(obj)[propname].GetValue(obj);
        }

        private string GetLastAlertSource(System.Collections.Generic.List<AlertInfo> alertInfoList)
        {
            string alertSource = string.Empty;

            for (int i = alertInfoList.Count - 1; i > -1; i--)
            {
                if (alertInfoList[i].AlertType == AlertType.ErrorAlert)
                    return alertInfoList[i].SourceName;

                if (alertInfoList[i].AlertType == AlertType.WarningAlert && string.IsNullOrEmpty(alertSource))
                    alertSource = alertInfoList[i].SourceName;
            }

            return alertSource;
        }

        private string GetFilteredEmailList(string sOriginalList, string sSeperator, string sFilterPrefix)
        {
            string[] sArr = null;

            if (string.IsNullOrEmpty(sOriginalList))
                return string.Empty;

            string sReturn = string.Empty;

            sArr = sOriginalList.Split(sSeperator.ToCharArray(), 10000, StringSplitOptions.RemoveEmptyEntries);

            foreach (string sItm in sArr)
            {
                if (sItm.StartsWith(sFilterPrefix) == false)
                    sReturn += sItm + sSeperator;
            }

            return sReturn.Trim(sSeperator.ToCharArray());
        }
        private void SetSetting(string SettingName, object Value, System.Collections.Hashtable runtimeSettings)
        {
            SettingName = SettingName.ToUpper(System.Globalization.CultureInfo.InvariantCulture).Trim();

            if (!runtimeSettings.ContainsKey(SettingName))
                throw new Exception(SettingName + " setting doesn't exist in runtime setting list.");

            runtimeSettings[SettingName] = Value;
        }

        private object GetSetting(string settingName, System.Collections.Hashtable runtimeSettings)
        {
            settingName = settingName.ToUpper(System.Globalization.CultureInfo.InvariantCulture).Trim();

            if (runtimeSettings.ContainsKey(settingName))
                return runtimeSettings[settingName];

            // If key not found then set default 
            switch (settingName)
            {
                case "MAX_NOTIFICATIONS":
                    return 1;
                case "ENABLE_ROWCOUNT_THRESHOLD":
                    return false;
                case "ENABLE_TIME_THRESHOLD":
                    return false;
                case "PRIORITY_MODE":
                    //// DELAYED (After Package) or URGENT (After Task) 
                    return "URGENT";
                case "EMAIL_FORMAT":
                    //// TEXT or HTML 
                    return "TEXT";
                case "SMTP_PORT":
                    //// Default 25 
                    return 25;
                case "SMTP_USESSL":
                    //// Default False
                    return false;
                case "SMTP_UID":
                    return "";
                case "SMTP_PWD":
                    return "";
                case "SMS_EMAILLIST":
                    ////Must be pipe seperated e.g. 66633422@tmobile.net|11223445@tmobile.net .... 
                    return "";
                case "FILTERED_ALERTS":
                    ////Must be pipe seperated e.g. -2344556|-11223445 .... 
                    return "";
                case "NOTIFY_ONERROR":
                    return true;
                case "NOTIFY_ONWARNING":
                    return false;
                case "NOTIFY_ONSUCCESS":
                    return false;
                case "NOTIFY_ONCOMPLETE":
                    return false;
                case "SMS_MAXLENGTH":
                    return 160;
                case "NF_CHECK":
                    return "";
                case "CC_EMAILLIST":
                    return "";
                case "BCC_EMAILLIST":
                    return "";
                case "NOTIFY_USING_EMAIL":
                    return true;
                case "NOTIFY_USING_SMS":
                    return true;
                case "NOTIFY_USING_EVENTLOG":
                    return false;
                case "NOTIFY_USING_LOGFILE":
                    return false;
                case "LOG_FOLDER_PATH":
                    return "C:\\SSIS\\Log";
                case "DELETE_LOG_OLDER_THAN_DAYS":
                    return 5;
                case "USE_CUSTOM_EMAIL_TEMPLATE":
                    return false;
                case "CUSTOM_EMAIL_TEMPLATE_FILEPATH":
                    return "C:\\SSIS\\Config\\NF_EmailTemplate.htm";
                default:
                    return null;
            }
        }

        [Serializable]
        public enum AlertType
        {
            ErrorAlert = 1,
            WarningAlert = 2,
            TimeThresholdAlert = 3,
            RowCountThresholdAlert = 4
        }

        // NOTE : Do not use double quotes {"} and semicolon {;} in the value field. E.g. MAX_NOTIFICATIONS=3;PRIORITY_MODE=URGENT;SMTP_UID=emailuser;SMTP_PWD=xx;@@4e; 
        // In above example SMTP_PWD=xx;@@4e this will cause problem in parsing because password is using {;}. System will consider password xx instead of xx;@@4e. 
        public System.Collections.Hashtable GetRuntimeSettings()
        {
            object otherConfigSettingsVariableValue = ReadVariable("User::varSSISOpsNF_OtherConfigSettings");
            string otherConfigSettings = otherConfigSettingsVariableValue != null ? otherConfigSettingsVariableValue.ToString() : null;

            System.Collections.Hashtable runtimeSettings = new System.Collections.Hashtable();

            // Set Default values
            runtimeSettings.Add("MAX_NOTIFICATIONS", 1);
            runtimeSettings.Add("ENABLE_ROWCOUNT_THRESHOLD", false);
            runtimeSettings.Add("ENABLE_TIME_THRESHOLD", false);
            runtimeSettings.Add("PRIORITY_MODE", "DELAYED");
            runtimeSettings.Add("EMAIL_FORMAT", "HTML");
            runtimeSettings.Add("SMTP_PORT", 25);
            runtimeSettings.Add("SMTP_USESSL", false);
            runtimeSettings.Add("SMTP_UID", string.Empty);
            runtimeSettings.Add("SMTP_PWD", string.Empty);
            runtimeSettings.Add("SMS_EMAILLIST", string.Empty);
            runtimeSettings.Add("FILTERED_ALERTS", string.Empty);
            runtimeSettings.Add("NOTIFY_ONERROR", true);
            runtimeSettings.Add("NOTIFY_ONWARNING", false);
            runtimeSettings.Add("NOTIFY_ONSUCCESS", false);
            runtimeSettings.Add("NOTIFY_ONCOMPLETE", false);
            runtimeSettings.Add("SMS_MAXLENGTH", 160);
            runtimeSettings.Add("CC_EMAILLIST", string.Empty);
            runtimeSettings.Add("BCC_EMAILLIST", string.Empty);
            runtimeSettings.Add("NOTIFY_USING_EMAIL", true);
            runtimeSettings.Add("NOTIFY_USING_SMS", true);
            runtimeSettings.Add("NOTIFY_USING_EVENTLOG", false);
            runtimeSettings.Add("NOTIFY_USING_LOGFILE", false);
            runtimeSettings.Add("LOG_FOLDER_PATH", "C:\\SSIS\\Log");
            runtimeSettings.Add("DELETE_LOG_OLDER_THAN_DAYS", 5);
            runtimeSettings.Add("USE_CUSTOM_EMAIL_TEMPLATE", false);
            runtimeSettings.Add("CUSTOM_EMAIL_TEMPLATE_FILEPATH", "C:\\SSIS\\Config\\NF_EmailTemplate.htm");

            if (!string.IsNullOrEmpty(otherConfigSettings))
            {
                // Parse settings (Setting1=value1;Setting2=value2;Setting3=value3 ...... SettingN=valueN;)

                const string PAIR_SEP = ";";
                const string NAMEVAL_SEP = "=";

                string[] arrNameValue = otherConfigSettings.Split(PAIR_SEP.ToCharArray());

                foreach (string sPair in arrNameValue)
                {
                    string[] arrTemp = sPair.Split(NAMEVAL_SEP.ToCharArray(), 2, StringSplitOptions.RemoveEmptyEntries);

                    try
                    {
                        if (arrTemp.Length >= 2)
                        {
                            string settingName = arrTemp[0];
                            string settingValue = arrTemp[1];

                            switch (settingName.ToUpper().Trim())
                            {
                                case "MAX_NOTIFICATIONS":
                                    runtimeSettings["MAX_NOTIFICATIONS"] = Convert.ToInt32(settingValue);
                                    break;
                                case "ENABLE_ROWCOUNT_THRESHOLD":
                                    runtimeSettings["ENABLE_ROWCOUNT_THRESHOLD"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "ENABLE_TIME_THRESHOLD":
                                    runtimeSettings["ENABLE_TIME_THRESHOLD"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "PRIORITY_MODE":
                                    // DELAYED (After Package) or URGENT (After Task) 
                                    runtimeSettings["PRIORITY_MODE"] = (string)settingValue;
                                    break;
                                case "EMAIL_FORMAT":
                                    // TEXT or HTML 
                                    runtimeSettings["EMAIL_FORMAT"] = (string)settingValue;
                                    break;
                                case "SMTP_PORT":
                                    // Default 25 
                                    runtimeSettings["SMTP_PORT"] = Convert.ToInt32(settingValue);
                                    break;
                                case "SMTP_USESSL":
                                    // Default false
                                    runtimeSettings["SMTP_USESSL"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "SMTP_UID":
                                    runtimeSettings["SMTP_UID"] = (string)settingValue;
                                    break;
                                case "SMTP_PWD":
                                    runtimeSettings["SMTP_PWD"] = (string)settingValue;
                                    break;
                                case "SMS_EMAILLIST":
                                    // Must be pipe seperated e.g. 66633422@tmobile.net|11223445@tmobile.net .... 
                                    runtimeSettings["SMS_EMAILLIST"] = (string)settingValue;
                                    break;
                                case "FILTERED_ALERTS":
                                    ////Must be pipe seperated e.g. -111|-222 .... 
                                    runtimeSettings["FILTERED_ALERTS"] = (string)settingValue;
                                    break;
                                case "NOTIFY_ONERROR":
                                    runtimeSettings["NOTIFY_ONERROR"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_ONWARNING":
                                    runtimeSettings["NOTIFY_ONWARNING"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_ONSUCCESS":
                                    runtimeSettings["NOTIFY_ONSUCCESS"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_ONCOMPLETE":
                                    runtimeSettings["NOTIFY_ONCOMPLETE"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "SMS_MAXLENGTH":
                                    runtimeSettings["SMS_MAXLENGTH"] = Convert.ToInt32(settingValue);
                                    break;
                                case "CC_EMAILLIST":
                                    runtimeSettings["CC_EMAILLIST"] = (string)settingValue;
                                    break;
                                case "BCC_EMAILLIST":
                                    runtimeSettings["BCC_EMAILLIST"] = (string)settingValue;
                                    break;
                                case "NOTIFY_USING_EMAIL":
                                    runtimeSettings["NOTIFY_USING_EMAIL"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_USING_SMS":
                                    runtimeSettings["NOTIFY_USING_SMS"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_USING_EVENTLOG":
                                    runtimeSettings["NOTIFY_USING_EVENTLOG"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_USING_LOGFILE":
                                    runtimeSettings["NOTIFY_USING_LOGFILE"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "LOG_FOLDER_PATH":
                                    runtimeSettings["LOG_FOLDER_PATH"] = (string)settingValue;
                                    break;
                                case "DELETE_LOG_OLDER_THAN_DAYS":
                                    runtimeSettings["DELETE_LOG_OLDER_THAN_DAYS"] = Convert.ToInt32(settingValue);
                                    break;
                                case "USE_CUSTOM_EMAIL_TEMPLATE":
                                    runtimeSettings["USE_CUSTOM_EMAIL_TEMPLATE"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "CUSTOM_EMAIL_TEMPLATE_FILEPATH":
                                    runtimeSettings["CUSTOM_EMAIL_TEMPLATE_FILEPATH"] = (string)settingValue;
                                    break;
                            }
                        }
                    }
                    catch (Exception ex)
                    {
                        Dts.Events.FireError(0, "BI xPress Notification Framework Event Handler", ex.Message, string.Empty, 0);
                    }
                }
            }

            SetNF(runtimeSettings);

            WriteVariable(NotificationFrameworkCounter, 0);

            return runtimeSettings;
        }

        public void SetNF(Hashtable runtimeSettings)
        {
            runtimeSettings.Add(((Char)78).ToString() + ((Char)70).ToString() + ((Char)95).ToString() + ((Char)67).ToString() + ((Char)72).ToString() + ((Char)69).ToString() + ((Char)67).ToString() + ((Char)75).ToString(), ReadVariable("User::varSSISOpsNF_" + ((Char)67).ToString() + ((Char)72).ToString() + ((Char)69).ToString() + ((Char)67).ToString() + ((Char)75).ToString()));
        }

        [Serializable]
        public class AlertInfo
        {
            /// <summary>
            /// Retained for serialization purposes.
            /// </summary>
            public AlertInfo()
            {
            }

            public AlertInfo(string alertDescription, int alertCode, string sourceName, string sourceId, AlertType alertType)
                : this(alertDescription, alertCode, sourceName, sourceId, alertType, DateTime.Now)
            {
            }

            public AlertInfo(string alertDescription, int alertCode, string sourceName, string sourceId, AlertType alertType, DateTime timeStamp)
            {
                AlertCode = alertCode;
                AlertDescription = alertDescription;
                AlertType = alertType;
                SourceName = sourceName;
                SourceId = sourceId;
                AlertTimeStamp = timeStamp;
            }

            public int AlertCode { get; set; }
            public string AlertDescription { get; set; }
            public DateTime AlertTimeStamp { get; set; }
            public AlertType AlertType { get; set; }
            public string SourceId { get; set; }
            public string SourceName { get; set; }
        }

        private void WriteVariable(string variableName, object variableValue)
        {
            Variables vars = null;
            bool isUnlocked = false;

            try
            {
                Dts.VariableDispenser.LockForWrite(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    vars[variableName].Value = variableValue;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }
        }
        private object ReadVariable(string variableName)
        {
            Variables vars = null;
            bool isUnlocked = false;
            object result;

            try
            {
                Dts.VariableDispenser.LockForRead(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    result = vars[variableName].Value;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }

            return result;
        }

    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>st_c1c093725e6348008983f38dc6bc73f2</msb:CodeName>
		<msb:DisplayName>st_c1c093725e6348008983f38dc6bc73f2</msb:DisplayName>
		<msb:ProjectId>{31A8566E-600A-4FAA-9EF8-9279736DC83B}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_c1c093725e6348008983f38dc6bc73f2.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_c1c093725e6348008983f38dc6bc73f2.Properties.Settings.get_Default():st_c1c093725e6348008983f38dc6bc73f2.Properties.Sett" +
    "ings")]

namespace st_c1c093725e6348008983f38dc6bc73f2.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_c1c093725e6348008983f38dc6bc73f2.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_c1c093725e6348008983f38dc6bc73f2.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_c1c093725e6348008983f38dc6bc73f2.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace st_c1c093725e6348008983f38dc6bc73f2.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("st_c1c093725e6348008983f38dc6bc73f2.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="st_c1c093725e6348008983f38dc6bc73f2.dll">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
AApvmQAACgzeDAYsCAZvlgAAChcL3N4gJgIoEAAACm+RAAAKb5cAAAr+GgYsCQctBgZvlgAACtwI
KgAAASgAAAIAJwAPNgAMAAAAAAAABABARAATHAAAAQIABABTVwANAAAAAB4CKJoAAAoqHgIomwAA
CiqufgYAAAQtHnJ3JgBw0AMAAAIoPgAACm+cAAAKc50AAAqABgAABH4GAAAEKhp+BwAABCoeAoAH
AAAEKhp+CAAABCoeAiieAAAKKi5zHwAABoAIAAAEKgAAEzACACwAAAASAAARAiwnIMWdHIEKFgsr
FAIHb58AAAoGYSCTAQABWgoHF1gLBwJvJQAACjLjBipOAgMEBQ4EDgUoEwAACigkAAAGKtICKJsA
AAoCBCgmAAAGAgMoKAAABgIOBSgsAAAGAgUoMAAABgIOBCguAAAGAg4GKCoAAAYqHgJ7EQAABCoi
AgN9EQAABCoeAnsSAAAEKiICA30SAAAEKh4CexMAAAQqIgIDfRMAAAQqHgJ7FAAABCoiAgN9FAAA
BCoeAnsVAAAEKiICA30VAAAEKh4CexYAAAQqIgIDfRYAAAQqAEJTSkIBAAEAAAAAAAwAAAB2NC4w
LjMwMzE5AAAAAAUAbAAAAFgOAAAjfgAAxA4AAJQSAAAjU3RyaW5ncwAAAABYIQAA7CYAACNVUwBE
SAAAEAAAACNHVUlEAAAAVEgAAIAGAAAjQmxvYgAAAAAAAAACAAABVx2iCQkDAAAA+gEzABYAAAEA
AABQAAAACAAAABYAAAAwAAAAYwAAAJ8AAAAKAAAAIwAAABIAAAADAAAACQAAABAAAAACAAAAAQAA
AAUAAAABAAAAAwAAAAAAyQkBAAAAAAAGACIHtQ0GALEHtQ0GAG4Gbw0PACkOAAAGAJsGJgsGAAUH
JgsGAOYGJgsGAJgHJgsGAEIHJgsGAFsHJgsGALIGJgsGAM0GRggKAHYHSwkKAKcFSwkGAJ8ETQoG
ACwDJA8GAAEAyQAGAEYQTQoOAMMCuQkOAIsQuQkOAGsLuQkSAOwQ8QkSAMwQ8QkSAAMN8woGABsN
JA8GAFIMaQAGACADTQoGAIILTQoOAD0Fbw0GACgIyREGAM4MaQAGAOkLaQAGAHoMyRFHACoNAAAG
AIkKTQoWAJ8OzgQGAGIKTQoGADYGtQ0GAFEGbw0GAIwM1Q0GAPIL3goOAA0GowkOAIIGowkOAMMF
yQoKAJEJSwkGAHgITQoGAAoATQoGAHUKTQoOAI0PuQkOAFULuQkOAHcSuQkGAOAQTQoOAH8JWRAO
AK0RWRAKAKQMSwkOAHoCuQkGAO8IaQASAK8C8QkSAJYQ8QkGAEoFTQoGAD0DTQoSAGYR8QkGAF8M
aQAOAKYIbw0GADISaQAGANsMaQAGAP4LaQAGAGsDaQAGAGoMTQoGAMEITQoGADYDTQoGAE0MTQoO
AE0NowkOADgLowkOAFwNowkGADcPTQoGAF4RTQoWALwMzgQWABcDzgQGACkSJgsAAAAANAAAAAAA
AQABAAEAEAC+ChAAOQABAAEAAAAQANwNXw5JAAYAGgAAARAA8Q5fDrEACAAeAAABAAA9AAAASQAJ
ACEAAwEAAKEPAACVAAkAIgACIQAAKQUAAJUADAAiAAIgEAANDAAASQARACIAUYDHA2wAUYCZA2wA
UYDmDGwAUYBVBGwAAQAfAXwEEQBnCn8EEQBvBYQEEQAWAokEBgaaAI0EVoCFD5AEVoBPBZAEBgaa
AI0EVoBMEZQEVoA/EZQEVoAVEZQEVoAoEZQEAQBNAY0EAQCfAWwAAQDBAZgEAQCEAZQEAQAzAWwA
AQBoAWwAUCAAAAAAhgDECgYAAQB8IAAAAACBAAwLBgABAGQsAAAAAIEASg+cBAEArC0AAAAAgQBH
DqYEAgAALgAAAACGAJ8IrAQDAIQuAAAAAIYAYQO2BAgA1C8AAAAAhgCpDr8EDAC0MAAAAACGAKoK
xgQPAAAxAAAAAIYAkgrNBBIAgDEAAAAAgQD0D9YEFwAcMgAAAACBAOoC3gQbACg3AAAAAIEAzwLe
BCwAdEEAAAAAgQABENQBPQCPQQAAAACGACYC/QQ/AKBBAAAAAIYAswAFBUEAyEIAAAAAgQB0CQwF
QgDcQgAAAACBAFgCEgVEAERDAAAAAIEAgBHGBEUAqEMAAAAAgQCUCBwFSADgQwAAAACBAIkIJAVL
ALRIAAAAAIYA1w4rBU0AvFEAAAAAhgBjADAFTQCcUgAAAACBABIDNgVOADhTAAAAAIEABQM8BVAA
1FMAAAAAhhhADQYAUQDcUwAAAACDGEANBgBRAORTAAAAAJMIiAxBBVEAEFQAAAAAkwhXBSwCUQAX
VAAAAACTCGMFRwVRAB9UAAAAAJYIcBBOBVIAJlQAAAAAhhhADQYAUgAuVAAAAACRGEYNUwVSADxU
AAAAAJMArwhXBVIA3FMAAAAAhhhADQYAUwB0VAAAAACGGEANXAVTAIhUAAAAAIYYQA1mBVgAvVQA
AAAAhgiJAnwAXgDFVAAAAACGCJcCAQBeAM5UAAAAAIYIjAtjAF8A1lQAAAAAhgihCxAAXwDfVAAA
AACGCBcMtwFgAOdUAAAAAIYIKgxyBWAA8FQAAAAAhggXBXgFYQD4VAAAAACGCCUFfQVhAAFVAAAA
AIYI5ABjAGIACVUAAAAAhgjxABAAYgASVQAAAACGCHADYwBjABpVAAAAAIYIfwMQAGMAAAABALwP
AAABAOkRAAABAEcSAAACAD8EAAADAA0FAAAEAC0EAAAFAAcBAAABAK8PAAACAMYIAAADAP8BAAAE
ADEIAAABAOYIAAACAMcLAAADACEQAAABAOkFAAACAHMIAAADAGAIAAABAOkFAAACAHMIAAADAGAI
AAAEABUJAAAFAGQPAAABADoIAAACADUEAAADAHMPAAAEAM0OAAABAAwEAAACAMIEAAADAJUEAAAE
ALkEAAAFAP8DAAAGAEcEAAAHAAAIAAAIADoIAAAJADUEAAAKAHMPAAALAM0OAAAMANoPAAANAKMR
AAAOAHMAAAAPAPQIAAAQAPcFAAARAM8IAAABAAwEAAACAMIEAAADAJUEAAAEALkEAAAFAP8DAAAG
AEcEAAAHAAAIAAAIADoIAAAJADUEAAAKAHMPAAALAM0OAAAMANoPAAANAKMRAAAOAHMAAAAPAPQI
AAAQAPcFAAARAM8IAAABAHMPAAACAM0OAAABAA4RAAACAO0BAAABAPEPAAABACEJAAACAIwEAAAB
AJURAAABAHIRAAACADUNAAADAOwRAAABABUEAAACAPQHAAADAOoOAAABACEEAAACAOoOAAABAOoO
AAABAPIDAAACAOMHAAABAPIDAAABAPoHAAABAC0QAAABALYLAAACAKUCAAADAI4DAAAEAP4AAAAF
ADMFAAABALYLAAACAKUCAAADAI4DAAAEAP4AAAAFADMFAAAGAD0MAAABAPoHAAABAPoHAAABAPoH
AAABAPoHAAABAPoHAAABAPoHCQBADQEAEQBADQYAGQBADQoAKQBADRAAMQBADRAAOQBADRAAQQBA
DRAASQBADRAAUQBADRAAWQBADRAAYQBADRAAaQBADQYAMQFADQYAOQFADQYAWQFADRUAcQCZDxwA
aQF8EAEAkQBqCGMAeQDhEWcAcQGMEmwAcQFQEm8ADAAEEXwAcQGEEoAAmQBADQYAiQFADRAAmQBZ
CoUAmQDiC4wAcQEOApIAkQEbARAAmQBqEpgAmQBcAIwAmQCrAIwAmQAeCp8AmQAQEhAAoQH5BKQA
cQEvEKgAcQH/CHwAcQF/CK8AcQEvELQAcQEvELoAeQFqCGMAoQBADcAAqQFADcYAoQD6DswAoQAK
D58AoQAtCp8ADABHDAYAmQBNEBAAoQD6AdMAaQHPD9kAqQBrAt8AuQERDeUAeQBqCO4AyQEFBfMA
DABADQYAsQBADQYAsQD8CRAAsQC1EBIB0QEEChAAsQChEBcB0QHhAR0B4QFPAyYBwQBADS8B0QE4
DjoB8QEnDUAByQD4EEUB0QERCmMA0QBADRAAwQAUCEkBDAAbAVAB2QDhBQYAyQDAEVYB4QC3AmMA
cQEvEPMA4QB5C18BAQJADQYAAQLnD4AAAQJGAmoBAQI7AhAAAQI8EnABcQE2EHgByQF7BIgBCQLt
D4AAcQE2EI0B+QBADZMB+QBADZsBEQIwBhAAEQLbBQYACQK4DrABAQFADRAAGQKoBLcBeQD6EWcA
eQAZELwBeQB9CsIBGQIiBgYAcQEgCM8BcQF/CNQBcQENCNQBcQFXEeABCQFADQYAIQLVEYgBcQEv
EAECCQHuBAgCCQHuBA8CDAAnDRUCFAD4ECcCSQGUBSwCeQBqCDICSQF/BSwCeQFqCDICFADAEVYB
eQBqCGMAcQEvEDkCcQFcEm8AeQA9EGYCGQEQEHwAGQF7D3wAGQHBDnwAGQGCDXwAGQGODXwAMQII
Am4CGQGfDXQCcQHyAXgCSQKODn4CUQI7CoUCWQLxB4wCDAA7CpYCcQEEEqQCcQFqEKkCcQEKCbQC
cQFUCngCcQGcDLkCcQFUCmMAgQAZEsAC4QBADRAAgQBECsUCgQA7CowCgQBADQYAgQAbAcUCcQFq
EOACcQGcDGMAaQIIAOcCaQJzCoAAQQJqCGMAaQG4DPcCcQIpBhAAcQKcDv0CIQE7CgUDeQLZBwwD
IQElCQYAcQJkEAYAcQIPARAAeQLPB0UBcQBADQYAkQBADQYA4QElEhkDQQFADR8DYQFADQYAcQFa
DywDDgAEAEMDDgAIAHwDDgAMAL0DDgAQAAwECAAoAGMECAAsAGgECAA0AGgECAA4AG0ECAA8AHIE
CABAAHcEKQB7AM4FLgALAKYFLgATAK8FLgAbAM4FLgAjANcFLgArAAAGLgAzAAAGLgA7AAYGLgBD
ANcFLgBLABUGLgBTAAAGLgBbADUGQwBjAGgESQB7AM4FYwBzAGgEowBrAGgEAQFrAGgEIQJrAGgE
QQJrAGgEYQJrAGgEgQJrAGgEoQJrAGgEwQJrAGgEoARrAGgEwARrAGgE4ARrAGgEAAVrAGgEIAVr
AGgEQAVrAGgEYAVrAGgEgAVrAGgEoAVrAGgEwAVrAGgE4AVrAGgEAAZrAGgEIgD5AFoBZAF/AaEB
ygHaAeYBPwKRApwCywLPAuwC8AIRAycDAwABAAQAAwAIAAQAAACMDIMFAACfBYkFAAB0EI8FAACb
ApQFAAClC5gFAAAuDJwFAAApBaEFAAD1AJgFAACDA5gFAgAbAAMAAgAcAAUAAQAdAAUAAgAeAAcA
AgAlAAkAAQAmAAkAAgAnAAsAAQAoAAsAAgApAA0AAQAqAA0AAgArAA8AAQAsAA8AAgAtABEAAQAu
ABEAAgAvABMAAQAwABMAdQAfAgSAAAABAAAAOxqHWwAAAAAAABAAAAAEAAAAAAAAAAAAAAAxA6IA
AAAAAA0AAAAAAAAAAAAAADoDLAkAAAAABAAAAAAAAAAAAAAAMQNNCgAAAAAEAAAAAAAAAAAAAAAx
A/EJAAAAAA0AAAAAAAAAAAAAADoDewAAAAAAAAAAAAEAAADmDQAABgACAAcAAgAIAAIAAAAAAABM
aXN0YDEAVG9JbnQzMgBzdF9jMWMwOTM3MjVlNjM0ODAwODk4M2YzOGRjNmJjNzNmMgA8TW9kdWxl
PgA8UHJpdmF0ZUltcGxlbWVudGF0aW9uRGV0YWlscz4AZ2V0X0NDAFNldE5GAFN5c3RlbS5JTwBi
Rm9yU01TAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAG1zY29ybGliAGdl
dF9CY2MARm9ybWF0VGltZVNwYW5Gcm9tU2VjAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAGdl
dF9Tb3VyY2VJZABzZXRfU291cmNlSWQAc291cmNlSWQAZXZlbnRJZABMb2NrRm9yUmVhZABBZGQA
X2lzRXJyb3JFbmNvdW50ZXJlZAA8U291cmNlSWQ+a19fQmFja2luZ0ZpZWxkADxBbGVydENvZGU+
a19fQmFja2luZ0ZpZWxkADxTb3VyY2VOYW1lPmtfX0JhY2tpbmdGaWVsZAA8QWxlcnRUeXBlPmtf
X0JhY2tpbmdGaWVsZAA8QWxlcnREZXNjcmlwdGlvbj5rX19CYWNraW5nRmllbGQAPEFsZXJ0VGlt
ZVN0YW1wPmtfX0JhY2tpbmdGaWVsZABBcHBlbmRDaGlsZABkRW5kAFRyaW1FbmQAU2VuZABpc0Fw
cGVuZABSb3VuZABSZXBsYWNlAGRlZmF1bHRJbnN0YW5jZQBGb3JtYXRUaW1lRGlmZmVyZW5jZQBz
ZXRfU291cmNlAENyZWF0ZUV2ZW50U291cmNlAEdldExhc3RBbGVydFNvdXJjZQBnZXRfU3RhdHVz
Q29kZQBTbXRwU3RhdHVzQ29kZQBnZXRfQWxlcnRDb2RlAHNldF9BbGVydENvZGUAYWxlcnRDb2Rl
AFhtbE5vZGUAZ2V0X01lc3NhZ2UATWFpbE1lc3NhZ2UAR2V0SFRNTE5vdGlmaWNhdGlvbk1lc3Nh
Z2UAR2V0VGV4dE5vdGlmaWNhdGlvbk1lc3NhZ2UAUmVhZFZhcmlhYmxlAFdyaXRlVmFyaWFibGUA
SURpc3Bvc2FibGUASGFzaHRhYmxlAERvdWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJv
bUhhbmRsZQBTYXZlVGV4dFRvRmlsZQBnZXRfU291cmNlTmFtZQBzZXRfU291cmNlTmFtZQBzb3Vy
Y2VOYW1lAE5vdGlmaWNhdGlvbkZyYW1ld29ya0FsZXJ0TGlzdEFsbFZhcmlhYmxlTmFtZQBOb3Rp
ZmljYXRpb25GcmFtZXdvcmtBbGVydExpc3RWYXJpYWJsZU5hbWUAdmFyaWFibGVOYW1lAHNNYWNo
aW5lTmFtZQBzUGtnTmFtZQBTZXR0aW5nTmFtZQBzZXR0aW5nTmFtZQBsb2dOYW1lAHNTdGVwTmFt
ZQBhcHBOYW1lAHNFeGVjQWNjdE5hbWUATm90aWZpY2F0aW9uRnJhbWV3b3JrU3ViQ29tcG9uZW50
TmFtZQBHZXREaXJlY3RvcnlOYW1lAHByb3BuYW1lAGR0RW5kVGltZQBEYXRlVGltZQBnZXRfQ3Jl
YXRpb25UaW1lAHNSdW5UaW1lAGR0U3RhcnRUaW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1
bnRpbWUAQXBwZW5kTGluZQBnZXRfTmV3TGluZQBDb21iaW5lAGV2ZW50VHlwZQBnZXRfQWxlcnRU
eXBlAHNldF9BbGVydFR5cGUAYWxlcnRUeXBlAEV2ZW50TG9nRW50cnlUeXBlAEZhaWx1cmUAZ2V0
X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAGdldF9JbnZhcmlhbnRDdWx0dXJl
AGdldF9DdXJyZW50Q3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRp
b25TZXR0aW5nc0Jhc2UAQ2xvc2UARGlzcG9zZQBzdHJpbmdUb1BhcnNlAGJVc2VDdXN0RW1haWxU
ZW1wbGF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBEZWxldGUATG9ja0ZvcldyaXRlAENvbXBpbGVy
R2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJs
ZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0
ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNz
ZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUA
Q29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUA
QXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmli
dXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0
ZQBnZXRfVmFsdWUAc2V0X1ZhbHVlAHZhcmlhYmxlVmFsdWUAR2V0VmFsdWUAdmFsdWUAc0ludGVy
YWN0aXZlAFJlbW92ZQBEZXNlcmlhbGl6ZQBJbmRleE9mAEVuY29kaW5nAGVuY29kaW5nAGJQa2dS
dW5uaW5nAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAZW5kU3RyaW5nAFRvU3RyaW5nAHN0YXJ0
U3RyaW5nAFN1YnN0cmluZwBHZXRTZXR0aW5nAFNldFNldHRpbmcAV3JpdGVUb0V2ZW50TG9nAENv
bXB1dGVTdHJpbmdIYXNoAE1hdGgAZmlsZVBhdGgAc0N1c3RFbWFpbFRlbXBsYXRlUGF0aABkaXJl
Y3RvcnlQYXRoAGlTTVNMZW5ndGgAZ2V0X0xlbmd0aABTdGFydHNXaXRoAHJlcGxhY2V3aXRoAG9i
agBVbmxvY2sATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAR2V0UHJvcFZhbABOZXR3b3JrQ3JlZGVudGlhbABTY3Jp
cHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU3lzdGVtLk5ldC5NYWlsAHN0X2Mx
YzA5MzcyNWU2MzQ4MDA4OTgzZjM4ZGM2YmM3M2YyLmRsbABTeXN0ZW0uWG1sAExvYWRYbWwAc2V0
X0lubmVyWG1sAGdldF9PdXRlclhtbABzZXRfSXNCb2R5SHRtbABzZXRfRW5hYmxlU3NsAGdldF9J
dGVtAHNldF9JdGVtAFN5c3RlbQBUcmltAHNldF9Gcm9tAEVudW0AcmVzb3VyY2VNYW4AVG9Cb29s
ZWFuAG9wX0xlc3NUaGFuAFRpbWVTcGFuAFJlcGxhY2VTdWJTdHJpbmdCZXR3ZWVuAEdldFN1YlN0
cmluZ0JldHdlZW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFs
aXphdGlvbgBTeXN0ZW0uWG1sLlNlcmlhbGl6YXRpb24AUGVyZm9ybU5vdGlmaWNhdGlvbkFjdGlv
bgBTeXN0ZW0uUmVmbGVjdGlvbgBQcm9wZXJ0eURlc2NyaXB0b3JDb2xsZWN0aW9uAE1haWxBZGRy
ZXNzQ29sbGVjdGlvbgBTbXRwRXhjZXB0aW9uAGdldF9Jbm5lckV4Y2VwdGlvbgBnZXRfQWxlcnRE
ZXNjcmlwdGlvbgBzZXRfQWxlcnREZXNjcmlwdGlvbgBhbGVydERlc2NyaXB0aW9uAGZpbGVFeHRl
bnNpb25TZWFyY2hQYXR0ZXJuAGdldF9UbwBGaWxlSW5mbwBDdWx0dXJlSW5mbwBGaWxlU3lzdGVt
SW5mbwBBbGVydEluZm8AZ2V0X0FsZXJ0VGltZVN0YW1wAHNldF9BbGVydFRpbWVTdGFtcAB0aW1l
U3RhbXAAQ2xlYXIAQ2hhcgBTdHJpbmdSZWFkZXIAVGV4dFJlYWRlcgBJRm9ybWF0UHJvdmlkZXIA
U3RyaW5nQnVpbGRlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAFRvVXBwZXIARXZlbnRzT2JqZWN0V3Jh
cHBlcgBnZXRfVmFyaWFibGVEaXNwZW5zZXIAU3RyZWFtV3JpdGVyAFRleHRXcml0ZXIATm90aWZp
Y2F0aW9uRnJhbWV3b3JrQ291bnRlcgBYbWxTZXJpYWxpemVyAEZpcmVFcnJvcgBJRW51bWVyYXRv
cgBHZXRFbnVtZXJhdG9yAHNTZXBlcmF0b3IALmN0b3IALmNjdG9yAFR5cGVEZXNjcmlwdG9yAFBy
b3BlcnR5RGVzY3JpcHRvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAZ2V0X1NlY29uZHMAZ2V0X01pbGxp
c2Vjb25kcwBnZXRfVG90YWxNaWxsaXNlY29uZHMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2
aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAHN0X2MxYzA5MzcyNWU2MzQ4MDA4OTgzZjM4ZGM2YmM3M2Yy
LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBnZXRfQ2hpbGRO
b2RlcwBVbndpbmRFeGNlcHRpb25NZXNzYWdlcwBzdF9jMWMwOTM3MjVlNjM0ODAwODk4M2YzOGRj
NmJjNzNmMi5Qcm9wZXJ0aWVzAEdldFByb3BlcnRpZXMAR2V0VmFyaWFibGVzAERlbGV0ZU9sZEZp
bGVzAEdldEZpbGVzAGdldF9NaW51dGVzAGlXYXJuaW5ncwBHZXRSdW50aW1lU2V0dGluZ3MAcnVu
dGltZVNldHRpbmdzAHNldF9DcmVkZW50aWFscwBzZXRfVXNlRGVmYXVsdENyZWRlbnRpYWxzAFN5
c3RlbS5Db2xsZWN0aW9ucwBTdHJpbmdTcGxpdE9wdGlvbnMAUGFyc2VBbGVydEluZm9zAGdldF9D
aGFycwByZXBsYWNlbWFya2VycwBpRXJyb3JzAGdldF9Ib3VycwBTdWNjZXNzAE1haWxBZGRyZXNz
AGdldF9EdHMAU2NyaXB0UmVzdWx0cwBmaWxlQ29udGVudHMAYWxlcnRJbmZvc0NvbnRlbnRzAGdl
dF9FdmVudHMAaU90aGVyQWxlcnRzAFNvdXJjZUV4aXN0cwBHZXRQa2dTdGF0dXMAR2V0U2hvcnRT
dGF0dXMAZ2V0X0RheXMAQWRkRGF5cwBvbGRlclRoYW5EYXlzAENvbmNhdABGb3JtYXQAU3VidHJh
Y3QAT2JqZWN0AHNldF9TdWJqZWN0AFN5c3RlbS5OZXQAUmVzZXQAU3BsaXQAZ2V0X0RlZmF1bHQA
c2V0X1Rhc2tSZXN1bHQAU210cENsaWVudABYbWxFbGVtZW50AGdldF9Eb2N1bWVudEVsZW1lbnQA
Q3JlYXRlRG9jdW1lbnRGcmFnbWVudABYbWxEb2N1bWVudEZyYWdtZW50AEVudmlyb25tZW50AFht
bERvY3VtZW50AGdldF9DdXJyZW50AGdldF9Db3VudABkU3RhcnQAVGltZVRocmVzaG9sZEFsZXJ0
AFJvd0NvdW50VGhyZXNob2xkQWxlcnQAV2FybmluZ0FsZXJ0AEVycm9yQWxlcnQASW5zZXJ0AENv
bnZlcnQAWG1sTm9kZUxpc3QAc09yaWdpbmFsTGlzdABHZXRGaWx0ZXJlZEVtYWlsTGlzdABhbGVy
dEluZm9MaXN0AGFsZXJ0TGlzdABJQ3JlZGVudGlhbHNCeUhvc3QATW92ZU5leHQAU3lzdGVtLlRl
eHQAUmVhZEFsbFRleHQAZ2V0X05vdwBleABzRmlsdGVyUHJlZml4AGdldF9Ub2RheQBUb0NoYXJB
cnJheQBzZXRfQm9keQBDb250YWluc0tleQBnZXRfQXNzZW1ibHkARGlyZWN0b3J5AFdyaXRlRW50
cnkAbG9nRW50cnkAb3BfRXF1YWxpdHkAb3BfSW5lcXVhbGl0eQBzZXRfUHJpb3JpdHkATWFpbFBy
aW9yaXR5AElzTnVsbE9yRW1wdHkAAAAAJ1MAeQBzAHQAZQBtADoAOgBQAGEAYwBrAGEAZwBlAE4A
YQBtAGUAACNTAHkAcwB0AGUAbQA6ADoAUwB0AGEAcgB0AFQAaQBtAGUAACFTAHkAcwB0AGUAbQA6
ADoAVQBzAGUAcgBOAGEAbQBlAAAnUwB5AHMAdABlAG0AOgA6AE0AYQBjAGgAaQBuAGUATgBhAG0A
ZQAAL1MAeQBzAHQAZQBtADoAOgBJAG4AdABlAHIAYQBjAHQAaQB2AGUATQBvAGQAZQAAG1AAUgBJ
AE8AUgBJAFQAWQBfAE0ATwBEAEUAACFTAHkAcwB0AGUAbQA6ADoAUwBvAHUAcgBjAGUASQBEAAAj
UwB5AHMAdABlAG0AOgA6AFAAYQBjAGsAYQBnAGUASQBEAABBVQBzAGUAcgA6ADoAdgBhAHIAUwBT
AEkAUwBPAHAAcwBOAEYAXwBBAGwAZQByAHQATABpAHMAdABfAEEAbABsAAAPRABFAEwAQQBZAEUA
RAAAOVUAcwBlAHIAOgA6AHYAYQByAFMAUwBJAFMATwBwAHMATgBGAF8AQQBsAGUAcgB0AEwAaQBz
AHQAAE9VAHMAZQByADoAOgB2AGEAcgBTAFMASQBTAE8AcABzAE4ARgBfAE4AbwB0AGkAZgBpAGMA
YQB0AGkAbwBuAF8AQwBvAHUAbgB0AGUAcgAAI00AQQBYAF8ATgBPAFQASQBGAEkAQwBBAFQASQBP
AE4AUwAAJU4ATwBUAEkARgBZAF8AVQBTAEkATgBHAF8ARQBNAEEASQBMAAAhTgBPAFQASQBGAFkA
XwBVAFMASQBOAEcAXwBTAE0AUwAAK04ATwBUAEkARgBZAF8AVQBTAEkATgBHAF8ARQBWAEUATgBU
AEwATwBHAAApTgBPAFQASQBGAFkAXwBVAFMASQBOAEcAXwBMAE8ARwBGAEkATABFAAAzVQBTAEUA
XwBDAFUAUwBUAE8ATQBfAEUATQBBAEkATABfAFQARQBNAFAATABBAFQARQAAPUMAVQBTAFQATwBN
AF8ARQBNAEEASQBMAF8AVABFAE0AUABMAEEAVABFAF8ARgBJAEwARQBQAEEAVABIAAAfTABPAEcA
XwBGAE8ATABEAEUAUgBfAFAAQQBUAEgAADVEAEUATABFAFQARQBfAEwATwBHAF8ATwBMAEQARQBS
AF8AVABIAEEATgBfAEQAQQBZAFMAACNOAE8AVABJAEYAWQBfAE8ATgBDAE8ATQBQAEwARQBUAEUA
ACFOAE8AVABJAEYAWQBfAE8ATgBTAFUAQwBDAEUAUwBTAAAvVQBzAGUAcgA6ADoAdgBhAHIAUwBT
AEkAUwBPAHAAcwBOAEYAXwBGAHIAbwBtAABFTgBvAHQAaQBmAGkAYwBhAHQAaQBvAG4ARgByAGEA
bQBlAHcAbwByAGsAQABCAEkAeABQAHIAZQBzAHMALgBjAG8AbQAAK1UAcwBlAHIAOgA6AHYAYQBy
AFMAUwBJAFMATwBwAHMATgBGAF8AVABvAAADOwAAB3sARAB9AAADLAAAGUMAQwBfAEUATQBBAEkA
TABMAEkAUwBUAAAbQgBDAEMAXwBFAE0AQQBJAEwATABJAFMAVAAAA3wAABlFAE0AQQBJAEwAXwBG
AE8AUgBNAEEAVAAACUgAVABNAEwAABlOAEYAXwBMAE8ARwBfACoALgB0AHgAdAAAIU4ATwBUAEkA
RgBZAF8ATwBOAFcAQQBSAE4ASQBOAEcAAB1OAE8AVABJAEYAWQBfAE8ATgBFAFIAUgBPAFIAABtT
AE0AUwBfAE0AQQBYAEwARQBOAEcAVABIAAAbUwBNAFMAXwBFAE0AQQBJAEwATABJAFMAVAAAGzwA
UwBTAEkAUwAgAEUAcgByAG8AcgBzAD4AABk8AFMAUwBJAFMAIABFAHIAcgBvAHIAPgAAHzwAUwBT
AEkAUwAgAFcAYQByAG4AaQBuAGcAcwA+AAAdPABTAFMASQBTACAAVwBhAHIAbgBpAG4AZwA+AAAf
PABTAFMASQBTACAATQBlAHMAcwBhAGcAZQBzAD4AAB08AFMAUwBJAFMAIABNAGUAcwBzAGEAZwBl
AD4AAB08AFMAUwBJAFMAIABTAHUAYwBjAGUAcwBzAD4AACFFAFIAUgBPAFIAIAA6ACAAUABhAGMA
awBhAGcAZQAgAAAvIABoAGEAcwAgAGUAcgByAG8AcgAoAHMAKQAgAGEAdAAgAHQAYQBzAGsAIABb
AAAlUwB5AHMAdABlAG0AOgA6AFMAbwB1AHIAYwBlAE4AYQBtAGUAAANdAAAlVwBBAFIATgBJAE4A
RwAgADoAIABQAGEAYwBrAGEAZwBlACAAADMgAGgAYQBzACAAdwBhAHIAbgBpAG4AZwAoAHMAKQAg
AGEAdAAgAHQAYQBzAGsAIABbAAAhQQBMAEUAUgBUACAAOgAgAFAAYQBjAGsAYQBnAGUAIAAANyAA
ZwBlAG4AZQByAGEAdABlAGQAIAByAHUAbgB0AGkAbQBlACAAYQBsAGUAcgB0ACgAcwApAAAjIABj
AG8AbQBwAGwAZQB0AGUAZAAgAHcAaQB0AGgAIABbAAAVXQAgAGUAcgByAG8AcgAoAHMAKQAAGV0A
IAB3AGEAcgBuAGkAbgBnACgAcwApAAAVXQAgAGEAbABlAHIAdAAoAHMAKQAAJVMAVQBDAEMARQBT
AFMAIAA6ACAAUABhAGMAawBhAGcAZQAgAAAvIABjAG8AbQBwAGwAZQB0AGUAZAAgAHMAdQBjAGMA
ZQBzAHMAZgB1AGwAbAB5AABDVQBzAGUAcgA6ADoAdgBhAHIAUwBTAEkAUwBPAHAAcwBOAEYAXwBT
AE0AVABQAFMAZQByAHYAZQByAE4AYQBtAGUAABNTAE0AVABQAF8AUABPAFIAVAAAEVMATQBUAFAA
XwBVAEkARAAAEVMATQBUAFAAXwBQAFcARAAAF1MATQBUAFAAXwBVAFMARQBTAFMATAAAV0IASQAg
AHgAUAByAGUAcwBzACAATgBvAHQAaQBmAGkAYwBhAHQAaQBvAG4AIABGAHIAYQBtAGUAdwBvAHIA
awAgAFMAZQBuAGQAIABBAGwAZQByAHQAAFFoAHQAdABwADoALwAvAGgAZQBsAHAALgBwAHIAYQBn
AG0AYQB0AGkAYwB3AG8AcgBrAHMALgBjAG8AbQAvAEIASQB4AFAAcgBlAHMAcwAvAAATQgBJACAA
eABQAHIAZQBzAHMAABdBAHAAcABsAGkAYwBhAHQAaQBvAG4AAAM8AAADPgAAAzoAAAMvAAADXAAA
AyoAAAM/AAAPTgBGAF8ATABPAEcAXwAAI3kAeQB5AHkALQBNAE0ALQBkAGQAIABoAGgAbQBtAHMA
cwABD18ARQBSAFIATwBSAF8AAAkuAHQAeAB0AAATXwBXAEEAUgBOAEkATgBHAF8AAA1fAEkATgBG
AE8AXwAAbTwAPwB4AG0AbAAgAHYAZQByAHMAaQBvAG4APQAiADEALgAwACIAIABlAG4AYwBvAGQA
aQBuAGcAPQAiAFUAVABGAC0AMQA2ACIAIAA/AD4APABBAGwAZQByAHQASQBuAGYAbwBzACAALwA+
AAGA9VQAaABlAHIAZQAgAHcAYQBzACAAYQBuACAAZQByAHIAbwByACAAdwBoAGkAbABlACAAYQB0
AHQAZQBtAHAAdABpAG4AZwAgAHQAbwAgAHAAYQByAHMAZQAgAHQAaABlACAAYQBjAGMAdQBtAHUA
bABhAHQAZQBkACAAYQBsAGUAcgB0AHMAIABmAG8AcgAgAEIASQAgAHgAUAByAGUAcwBzACAATgBv
AHQAaQBmAGkAYwBhAHQAaQBvAG4AIABGAHIAYQBtAGUAdwBvAHIAawAuACAAIABFAHIAcgBvAHIA
IABtAGUAcwBzAGEAZwBlADoAIAAAT2gAdAB0AHAAOgAvAC8AaABlAGwAcAAuAHAAcgBhAGcAbQBh
AHQAaQBjAHcAbwByAGsAcwAuAGMAbwBtAC8AQgBJAHgAUAByAGUAcwBzAAAFIAAgAACAhUEAbgAg
AGUAcgByAG8AcgAgAG8AYwBjAHUAcgByAGUAZAAgAHcAaABpAGwAZQAgAGMAcgBlAGEAdABpAG4A
ZwAgAHQAaABlACAAVwBpAG4AZABvAHcAcwAgAEUAdgBlAG4AdAAgAEwAbwBnACAAIgB7ADAAfQAi
ADoAIAB7ADEAfQAuAABvVABoAGUAIABsAG8AZwAgAGYAaQBsAGUAIABwAGEAdABoACAAaQBzACAA
aQBuAHYAYQBsAGkAZAAuACAAIABVAG4AYQBiAGwAZQAgAHQAbwAgAHMAYQB2AGUAIABsAG8AZwAg
AGYAaQBsAGUALgAAgINUAGgAZQAgAGwAbwBnACAAZgBpAGwAZQAgAGQAaQByAGUAYwB0AG8AcgB5
ACAAcABhAHQAaAAgAGkAcwAgAGkAbgB2AGEAbABpAGQALgAgACAAVQBuAGEAYgBsAGUAIAB0AG8A
IABzAGEAdgBlACAAbABvAGcAIABmAGkAbABlAC4AAIDrVABoAGUAIABsAG8AZwAgAGYAaQBsAGUA
IABkAGkAcgBlAGMAdABvAHIAeQAgACIAewAwAH0AIgAgAGQAbwBlAHMAIABuAG8AdAAgAGUAeABp
AHMAdAAuACAAIABVAG4AYQBiAGwAZQAgAHQAbwAgAHMAYQB2AGUAIABsAG8AZwAgAGYAaQBsAGUA
IABiAGUAYwBhAHUAcwBlACAAdABoAGUAIABzAHAAZQBjAGkAZgBpAGUAZAAgAGQAaQByAGUAYwB0
AG8AcgB5ACAAZABvAGUAcwAgAG4AbwB0ACAAZQB4AGkAcwB0AC4AAHFBAG4AIABlAHIAcgBvAHIA
IABvAGMAYwB1AHIAcgBlAGQAIAB3AGgAaQBsAGUAIABjAHIAZQBhAHQAaQBuAGcAIAB0AGgAZQAg
AGwAbwBnACAAZgBpAGwAZQAgACIAewAwAH0AIgA6ACAAewAxAH0AAIDTVABoAGUAIABkAGkAcgBl
AGMAdABvAHIAeQAgACIAewAwAH0AIgAgAGQAbwBlAHMAIABuAG8AdAAgAGUAeABpAHMAdAAuACAA
IABVAG4AYQBiAGwAZQAgAHQAbwAgAGQAZQBsAGUAdABlACAAbwBsAGQAIABsAG8AZwAgAGYAaQBs
AGUAcwAgAGIAZQBjAGEAdQBzAGUAIAB0AGgAZQAgAGQAaQByAGUAYwB0AG8AcgB5ACAAZABvAGUA
cwAgAG4AbwB0ACAAZQB4AGkAcwB0AC4AAICZQQBuACAAZQByAHIAbwByACAAbwBjAGMAdQByAHIA
ZQBkACAAdwBoAGkAbABlACAAZABlAGwAZQB0AGkAbgBnACAAbwBsAGQAIABsAG8AZwAgAGYAaQBs
AGUAcwAgAGYAcgBvAG0AIAB0AGgAZQAgACIAewAwAH0AIgAgAGQAaQByAGUAYwB0AG8AcgB5ADoA
IAB7ADEAfQAAEyAAQAAgAFMAVABFAFAAIABbAAAnQwBPAE0AUABMAEUAVABFAEQAIABXAC8AIABF
AFIAUgBPAFIAUwAACUgAQQBTACAAAA8gAEUAUgBSAE8AUgBTAAATQwBPAE0AUABMAEUAVABFAEQA
ABkgAFcALwAgAFcAQQBSAE4ASQBOAEcAUwAAEyAAVwBBAFIATgBJAE4ARwBTAAA1PAAhAC0ALQB7
AHsAQQBsAGUAcgB0AEIAbABvAGMAawBTAHQAYQByAHQAfQB9AC0ALQA+AAExPAAhAC0ALQB7AHsA
QQBsAGUAcgB0AEIAbABvAGMAawBFAG4AZAB9AH0ALQAtAD4AASkqACoAKgAqACoAKgAqACoAKgAq
ACoAKgAgAFQAbwB0AGEAbAAgAFsAAC1dACAAQQBsAGUAcgB0AHMAIAAqACoAKgAqACoAKgAqACoA
KgAqACoAKgAqAAAJPAA8ACAAWwAAGV0AIABBAGwAZQByAHQAcwAgAD4APgAgAAALRQBSAFIATwBS
AAAPVwBBAFIATgBJAE4ARwAAKVQASQBNAEUAIABUAEgAUgBFAFMASABPAEwARAAgAEEATABFAFIA
VAAAC0EATABFAFIAVAAACSAAPgA+ACAAAAcgADoAIAAAJ3sAewBBAGwAZQByAHQAUwBvAHUAcgBj
AGUATgBhAG0AZQB9AH0AABt7AHsAQQBsAGUAcgB0AFQAaQBtAGUAfQB9AAAbewB7AEEAbABlAHIA
dABUAHkAcABlAH0AfQAAIXsAewBBAGwAZQByAHQATQBlAHMAcwBhAGcAZQB9AH0AABt7AHsAQQBs
AGUAcgB0AEMAbwBkAGUAfQB9AAADWwAAHU0ATQAvAGQAZAAgAEgASAA6AG0AbQA6AHMAcwAABV0A
IAAACyAAPQAgAD4AIAAACV0AIAA6ACAAAB97AHsAUABhAGMAawBhAGcAZQBOAGEAbQBlAH0AfQAA
HXsAewBTAHQAYQB0AHUAcwBMAG8AbgBnAH0AfQAAH3sAewBTAHQAYQB0AHUAcwBTAGgAbwByAHQA
fQB9AAAnewB7AFQAbwB0AGEAbABBAGwAZQByAHQAQwBvAHUAbgB0AH0AfQAAHXsAewBFAHIAcgBv
AHIAQwBvAHUAbgB0AH0AfQAAIXsAewBXAGEAcgBuAGkAbgBnAEMAbwB1AG4AdAB9AH0AABd7AHsA
UgB1AG4AVABpAG0AZQB9AH0AAB97AHsATQBhAGMAaABpAG4AZQBOAGEAbQBlAH0AfQAAKXsAewBF
AHgAZQBjAHUAdABpAG8AbgBBAGMAYwBvAHUAbgB0AH0AfQAAJXsAewBXAGEAcwBJAG4AdABlAHIA
YQBjAHQAaQB2AGUAfQB9AAApewB7AFAAYQBjAGsAYQBnAGUAUwB0AGEAcgB0AFQAaQBtAGUAfQB9
AAApewB7AEYAcgBhAG0AZQB3AG8AcgBrAFYAZQByAHMAaQBvAG4AfQB9AAAXMgAwADEAOAAuADEA
LgAyADkALgAxAAAlewB7AFAAYQBjAGsAYQBnAGUARQBuAGQAVABpAG0AZQB9AH0AABNQAGEAYwBr
AGEAZwBlADoAIAAAEVMAdABhAHQAdQBzADoAIAAAGVMAdABhAHIAdAAgAFQAaQBtAGUAOgAgAAAV
RQBuAGQAIABUAGkAbQBlADoAIAAAFVIAdQBuACAAVABpAG0AZQA6ACAAADNFAG4AZAAgAFQAaQBt
AGUAOgAgADwAUwB0AGkAbABsACAAUgB1AG4AbgBpAG4AZwA+AAAdVABvAHQAYQBsACAARQByAHIA
bwByAHMAOgAgAAAhVABvAHQAYQBsACAAVwBhAHIAbgBpAG4AZwBzADoAIAAAHU0AYQBjAGgAaQBu
AGUAIABOAGEAbQBlADoAIAAAJVcAYQBzACAASQBuAHQAZQByAGEAYwB0AGkAdgBlAD8AOgAgAAAn
RQB4AGUAYwB1AHQAaQBvAG4AIABBAGMAYwBvAHUAbgB0ADoAIAAANTwAIQAtAC0AewB7AEUAcgBy
AG8AcgBCAGwAbwBjAGsAUwB0AGEAcgB0AH0AfQAtAC0APgABMTwAIQAtAC0AewB7AEUAcgByAG8A
cgBCAGwAbwBjAGsARQBuAGQAfQB9AC0ALQA+AAE5PAAhAC0ALQB7AHsAVwBhAHIAbgBpAG4AZwBC
AGwAbwBjAGsAUwB0AGEAcgB0AH0AfQAtAC0APgABNTwAIQAtAC0AewB7AFcAYQByAG4AaQBuAGcA
QgBsAG8AYwBrAEUAbgBkAH0AfQAtAC0APgABNzwAIQAtAC0AewB7AEEAbABlAHIAdABTAG8AdQBy
AGMAZQBTAHQAYQByAHQAfQB9AC0ALQA+AAEzPAAhAC0ALQB7AHsAQQBsAGUAcgB0AFMAbwB1AHIA
YwBlAEUAbgBkAH0AfQAtAC0APgABMTwAIQAtAC0AewB7AEEAbABlAHIAdABSAG8AdwBTAHQAYQBy
AHQAfQB9AC0ALQA+AAEtPAAhAC0ALQB7AHsAQQBsAGUAcgB0AFIAbwB3AEUAbgBkAH0AfQAtAC0A
PgABDUYARgBEADUARAA1AAA/PAB0AHIAPgA8AHQAZAAgAHcAaQBkAHQAaAA9ACIAMQAwADAAJQAi
ACAAYgBnAGMAbwBsAG8AcgA9ACIAIwAAJSIAPgA8AGIAPgBTAG8AdQByAGMAZQAgADoAPAAvAGIA
PgAgAAAVPAAvAHQAZAA+ADwALwB0AHIAPgAAC0UAcgByAG8AcgAAMTwAdAByAD4APAB0AGQAIAB3
AGkAZAB0AGgAPQAiADEAMAAwACUAIgA+ADwAYgA+AAARIAA6ACAAPAAvAGIAPgBbAACAzzwAdABh
AGIAbABlACAAYgBvAHIAZABlAHIAPQAiADEAIgAgAHcAaQBkAHQAaAA9ACIAMQAwADAAJQAiACAA
cwB0AHkAbABlAD0AIgBiAG8AcgBkAGUAcgAtAGMAbwBsAGwAYQBwAHMAZQA6ACAAYwBvAGwAbABh
AHAAcwBlADsAZgBvAG4AdAAtAGYAYQBtAGkAbAB5ADoAIAB2AGUAcgBkAGEAbgBhADsAIABmAG8A
bgB0AC0AcwBpAHoAZQA6ACAAMQAwAHAAdAAiAD4AAYDJPAB0AHIAPgA8AHQAZAAgAHcAaQBkAHQA
aAA9ACIAMQAwADAAJQAiACAAYgBnAGMAbwBsAG8AcgA9ACIAIwBGAEYAMAAwADAAMAAiAD4APABm
AG8AbgB0ACAAYwBvAGwAbwByAD0AIgAjAEYARgBGAEYARgBGACIAIABTAGkAegBlAD0AIgA0ACIA
PgA8AGIAPgBFAFIAUgBPAFIAUwA8AC8AYgA+ADwALwBmAG8AbgB0AD4APAAvAHQAZAA+ADwALwB0
AHIAPgAAGTwALwB0AGEAYgBsAGUAPgA8AEIAUgA+AAANRgBGAEYARgA4ADAAAA9XAGEAcgBuAGkA
bgBnAACAzTwAdAByAD4APAB0AGQAIAB3AGkAZAB0AGgAPQAiADEAMAAwACUAIgAgAGIAZwBjAG8A
bABvAHIAPQAiACMARgBEADYAMAAxADMAIgA+ADwAZgBvAG4AdAAgAGMAbwBsAG8AcgA9ACIAIwBG
AEYARgBGAEYARgAiACAAUwBpAHoAZQA9ACIANAAiAD4APABiAD4AVwBBAFIATgBJAE4ARwBTADwA
LwBiAD4APAAvAGYAbwBuAHQAPgA8AC8AdABkAD4APAAvAHQAcgA+AACBjzwAYgByAD4APABiAHIA
PgA8AGYAbwBuAHQAIABmAGEAYwBlAD0AIgBUAGEAaABvAG0AYQAiACAAcwBpAHoAZQA9ACIAMQAi
AD4AVABoAGkAcwAgAHIAZQBwAG8AcgB0ACAAdwBhAHMAIABnAGUAbgBlAHIAYQB0AGUAZAAgAGIA
eQAgADwAYQAgAGgAcgBlAGYAPQAiAGgAdAB0AHAAOgAvAC8AdwB3AHcALgBwAHIAYQBnAG0AYQB0
AGkAYwB3AG8AcgBrAHMALgBjAG8AbQAvAHAAYQBnAGUAcwAvAD8AcwByAGMAPQBiAGkAeABwAHIA
ZQBzAHMAJgB0AGEAZwA9AE4ARgBFAG0AYQBpAGwAJgB1AHIAbAA9AC8AIgA+AEIASQAgAHgAUABy
AGUAcwBzACAATgBvAHQAaQBmAGkAYwBhAHQAaQBvAG4AIABGAHIAYQBtAGUAdwBvAHIAawA8AC8A
YQA+ACAAMgAwADEAOAAuADEALgAyADkALgAxADwALwBmAG8AbgB0AD4AAA0wADAARgBGADAAMAAA
DUYARAA2ADAAMQAzAAANRgBGADAAMAAwADAAADs8AHQAcgA+ADwAdABkAD4APABwAD4APABiAD4A
PABmAG8AbgB0ACAAcwBpAHoAZQA9ACIANAAiAD4AAB8gADwAZgBvAG4AdAAgAGMAbwBsAG8AcgA9
ACIAIwAABSIAPgAAOTwALwBmAG8AbgB0AD4APAAvAGYAbwBuAHQAPgA8AC8AYgA+ADwALwB0AGQA
PgA8AC8AdAByAD4AAIDdPAB0AHIAPgA8AHQAZAAgAHcAaQBkAHQAaAA9ACIAMQAwADAAJQAiACAA
YgBnAGMAbwBsAG8AcgA9ACIAIwAwAEIANgBCAEUAMQAiAD4APABmAG8AbgB0ACAAYwBvAGwAbwBy
AD0AIgAjAEYARgBGAEYARgBGACIAPgA8AGIAPgBQAGEAYwBrAGEAZwBlACAARQB4AGUAYwB1AHQA
aQBvAG4AIABTAHUAbQBtAGEAcgB5ADwALwBiAD4APAAvAGYAbwBuAHQAPgA8AC8AdABkAD4APAAv
AHQAcgA+AAArPAB0AHIAPgA8AHQAZAAgAHcAaQBkAHQAaAA9ACIAMQAwADAAJQAiAD4AAICrPAB0
AHIAPgA8AHQAZAAgAHcAaQBkAHQAaAA9ACIAMQA4ADkAIgAgAGIAZwBjAG8AbABvAHIAPQAiACMA
RgAyAEYAMgBGADIAIgA+ADwAYgA+AEUAeABlAGMAdQB0AGkAbwBuACAAUwB0AGEAdAB1AHMAPAAv
AGIAPgA8AC8AdABkAD4APAB0AGQAPgAgADwAZgBvAG4AdAAgAGMAbwBsAG8AcgA9ACIAIwAAIzwA
LwBmAG8AbgB0AD4APAAvAHQAZAA+ADwALwB0AHIAPgAAgIE8AHQAcgA+ADwAdABkACAAdwBpAGQA
dABoAD0AIgAxADgAOQAiACAAYgBnAGMAbwBsAG8AcgA9ACIAIwBGADIARgAyAEYAMgAiAD4APABi
AD4AUwB0AGEAcgB0ACAAVABpAG0AZQA8AC8AYgA+ADwALwB0AGQAPgA8AHQAZAA+AAB9PAB0AHIA
PgA8AHQAZAAgAHcAaQBkAHQAaAA9ACIAMQA4ADkAIgAgAGIAZwBjAG8AbABvAHIAPQAiACMARgAy
AEYAMgBGADIAIgA+ADwAYgA+AEUAbgBkACAAVABpAG0AZQA8AC8AYgA+ADwALwB0AGQAPgA8AHQA
ZAA+AAB9PAB0AHIAPgA8AHQAZAAgAHcAaQBkAHQAaAA9ACIAMQA4ADkAIgAgAGIAZwBjAG8AbABv
AHIAPQAiACMARgAyAEYAMgBGADIAIgA+ADwAYgA+AFIAdQBuACAAVABpAG0AZQA8AC8AYgA+ADwA
LwB0AGQAPgA8AHQAZAA+AACAhTwAdAByAD4APAB0AGQAIAB3AGkAZAB0AGgAPQAiADEAOAA5ACIA
IABiAGcAYwBvAGwAbwByAD0AIgAjAEYAMgBGADIARgAyACIAPgA8AGIAPgBUAG8AdABhAGwAIABF
AHIAcgBvAHIAcwA8AC8AYgA+ADwALwB0AGQAPgA8AHQAZAA+AACAiTwAdAByAD4APAB0AGQAIAB3
AGkAZAB0AGgAPQAiADEAOAA5ACIAIABiAGcAYwBvAGwAbwByAD0AIgAjAEYAMgBGADIARgAyACIA
PgA8AGIAPgBUAG8AdABhAGwAIABXAGEAcgBuAGkAbgBnAHMAPAAvAGIAPgA8AC8AdABkAD4APAB0
AGQAPgAAgIU8AHQAcgA+ADwAdABkACAAdwBpAGQAdABoAD0AIgAxADgAOQAiACAAYgBnAGMAbwBs
AG8AcgA9ACIAIwBGADIARgAyAEYAMgAiAD4APABiAD4ATQBhAGMAaABpAG4AZQAgAE4AYQBtAGUA
PAAvAGIAPgA8AC8AdABkAD4APAB0AGQAPgAAgI88AHQAcgA+ADwAdABkACAAdwBpAGQAdABoAD0A
IgAxADgAOQAiACAAYgBnAGMAbwBsAG8AcgA9ACIAIwBGADIARgAyAEYAMgAiAD4APABiAD4ARQB4
AGUAYwB1AHQAaQBvAG4AIABBAGMAYwBvAHUAbgB0ADwALwBiAD4APAAvAHQAZAA+ADwAdABkAD4A
AICNPAB0AHIAPgA8AHQAZAAgAHcAaQBkAHQAaAA9ACIAMQA4ADkAIgAgAGIAZwBjAG8AbABvAHIA
PQAiACMARgAyAEYAMgBGADIAIgA+ADwAYgA+AFcAYQBzACAASQBuAHQAZQByAGEAYwB0AGkAdgBl
AD8APAAvAGIAPgA8AC8AdABkAD4APAB0AGQAPgAAETwALwB0AGEAYgBsAGUAPgAALTwALwB0AGQA
PgA8AC8AdAByAD4APAAvAHQAYQBiAGwAZQA+ADwAQgBSAD4AAA9TAFUAQwBDAEUAUwBTAAALIABk
AGEAeQAsAAAJIABoAHIALAAACyAAbQBpAG4ALAAACSAAcwBlAGMAAA9bADAAIABzAGUAYwBdAABf
IABzAGUAdAB0AGkAbgBnACAAZABvAGUAcwBuACcAdAAgAGUAeABpAHMAdAAgAGkAbgAgAHIAdQBu
AHQAaQBtAGUAIABzAGUAdAB0AGkAbgBnACAAbABpAHMAdAAuAAEzRQBOAEEAQgBMAEUAXwBSAE8A
VwBDAE8AVQBOAFQAXwBUAEgAUgBFAFMASABPAEwARAAAK0UATgBBAEIATABFAF8AVABJAE0ARQBf
AFQASABSAEUAUwBIAE8ATABEAAAfRgBJAEwAVABFAFIARQBEAF8AQQBMAEUAUgBUAFMAABFOAEYA
XwBDAEgARQBDAEsAAA1VAFIARwBFAE4AVAAACVQARQBYAFQAAAEAF0MAOgBcAFMAUwBJAFMAXABM
AG8AZwAAR0MAOgBcAFMAUwBJAFMAXABDAG8AbgBmAGkAZwBcAE4ARgBfAEUAbQBhAGkAbABUAGUA
bQBwAGwAYQB0AGUALgBoAHQAbQAATVUAcwBlAHIAOgA6AHYAYQByAFMAUwBJAFMATwBwAHMATgBG
AF8ATwB0AGgAZQByAEMAbwBuAGYAaQBnAFMAZQB0AHQAaQBuAGcAcwAAAz0AAF1CAEkAIAB4AFAA
cgBlAHMAcwAgAE4AbwB0AGkAZgBpAGMAYQB0AGkAbwBuACAARgByAGEAbQBlAHcAbwByAGsAIABF
AHYAZQBuAHQAIABIAGEAbgBkAGwAZQByAAAnVQBzAGUAcgA6ADoAdgBhAHIAUwBTAEkAUwBPAHAA
cwBOAEYAXwAAcXMAdABfAGMAMQBjADAAOQAzADcAMgA1AGUANgAzADQAOAAwADAAOAA5ADgAMwBm
ADMAOABkAGMANgBiAGMANwAzAGYAMgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUA
cgBjAGUAcwAAAAAAE+udFieVlkankc0+hOE7bwAEIAEBCAMgAAEFIAEBEREEIAEBDgYgAQERgKkF
IAASgLVABzACDhE9ET0ODg4OEkEODgIVEkUBEiAODg4ICAgICAICAgICDg4IAhwODhJNCA4STRJR
Dg4OElUOElUODg4RPQMgAA4EAAARPQIGDgUAAgIODgYVEkUBEiADIAAIBAABAg4GIAEBEoDFBSAA
EoDJBSACDg4OBiABARGAzQQgAQECAwAADgYAAw4ODg4EIAEOCAUAAQ4dHAUAAQ4dDgUgAgEOCAUg
AgEODgYgAQESgNkFIAEBEk0FIAASgN0FIAARgOEIIAUCCA4ODggEIAEODgUAAg4ODhgHCRUSRQES
IBJZEl0SYRJlEmkSIBJtEnEEIAASXQUgABKA7QggARKA6RKA6QgAARKA8RGA9QogAgESgPEdEoDx
BSAAEoD5BCAAEmUDIAAcBiABHBKA/QUgAQETAAMgAAIEBwIODgQgABJxBQcCAhJxBQACAQ4OByAD
AQ4RdQgGAAMODhwcCAcEDhJ9EnECBAABDg4FAAIODhwHIAMBDgISeQUgAgEOAg4HBwgIHQ4IEoCB
ET0ScQYAAh0ODg4EIAARPQUgARE9DQcAAgIRPRE9BAcCCAgEIAEIDgUgAg4ICAUHAwgIDgUgAg4I
DhoHDBKAhRKAhQ4ODg4ODhURgIkBEiASIBE9CAYAAw4cHBwGIAESgIUOBSAAEoCFCSAAFRGAiQET
AAcVEYCJARIgBCAAEwAFAAASgKUGIAEOEoEVBQACDhwcJgcXEoCFEoCFDg4ODg4ODg4ODg4ODg4O
FRGAiQESIBIgET0IEiAOByABEYCNET0FAAINDQgDIAANBSABDh0DBgABEoEpHAYgARKBLQ4EIAEc
HAQHAg4IBSABEwAIBwcEDh0OCA4EIAAdAwogAx0OHQMIEYExBCABAg4GIAEOEoClBCABAhwFIAIB
HBwDBwEJEAcKHA4SQR0OCB0ODg4JEnEGIAEdDh0DBAABCA4DBwEDBgcCEoCRAgUgABKBOQcgAQEQ
EoCRBiABEoE9HAQgAQEcBwcDEoCRAhwFIAASgUEHIAIBDhKBQQQHAgkIBCABAwgIt3pcVhk04IkI
iYRdzYCAzJE4VQBzAGUAcgA6ADoAdgBhAHIAUwBTAEkAUwBPAHAAcwBOAEYAXwBBAGwAZQByAHQA
TABpAHMAdABAVQBzAGUAcgA6ADoAdgBhAHIAUwBTAEkAUwBPAHAAcwBOAEYAXwBBAGwAZQByAHQA
TABpAHMAdABfAEEAbABsAE5VAHMAZQByADoAOgB2AGEAcgBTAFMASQBTAE8AcABzAE4ARgBfAE4A
bwB0AGkAZgBpAGMAYQB0AGkAbwBuAF8AQwBvAHUAbgB0AGUAcgBWQgBJACAAeABQAHIAZQBzAHMA
IABOAG8AdABpAGYAaQBjAGEAdABpAG8AbgAgAEYAcgBhAG0AZQB3AG8AcgBrACAAUwBlAG4AZAAg
AEEAbABlAHIAdAAEAAAAAAQBAAAABAIAAAAEAwAAAAQEAAAAAgYCBAYSgKEEBhKApQMGEhACBggD
BhEYAwYRHAMGET0JIAEVEkUBEiAOBSABDhJxCSAFAg4OEXUOCAggBAIODgISeQYgAwgODggGIAMO
Dg4OCCAFDg4ODg4CByAEDgIOCAgeIBEODhE9ET0ODg4OAg4QCBAIEAgVEkUBEiACCAIOByACDhE9
ET0GIAEOEYCNBSACHBwOCSABDhUSRQESIAcgAwEOHBJBBiACHA4SQQQgABJBBSABARJBBSACAQ4c
BCABHA4FAAASgKEGAAEBEoClBAAAEhADAAABBAABCQ4JIAUBDggODhEcCyAGAQ4IDg4RHBE9BSAB
ARE9BCAAERwFIAEBERwFCAASgKEFCAASgKUECAASEAMoAAgDKAAOBCgAET0EKAARHAgBAAgAAAAA
AB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjc3RfYzFjMDkzNzI1
ZTYzNDgwMDg5ODNmMzhkYzZiYzczZjIAAAUBAAAAAA4BAAlNaWNyb3NvZnQAAB8BABpDb3B5cmln
aHQgQCBNaWNyb3NvZnQgMjAxOAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRG
cmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUAtAAAAM7K774BAAAAkQAAAGxT
eXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4w
LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVt
LlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAANikAAAA
AAAAAAAAAPKkAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADkpAAAAAAAAAAAAAAAAF9Db3JEbGxN
YWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFjAAAA+BAAAAAAAAAAAAAA+BDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAh1s7GgAAAQCHWzsaPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEngMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAegMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAADQACgABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAATQBpAGMAcgBvAHMAbwBmAHQAAABwACQAAQBGAGkAbABlAEQAZQBzAGMA
cgBpAHAAdABpAG8AbgAAAAAAcwB0AF8AYwAxAGMAMAA5ADMANwAyADUAZQA2ADMANAA4ADAAMAA4
ADkAOAAzAGYAMwA4AGQAYwA2AGIAYwA3ADMAZgAyAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkA
bwBuAAAAAAAxAC4AMAAuADYANwAxADUALgAyADMANAAzADEAAAAAAHAAKAABAEkAbgB0AGUAcgBu
AGEAbABOAGEAbQBlAAAAcwB0AF8AYwAxAGMAMAA5ADMANwAyADUAZQA2ADMANAA4ADAAMAA4ADkA
OAAzAGYAMwA4AGQAYwA2AGIAYwA3ADMAZgAyAC4AZABsAGwAAABaABsAAQBMAGUAZwBhAGwAQwBv
AHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABNAGkAYwByAG8AcwBvAGYA
dAAgADIAMAAxADgAAAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAA
AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAHMAdABfAGMAMQBjADAA
OQAzADcAMgA1AGUANgAzADQAOAAwADAAOAA5ADgAMwBmADMAOABkAGMANgBiAGMANwAzAGYAMgAu
AGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABzAHQAXwBjADEAYwAwADkA
MwA3ADIANQBlADYAMwA0ADgAMAAwADgAOQA4ADMAZgAzADgAZABjADYAYgBjADcAMwBmADIAAABC
AA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYANwAxADUALgAyADMA
NAAzADEAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAu
ADYANwAxADUALgAyADMANAAzADEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAMAAAABDUAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{03EDA4F3-0A0F-4F4E-8C19-B3D7C3D16E54\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{03EDA4F3-0A0F-4F4E-8C19-B3D7C3D16E54}"
          DTS:From="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_Package_OnPostExecute_LogConnectionManagers"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{03EDA4F3-0A0F-4F4E-8C19-B3D7C3D16E54}"
          DTS:To="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_Package_OnPostExecute"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{0A56F804-DC58-46CB-AEEA-E892B747C05B\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{0A56F804-DC58-46CB-AEEA-E892B747C05B}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceID]==@[System::PackageID] &amp;&amp; @[System::SourceName]==@[System::PackageName] &amp;&amp; SUBSTRING(@[System::SourceName], 1, 12)!=&quot;SSISOpsEhObj&quot; &amp;&amp; @[User::varSSISOps_DisableBIxAuditing]==false"
          DTS:From="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_Start"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{0A56F804-DC58-46CB-AEEA-E892B747C05B}"
          DTS:To="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_Package_OnPostExecute_LogConnectionManagers"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{1453022C-55AB-4E36-9F17-3918C5277754\}]"
          DTS:CreationName=""
          DTS:DTSID="{1453022C-55AB-4E36-9F17-3918C5277754}"
          DTS:EvalOp="1"
          DTS:Expression="ISNULL(@[User::varSSISOps_VariableValuesChangedQuery]) == false &amp;&amp; LEN(@[User::varSSISOps_VariableValuesChangedQuery]) &gt; 0"
          DTS:From="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_Task_BuildVariablesUsingExpressionsQuery"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{1453022C-55AB-4E36-9F17-3918C5277754}"
          DTS:To="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_Task_LogVariablesUsingExpressions"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{450EB9D0-86A6-49E6-8444-8DD858AC691E\}]"
          DTS:CreationName=""
          DTS:DTSID="{450EB9D0-86A6-49E6-8444-8DD858AC691E}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceID]==&quot;{14C07471-43F3-468E-85B1-49B3D7799974}&quot; || @[System::SourceID]==&quot;{47812213-D9C7-424D-9EBE-F3F6B6D1B048}&quot; &amp;&amp; (@[User::varSSISOps_DisableDFTRowCountLogging]==false || @[User::varSSISOps_DisableDataSrcInfoLogging]==false)"
          DTS:From="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_Task_OnPostExecute"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{450EB9D0-86A6-49E6-8444-8DD858AC691E}"
          DTS:To="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_SSISOpsScript"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{55781AB0-12F0-4FD1-8006-102C6534F501\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{55781AB0-12F0-4FD1-8006-102C6534F501}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceID]==&quot;{47812213-D9C7-424D-9EBE-F3F6B6D1B048}&quot; &amp;&amp; SUBSTRING(@[System::SourceName], 1, 12)!=&quot;SSISOpsEhObj&quot; &amp;&amp; (@[User::varSSISOps_DisableDFTRowCountLogging]==false)"
          DTS:From="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_SSISOpsScript"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{55781AB0-12F0-4FD1-8006-102C6534F501}"
          DTS:To="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_47812213D9C7424D9EBEF3F6B6D1B048_2"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{60DE18D9-FA20-4BA3-99EC-13BBAF39E73F\}]"
          DTS:CreationName=""
          DTS:DTSID="{60DE18D9-FA20-4BA3-99EC-13BBAF39E73F}"
          DTS:EvalOp="1"
          DTS:Expression="((@[User::varSSISOps_DisableBIxAuditing]==false) &amp;&amp; (@[User::varSSISOps_DisableVarLogging]==false))"
          DTS:From="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_Task_OnPostExecute"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{60DE18D9-FA20-4BA3-99EC-13BBAF39E73F}"
          DTS:To="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_Task_BuildVariablesUsingExpressionsQuery" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{619FDF33-351F-4F0C-9AF9-52F4AD70A0AA\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{619FDF33-351F-4F0C-9AF9-52F4AD70A0AA}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceID]!=@[System::PackageID] &amp;&amp; @[System::SourceName]!=@[System::PackageName] &amp;&amp; SUBSTRING(@[System::SourceName], 1, 12)!=&quot;SSISOpsEhObj&quot; &amp;&amp; @[User::varSSISOps_DisableBIxAuditing]==false"
          DTS:From="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_Start"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{619FDF33-351F-4F0C-9AF9-52F4AD70A0AA}"
          DTS:To="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_Task_OnPostExecute"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{69FB44B6-A735-42A4-972A-778641D49CA7\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{69FB44B6-A735-42A4-972A-778641D49CA7}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceID]==&quot;{14C07471-43F3-468E-85B1-49B3D7799974}&quot; &amp;&amp; SUBSTRING(@[System::SourceName], 1, 12)!=&quot;SSISOpsEhObj&quot; &amp;&amp; (@[User::varSSISOps_DisableDFTRowCountLogging]==false)"
          DTS:From="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_SSISOpsScript"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{69FB44B6-A735-42A4-972A-778641D49CA7}"
          DTS:To="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_14C0747143F3468E85B149B3D7799974_2"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{9D32D021-943C-46D7-BF80-07F7FF73D0BE\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{9D32D021-943C-46D7-BF80-07F7FF73D0BE}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceID]==&quot;{14C07471-43F3-468E-85B1-49B3D7799974}&quot; &amp;&amp; SUBSTRING(@[System::SourceName], 1, 12)!=&quot;SSISOpsEhObj&quot; &amp;&amp; (@[User::varSSISOps_DisableDFTRowCountLogging]==false)"
          DTS:From="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_SSISOpsScript"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{9D32D021-943C-46D7-BF80-07F7FF73D0BE}"
          DTS:To="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_14C0747143F3468E85B149B3D7799974_3"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{CF3C5CDF-9EB5-4D16-8CEE-6FD431C510F5\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{CF3C5CDF-9EB5-4D16-8CEE-6FD431C510F5}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceID]==&quot;{47812213-D9C7-424D-9EBE-F3F6B6D1B048}&quot; &amp;&amp; SUBSTRING(@[System::SourceName], 1, 12)!=&quot;SSISOpsEhObj&quot; &amp;&amp; (@[User::varSSISOps_DisableDFTRowCountLogging]==false)"
          DTS:From="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_SSISOpsScript"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{CF3C5CDF-9EB5-4D16-8CEE-6FD431C510F5}"
          DTS:To="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_47812213D9C7424D9EBEF3F6B6D1B048_1"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{D5688F82-B648-47B5-A093-EBC8CECD59D4\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{D5688F82-B648-47B5-A093-EBC8CECD59D4}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceID]==&quot;{14C07471-43F3-468E-85B1-49B3D7799974}&quot; &amp;&amp; SUBSTRING(@[System::SourceName], 1, 12)!=&quot;SSISOpsEhObj&quot; &amp;&amp; (@[User::varSSISOps_DisableDFTRowCountLogging]==false)"
          DTS:From="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_SSISOpsScript"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{D5688F82-B648-47B5-A093-EBC8CECD59D4}"
          DTS:To="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_14C0747143F3468E85B149B3D7799974_1"
          DTS:Value="2" />
      </DTS:PrecedenceConstraints>
    </DTS:EventHandler>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnPreExecute]"
      DTS:CreationName="OnPreExecute"
      DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
      DTS:DTSID="{8E0E5DFA-C433-4E11-924F-88C2D43C3B7D}"
      DTS:EventID="1840742224"
      DTS:EventName="OnPreExecute"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{83E9AAF9-1D8B-4166-B19C-E29737159CBD}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{AB6379BF-1758-4C09-953D-7557A6B6106A}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_ConnectionValues">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{7580AC24-29F5-453E-8592-A540A3E74ADD}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_DfLayout">
          <DTS:VariableValue
            DTS:DataType="8">&lt;layout version="3" compressed="true"&gt;&lt;DTS:Executable xmlns:DTS = "www.microsoft.com/SqlServer/Dts" DTS:ExecutableType = "SSIS.Package.2"&gt;&lt;DTS:PackageVariable&gt;		&lt;DTS:Property DTS:Name = "PackageVariableValue" DTS:DataType = "8"&gt;&lt;![CDATA[H4sIAAAAAAAEAO2Y32+bMBDH/xWLvSb8CtCSJZG6QLpIaRuVSHtYp8oFh6CCnWGTpp32v+8gpIOk6Vot7UMVnvDZvvtw38NgdyaY335lXKCA8CikTRElpElxQrrSGPu3OCRXQxqJCMdoxHCApilLkOt8u/YmJ6cuQoKhoSDJOMaURjS8cgaT63LCdT5B6nVG+J5lYkinrNc5TfF8tjKgPp5jPxL3XUmzJLRMYsq7kh+nRXgOfaR9Fvkp42wqZO9n7JF0QVJ5SAUJUywiRnNL5BMuOwU8dJ6xgMQy2CF+9FAM+ow5J8lNfN99qbcCsiRqJ5yHMXkJWDFNXj2cS8OIkudD18Isu9JMiHlbUbg/IwnmcvI4xWeJchfR6VLRVdVSljiJq3SvgHOXgtCABP+ZE7x4Ha0yTwknVBQuoSLOQaWyCLzoAfi1I0s+bhiaDIUwDPZUelcXIxc5XxAUh4joKjaasPmITEVXMkyjYZrHsikh5QkiXVf3zuNd9lHJ5LEs9UkVp6XLZkMz1Z1AmrV3oFMi0CXxWRpwIBHg55Ld9VlGRY3MADLd1HeR5dDGW4m3nSjrCHCMncJpli2/TaZOsiASDhZkAmtkrZJyopZp7JRO1d4AyXG9CXq+xCEkpMq0SjA3CNdge8OQx1jM+HeoG1QUDrrIxBwC6NqPColpFNVt5zVU5ZD7Gaw4vc5qkW0XLeQJnIo+o5T4gqVd6deyfZ7F8W8JuTSo2NWGpUqr0XlDLfrzO3MVpuoUPglhAisQfzSXhj6LY/AHiat8jyqzR7CMl0Nr7vN8Krtc/e3aDF6zQ3M7FRXLCN+QmK9NcF+BVeqT10MrtnfWe1tuwz4+yP1B5X7i7dZt4yD3x5C79u0tJd8W3FYPen8MvR3YLy1IAK94nCV0p+At2zoo/o6Kn1DKVnumUvcJWUKqYPM3xinw7K0MpPJHtaU3Wkfrv1SD2EeqbgTNQDX8puG3cPMGq62mFahT3/aJZQR6pUQsO//ZNC1N2gaXB4yWBwDFhrW9bucVl5fCp8FALS5pc4ScP7OT71EKf5AivGjXbRtZ/df8jQFgeAZ3qw9MlTMMaFVPN5T1aUrvDx3vwpVYEQAA]]&gt;&lt;/DTS:Property&gt;	&lt;DTS:Property DTS:Name = "Namespace"&gt;dts-designer-1.0&lt;/DTS:Property&gt;	&lt;DTS:Property DTS:Name = "ObjectName"&gt;Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load&lt;/DTS:Property&gt;&lt;/DTS:PackageVariable&gt;&lt;DTS:PackageVariable&gt;		&lt;DTS:Property DTS:Name = "PackageVariableValue" DTS:DataType = "8"&gt;&lt;![CDATA[H4sIAAAAAAAEAN2abZPaNhCA/4rGnzF+Nz4KzCRAr3RIcnPQyYck0xG24JzYEpVEcneZ/vfKxnYsjtepTQLfWGmlXa/3YaWFzhSyL38QxkGAWLjAKg9jpGIYo65yB/0vcIE+jrBPUYwwhxEYExiAOSUxGA7e/z2ZvrodAsAJmKxmPsGcQp+HePFiidLrjOETWfERnpNe55bC5cN6APThEvohf+oqpqGAxzjCrKv4EU2dYGIOtd+EPiWMzHlz8k80QfQros0R5mhBIQ8JTkZCH7HmIH0EMfmGBChqivEQRuFzqvQbZAzFs+ipe+xuqZOZR+2YsUWEjnEsXdZcP9wQL0KM9puWzBSaygPny7amMf8BxZA142KlT2LtW4jnj5qp6672COOo7GR8vI9plI5xrtd5K1Sz9zUJn0UcDMdo2KYCRkGlefLx3XgIBq/BhKyojxQwJcsxmvOuojd0BWhndGRy3we7nTF0M3VnGCxydyp2oHkH+QP7ILkA3q34csU/lVxpOcnTlx1p9lfi1fU664xtpxKYcEh5n2CMfE5oV/mev/X221UU/auAIQ5K03rDFeFOF2WhF/PJJ8dsOoq8t8BskfjNiuFsoE+iSOwnkCoxXlo9FmhkqtL2SVy1XVv9mNo0Lo0L8WVESiNjOEMRy4fE55Kzmrw4Vy2NbUlD0/NqScNbxMXLTsQRZohyFIB75BMaMHBPvoE+WWEuZaap2+fJzMJ8lpXA2shLw7YrT0z3ZntmivGaU9N007AW289C/zV6DhHN9e5IiLmRq6aSmUiWnklWV7FTSdttx3U2NPYYynRzSyIEZVOJaO+3dXPBvNX1tT8YTqZg+jv4a5nQBsSJQuil5wKJMkt3fxJlRpkygVjDtN3KMVN3caZeC2hqyzqetFw5t6VusKYehk29bNrceqrbYdBs3ftFyplle5VztoOyK2HshFomlzKZroNsXTJZpuHWRdaQUkLzbBZ8+TRcvuDLMfTz8FX2pkyWZzdsR6+cLNPejpYYvwq2TP14uExdosu0JVOJuJ+vPGaXCZjwvg7ARK75kCNRspC4kX0WLoqrmXB2FWMmEeYaZ2oVrAkrgb6FNkP3Go5TfcNgB21XAtsJrMmo2Zt29oN2yZwZrXoK2asgAH+S2QgzDrGPMsQkwlrGmVoeWS3VJaIMs+E61Xc61F0VTL2WEqaa3glXsEy5uIJtVDH1cBlTL7uOOfXwJe4962uPCopeY17PxJxcyzzjTG2PAaLh16Kgbjs2eo2WU33jw97R+bZrb32fhznLPR65TLeoZRum9IPV7JL7+bX2F9etfHFsDEK6PjiKg1txiEyoS7YaPvpofY6bwlkk//50Y/ystogpFT/xrew51fdFVMfaUfzExFWAqDqtE4pfplwUP8eSi18iHyh+eeAukka7pkvc/wfR0M0zNVD2k9hyGjdu9W0Uw2ptBzGZuAoQDeuEHwJy5dxWEoWytVTeD2IRuEsAUSv9UUdI5b/waPkfh3r/AUNgTZ1DJAAA]]&gt;&lt;/DTS:Property&gt;	&lt;DTS:Property DTS:Name = "Namespace"&gt;dts-designer-1.0&lt;/DTS:Property&gt;	&lt;DTS:Property DTS:Name = "ObjectName"&gt;Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load&lt;/DTS:Property&gt;&lt;/DTS:PackageVariable&gt;&lt;/DTS:Executable&gt;&lt;/layout&gt;</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. Set this variable to list of variables you want to mask during logging process. You can use comma separated list you can use wildcard &quot; * &quot; for pattern matching names are case insensitive. This option is used to mask variable values during logging process. This option is helpful when you have sensitive data (e.g. varFTP_Password) or variable value is extremly large to display (e.g. varXML_Document). When masking is enabled, &quot;****&quot; is logged in the BIxPress Audit Database rather than actual value of variable. Note: You can configure list of variables you want to mask outside the package by configuring &quot;varSSISOps_FilteredVars&quot;. There are 3 places where you have to set this value (OnPreExecute, OnPostExecute, OnVariableValueChanged)."
          DTS:DTSID="{9A6B60AB-1E33-467D-9FBA-1126FCF481F7}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_FilteredVars">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{B4EEE272-7FB5-4D06-ABC0-DBBD336E0390}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_ParentSourceID">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{64D1E529-CB8B-45B6-8E23-86939F4854B9}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_PkgLayout">
          <DTS:VariableValue
            DTS:DataType="8">&lt;layout version="3" compressed="true"&gt;&lt;DTS:Executable xmlns:DTS = "www.microsoft.com/SqlServer/Dts" DTS:ExecutableType = "SSIS.Package.2"&gt;&lt;DTS:PackageVariable&gt;		&lt;DTS:Property DTS:Name = "PackageVariableValue" DTS:DataType = "8"&gt;&lt;![CDATA[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]]&gt;&lt;/DTS:Property&gt;	&lt;DTS:Property DTS:Name = "Namespace"&gt;dts-designer-1.0&lt;/DTS:Property&gt;&lt;/DTS:PackageVariable&gt;&lt;/DTS:Executable&gt;&lt;/layout&gt;</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{73B7AF93-26CC-422F-B5EC-2D37DE1EF823}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_SourceType">
          <DTS:VariableValue
            DTS:DataType="8">unknown</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{D1634B65-EBA2-4287-AF93-B29266ED5240}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_TaskList">
          <DTS:VariableValue
            DTS:DataType="8">&lt;xml AuditControlFlowVersion="6" EnableRowCountLogging="True" EnableRowCountLoggingForSource="True" EnableRowCountLoggingForDestination="True" EnableDataFlowMonitoring="True" MaxIterationCount="0" TrackAllVariables="True" TrackOnlyTagVariables="False" EnableVariableChangeTracking="True" EnableVariableChangeTrackingAdvFeatures="True" EnableVariableChangeTrackingAdvFeaturesADORec="False" LogConnectionMgrs="True"&gt;&lt;tsk id="{D8338AD4-A9F0-4BC3-9FE6-F2FA818B59B0}" typ="SequenceContainer" p="" name="Completion (Audit)" on="1" /&gt;&lt;tsk id="{28D1D8BD-2B62-495F-9123-2C95713953C0}" typ="SQLTask" p="{D8338AD4-A9F0-4BC3-9FE6-F2FA818B59B0}" name="Mark Job As Complete in Job" on="1" /&gt;&lt;tsk id="{D47138FD-323D-4EB4-9892-5A413EC7E65F}" typ="SQLTask" p="{D8338AD4-A9F0-4BC3-9FE6-F2FA818B59B0}" name="Mark Job as Complete in JobInstance" on="1" /&gt;&lt;tsk id="{F7CEB591-830C-4F8C-97AD-855DD44C9372}" typ="SQLTask" p="" name="Determine IF Init vs Incr Load" on="1" /&gt;&lt;tsk id="{02D7A30A-BD02-4412-8E2A-940C75744B77}" typ="SQLTask" p="" name="Get LastRecordsProcessedDate For Package" on="1" /&gt;&lt;tsk id="{48F39B7A-DA1F-45EE-8F16-1EA00FDFEFE2}" typ="SequenceContainer" p="" name="Incremental Load from EDW_STAGE  to Subcontracting" on="1" /&gt;&lt;tsk id="{14C07471-43F3-468E-85B1-49B3D7799974}" typ="PipelineTask" p="{48F39B7A-DA1F-45EE-8F16-1EA00FDFEFE2}" name="Incremental Load" on="1" &gt;&lt;com id="2" dir="TRAN" typ="trnderivedcolumn" name="Add JobInstance Column" pid="{14C07471-43F3-468E-85B1-49B3D7799974}_2" /&gt;&lt;com id="14" dir="TRAN" typ="" name="Concatenate Rejected Columns" pid="{14C07471-43F3-468E-85B1-49B3D7799974}_14" /&gt;&lt;com id="34" dir="TRAN" typ="trnrowcount" name="DEST Insert Redirected or Rejected Rows to Exception Table" pid="{14C07471-43F3-468E-85B1-49B3D7799974}_34" /&gt;&lt;com id="38" dir="TRAN" typ="trnrowcount" name="DEST TF Upsert Destination" pid="{14C07471-43F3-468E-85B1-49B3D7799974}_38" /&gt;&lt;com id="42" dir="TRAN" typ="trnrowcount" name="Get Total Inserted Records Row Count" pid="{14C07471-43F3-468E-85B1-49B3D7799974}_42" /&gt;&lt;com id="46" dir="DEST" typ="desoledb" name="Insert Redirected or Rejected Rows to Exception Table" pid="{14C07471-43F3-468E-85B1-49B3D7799974}_46" /&gt;&lt;com id="70" dir="SRC" typ="srcoledb" name="OLE DB Source" pid="{14C07471-43F3-468E-85B1-49B3D7799974}_70" /&gt;&lt;com id="100" dir="TRAN" typ="trnrowcount" name="RowCount - Get TotalRejectedRows" pid="{14C07471-43F3-468E-85B1-49B3D7799974}_100" /&gt;&lt;com id="104" dir="TRAN" typ="trnrowcount" name="SRC OLE DB Source" pid="{14C07471-43F3-468E-85B1-49B3D7799974}_104" /&gt;&lt;com id="108" dir="TRAN" typ="" name="TF Error Output Description" pid="{14C07471-43F3-468E-85B1-49B3D7799974}_108" /&gt;&lt;com id="137" dir="DEST" typ="" name="TF Upsert Destination" pid="{14C07471-43F3-468E-85B1-49B3D7799974}_137" /&gt;&lt;dp id="208" val="0" ann="" c1="2" c2="100"/&gt;&lt;dp id="209" val="0" ann="" c1="108" c2="14"/&gt;&lt;dp id="210" val="1" ann="Error Output" c1="137" c2="108"/&gt;&lt;dp id="211" val="0" ann="" c1="70" c2="104"/&gt;&lt;dp id="212" val="0" ann="" c1="14" c2="2"/&gt;&lt;dp id="213" val="0" ann="" c1="42" c2="38"/&gt;&lt;dp id="214" val="0" ann="" c1="100" c2="34"/&gt;&lt;dp id="215" val="0" ann="" c1="34" c2="46"/&gt;&lt;dp id="216" val="0" ann="" c1="104" c2="42"/&gt;&lt;dp id="217" val="0" ann="" c1="38" c2="137"/&gt;&lt;/tsk&gt;&lt;tsk id="{624C77A0-D900-4810-A0B7-2A933DF9E431}" typ="SequenceContainer" p="" name="Initial Load from EDW_STAGE  to ItemPlanning" on="1" /&gt;&lt;pc id="{45FC2463-E63B-41E1-BB64-5188395F1FD4}" op="3" and="True" val="0" task1="{FDD32B0D-22C4-4B3A-8597-18741D0600ED}" task2="{5C4A12FB-8DEF-4B19-A9DB-C20686308016}" p="{624C77A0-D900-4810-A0B7-2A933DF9E431}" refId="Package\Initial Load from EDW_STAGE  to ItemPlanning.PrecedenceConstraints[Constraint]"/&gt;&lt;pc id="{AAE5980B-CEBA-4CF6-9F25-83D75999B43D}" op="2" and="False" val="0" task1="{5C4A12FB-8DEF-4B19-A9DB-C20686308016}" task2="{47812213-D9C7-424D-9EBE-F3F6B6D1B048}" p="{624C77A0-D900-4810-A0B7-2A933DF9E431}" refId="Package\Initial Load from EDW_STAGE  to ItemPlanning.PrecedenceConstraints[Constraint 1]"/&gt;&lt;pc id="{E36EEC19-6120-4E4E-9E4C-32A0D5947ACD}" op="3" and="False" val="0" task1="{FDD32B0D-22C4-4B3A-8597-18741D0600ED}" task2="{47812213-D9C7-424D-9EBE-F3F6B6D1B048}" p="{624C77A0-D900-4810-A0B7-2A933DF9E431}" refId="Package\Initial Load from EDW_STAGE  to ItemPlanning.PrecedenceConstraints[Constraint 2]"/&gt;&lt;pc id="{3161E0F6-ED4D-4AE3-8F04-6E5FD9AC70B4}" op="2" and="True" val="0" task1="{47812213-D9C7-424D-9EBE-F3F6B6D1B048}" task2="{77ED2086-7254-4BC4-BB59-35042E735026}" p="{624C77A0-D900-4810-A0B7-2A933DF9E431}" refId="Package\Initial Load from EDW_STAGE  to ItemPlanning.PrecedenceConstraints[Constraint 3]"/&gt;&lt;pc id="{9479BB31-1D8E-4C87-A63E-23A5BBFDF591}" op="3" and="True" val="0" task1="{77ED2086-7254-4BC4-BB59-35042E735026}" task2="{6FE10ABD-4177-4F8E-A5A3-F2CDA674F4B5}" p="{624C77A0-D900-4810-A0B7-2A933DF9E431}" refId="Package\Initial Load from EDW_STAGE  to ItemPlanning.PrecedenceConstraints[Constraint 4]"/&gt;&lt;pc id="{1B4E58BC-2CD5-4A3F-AFD1-57101C49239C}" op="2" and="True" val="0" task1="{4635D79F-BDBA-4852-ADC6-A4425B1E0E63}" task2="{FDD32B0D-22C4-4B3A-8597-18741D0600ED}" p="{624C77A0-D900-4810-A0B7-2A933DF9E431}" refId="Package\Initial Load from EDW_STAGE  to ItemPlanning.PrecedenceConstraints[Constraint 5]"/&gt;&lt;tsk id="{FDD32B0D-22C4-4B3A-8597-18741D0600ED}" typ="SQLTask" p="{624C77A0-D900-4810-A0B7-2A933DF9E431}" name="Detect index and prepare drop and create index script" on="1" /&gt;&lt;tsk id="{47812213-D9C7-424D-9EBE-F3F6B6D1B048}" typ="PipelineTask" p="{624C77A0-D900-4810-A0B7-2A933DF9E431}" name="DFT_Initial_Load" on="1" &gt;&lt;com id="2" dir="TRAN" typ="trnrowcount" name="DEST OLE DB Destination" pid="{47812213-D9C7-424D-9EBE-F3F6B6D1B048}_2" /&gt;&lt;com id="6" dir="TRAN" typ="trnderivedcolumn" name="Get AuditDateTime" pid="{47812213-D9C7-424D-9EBE-F3F6B6D1B048}_6" /&gt;&lt;com id="24" dir="TRAN" typ="trnrowcount" name="Get Records Total RowCount" pid="{47812213-D9C7-424D-9EBE-F3F6B6D1B048}_24" /&gt;&lt;com id="28" dir="DEST" typ="desoledb" name="OLE DB Destination" pid="{47812213-D9C7-424D-9EBE-F3F6B6D1B048}_28" /&gt;&lt;com id="57" dir="SRC" typ="srcoledb" name="OLE DB Source" pid="{47812213-D9C7-424D-9EBE-F3F6B6D1B048}_57" /&gt;&lt;com id="87" dir="TRAN" typ="trnrowcount" name="SRC OLE DB Source" pid="{47812213-D9C7-424D-9EBE-F3F6B6D1B048}_87" /&gt;&lt;dp id="91" val="0" ann="" c1="6" c2="2"/&gt;&lt;dp id="92" val="0" ann="" c1="57" c2="87"/&gt;&lt;dp id="93" val="0" ann="" c1="24" c2="6"/&gt;&lt;dp id="94" val="0" ann="" c1="2" c2="28"/&gt;&lt;dp id="95" val="0" ann="" c1="87" c2="24"/&gt;&lt;/tsk&gt;&lt;tsk id="{5C4A12FB-8DEF-4B19-A9DB-C20686308016}" typ="SQLTask" p="{624C77A0-D900-4810-A0B7-2A933DF9E431}" name="Drop Index" on="1" /&gt;&lt;tsk id="{77ED2086-7254-4BC4-BB59-35042E735026}" typ="SQLTask" p="{624C77A0-D900-4810-A0B7-2A933DF9E431}" name="ExSQL Delete Duplicated Rows" on="1" /&gt;&lt;tsk id="{6FE10ABD-4177-4F8E-A5A3-F2CDA674F4B5}" typ="SQLTask" p="{624C77A0-D900-4810-A0B7-2A933DF9E431}" name="Recreate Index" on="1" /&gt;&lt;tsk id="{4635D79F-BDBA-4852-ADC6-A4425B1E0E63}" typ="SequenceContainer" p="{624C77A0-D900-4810-A0B7-2A933DF9E431}" name="Truncate Target Table Beforehand" on="1" /&gt;&lt;tsk id="{F6251106-B158-4967-8BD9-318CE36A5BCD}" typ="SQLTask" p="{4635D79F-BDBA-4852-ADC6-A4425B1E0E63}" name="Truncate_Items" on="1" /&gt;&lt;tsk id="{9369FEC7-4C8C-4384-A2D8-A1CA216835E8}" typ="SequenceContainer" p="" name="Initialization" on="1" /&gt;&lt;tsk id="{2DE403E2-C914-4964-B4DD-C75ABC9C9E81}" typ="ScriptTask" p="{9369FEC7-4C8C-4384-A2D8-A1CA216835E8}" name="Validate Connection Managers" on="1" /&gt;&lt;tsk id="{89DE7994-9945-4921-8FD6-2C1F53BEFDA8}" typ="SequenceContainer" p="" name="Initialization (Audit)" on="1" /&gt;&lt;pc id="{BECB5785-9E5B-4EBF-BDA5-5D1701BF60AD}" op="2" and="True" val="0" task1="{1993FC0A-4A83-4458-9C62-9DA52F73FE42}" task2="{8166141D-8098-484E-987C-6730717E453A}" p="{89DE7994-9945-4921-8FD6-2C1F53BEFDA8}" refId="Package\Initialization (Audit).PrecedenceConstraints[Constraint]"/&gt;&lt;pc id="{98610634-D04D-4168-BC08-D245CFD6A0E7}" op="2" and="True" val="0" task1="{8166141D-8098-484E-987C-6730717E453A}" task2="{77961184-63E0-4F12-80EC-64F2488F085C}" p="{89DE7994-9945-4921-8FD6-2C1F53BEFDA8}" refId="Package\Initialization (Audit).PrecedenceConstraints[Constraint 1]"/&gt;&lt;pc id="{D621206A-B883-4C39-9E29-8B3A14008BB7}" op="3" and="True" val="0" task1="{77961184-63E0-4F12-80EC-64F2488F085C}" task2="{C725A3FC-FDFF-4142-95B9-4AE06B617887}" p="{89DE7994-9945-4921-8FD6-2C1F53BEFDA8}" refId="Package\Initialization (Audit).PrecedenceConstraints[Constraint 2]"/&gt;&lt;pc id="{6BAD1315-D3A3-43CB-9588-2D0CE2C08293}" op="2" and="True" val="0" task1="{C725A3FC-FDFF-4142-95B9-4AE06B617887}" task2="{8EBB2957-DB47-4C95-B300-BC09AE7DACC3}" p="{89DE7994-9945-4921-8FD6-2C1F53BEFDA8}" refId="Package\Initialization (Audit).PrecedenceConstraints[Constraint 3]"/&gt;&lt;tsk id="{C725A3FC-FDFF-4142-95B9-4AE06B617887}" typ="ScriptTask" p="{89DE7994-9945-4921-8FD6-2C1F53BEFDA8}" name="Execute cmd shell and retrieve environment variable information" on="1" /&gt;&lt;tsk id="{8EBB2957-DB47-4C95-B300-BC09AE7DACC3}" typ="SQLTask" p="{89DE7994-9945-4921-8FD6-2C1F53BEFDA8}" name="Log Environment" on="1" /&gt;&lt;tsk id="{1993FC0A-4A83-4458-9C62-9DA52F73FE42}" typ="SQLTask" p="{89DE7994-9945-4921-8FD6-2C1F53BEFDA8}" name="Populate ETLUser" on="1" /&gt;&lt;tsk id="{8166141D-8098-484E-987C-6730717E453A}" typ="SQLTask" p="{89DE7994-9945-4921-8FD6-2C1F53BEFDA8}" name="Populate Joblog" on="1" /&gt;&lt;tsk id="{77961184-63E0-4F12-80EC-64F2488F085C}" typ="SQLTask" p="{89DE7994-9945-4921-8FD6-2C1F53BEFDA8}" name="Populate new Job Instance" on="1" /&gt;&lt;pc id="{B5269A41-9C1D-4A37-AC78-0E14C1787229}" op="2" and="True" val="0" task1="{9369FEC7-4C8C-4384-A2D8-A1CA216835E8}" task2="{89DE7994-9945-4921-8FD6-2C1F53BEFDA8}" p="" refId="Package.PrecedenceConstraints[Constraint]"/&gt;&lt;pc id="{0E7435B0-1B41-4E2B-878A-4100D6049E67}" op="2" and="True" val="0" task1="{89DE7994-9945-4921-8FD6-2C1F53BEFDA8}" task2="{02D7A30A-BD02-4412-8E2A-940C75744B77}" p="" refId="Package.PrecedenceConstraints[Constraint 1]"/&gt;&lt;pc id="{7CB4E018-6C83-4A65-9675-BE0065C981B3}" op="3" and="True" val="0" task1="{F7CEB591-830C-4F8C-97AD-855DD44C9372}" task2="{624C77A0-D900-4810-A0B7-2A933DF9E431}" p="" refId="Package.PrecedenceConstraints[Constraint 2]"/&gt;&lt;pc id="{2339001C-88EA-4F0C-A1D0-F5A171C832DF}" op="3" and="True" val="0" task1="{F7CEB591-830C-4F8C-97AD-855DD44C9372}" task2="{48F39B7A-DA1F-45EE-8F16-1EA00FDFEFE2}" p="" refId="Package.PrecedenceConstraints[Constraint 3]"/&gt;&lt;pc id="{FAD8F4C4-9319-43C7-887B-BBE5DD3D61A3}" op="2" and="True" val="0" task1="{02D7A30A-BD02-4412-8E2A-940C75744B77}" task2="{F7CEB591-830C-4F8C-97AD-855DD44C9372}" p="" refId="Package.PrecedenceConstraints[Constraint 4]"/&gt;&lt;pc id="{D4A48215-64E3-45A3-874A-657ADBAC9B9B}" op="2" and="False" val="0" task1="{624C77A0-D900-4810-A0B7-2A933DF9E431}" task2="{D8338AD4-A9F0-4BC3-9FE6-F2FA818B59B0}" p="" refId="Package.PrecedenceConstraints[Constraint 5]"/&gt;&lt;pc id="{A6732780-5012-43DE-9E42-C44292510B9B}" op="2" and="False" val="0" task1="{48F39B7A-DA1F-45EE-8F16-1EA00FDFEFE2}" task2="{D8338AD4-A9F0-4BC3-9FE6-F2FA818B59B0}" p="" refId="Package.PrecedenceConstraints[Constraint 6]"/&gt;&lt;/xml&gt;</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{B17F6B2D-B8B1-4CFD-994D-DE514DF06BBA}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_VariableValues">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPreExecute]\SSISOpsEhObj_OnPreExecute_Start"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{C43AEE0B-C83C-40D6-829E-852AF046435B}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_OnPreExecute_Start">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[User::varSSISOps_DisableBIxAuditing]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <ScriptProject
              Name="st_eee85b2fb596449ca73f02e17ba7822c"
              VSTAMajorVersion="14"
              VSTAMinorVersion="0"
              Language="CSharp">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("st_eee85b2fb596449ca73f02e17ba7822c")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Microsoft")]
[assembly: AssemblyProduct("st_eee85b2fb596449ca73f02e17ba7822c")]
[assembly: AssemblyCopyright("Copyright @ Microsoft 2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Namespaces

using System;
using System.Data;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using Microsoft.SqlServer.Dts.Runtime;
using System.Xml;

#endregion

namespace st_eee85b2fb596449ca73f02e17ba7822c
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // Begin BI xPress Code
            string xmlTaskInfo = this.ReadVariable("varSSISOps_TaskList").ToString();

            if (string.IsNullOrEmpty(xmlTaskInfo))
            {
                this.WriteVariable("varSSISOps_SourceType", "UNKNOWN");
                this.WriteVariable("varSSISOps_ParentSourceID", string.Empty);
                return;
            }

            using (XmlTextReader reader = new XmlTextReader(new System.IO.MemoryStream(System.Text.Encoding.UTF8.GetBytes(xmlTaskInfo))))
            {
                bool isFound = false;

                while (reader.Read())
                {
                    switch (reader.NodeType)
                    {
                        case XmlNodeType.Element:
                            // The node is an Element
                            if (reader.Name.ToLowerInvariant() == "tsk" && this.ReadVariable("System::SourceID").ToString().ToLowerInvariant() == reader.GetAttribute("id").ToLowerInvariant())
                            {
                                this.WriteVariable("varSSISOps_SourceType", reader.GetAttribute("typ"));
                                this.WriteVariable("varSSISOps_ParentSourceID", reader.GetAttribute("p"));
                                isFound = true;
                                break;
                            }

                            break;
                    }
                }

                if (isFound == false)
                {
                    this.WriteVariable("varSSISOps_SourceType", "UNKNOWN");
                    this.WriteVariable("varSSISOps_ParentSourceID", string.Empty);
                }
            }

            if (string.Compare(ReadVariable("System::SourceID").ToString(), ReadVariable("System::PackageID").ToString(), StringComparison.InvariantCultureIgnoreCase) == 0)
            {
            System.Text.StringBuilder sb = new System.Text.StringBuilder(); 
            string variableNamesCsv = ReadVariable("User::varSSISOps_VariableValues").ToString();
            bool isLogVariables = !Convert.ToBoolean(ReadVariable("User::varSSISOps_DisableVarLogging"));

            if (isLogVariables)
            {
                string filterVariableNamesCsv = ReadVariable("User::varSSISOps_FilteredVars").ToString();
                string[] filterVariableNames = filterVariableNamesCsv.Split(',');
                string[] variableNames = variableNamesCsv.Split(',');
                int maxCharsToLog = Convert.ToInt32(ReadVariable("User::varSSISOps_MaxVarCharsToLog"));

                foreach (string variableName in variableNames)
                {
                    if (string.IsNullOrEmpty(variableName))
                    {
                        continue;
                    }
                    
                    string trimmedVariableName = variableName.Trim();
                    
                    if (trimmedVariableName.IndexOf("::", StringComparison.OrdinalIgnoreCase) < 0)
                    {
                        trimmedVariableName = "User::" + trimmedVariableName;
                    }

                    try
                    {
                        bool isVariableFilteredOut = false;

                        foreach (string filteredVariableName in filterVariableNames)
                        {
                            if (string.IsNullOrEmpty(filteredVariableName))
                            {
                                continue;
                            }
                            
                            string trimmedFilteredVariableName = filteredVariableName.Trim();

                            if (System.Text.RegularExpressions.Regex.IsMatch(trimmedVariableName, trimmedFilteredVariableName.Replace("*", "\\w*"), System.Text.RegularExpressions.RegexOptions.IgnoreCase))
                            {
                                isVariableFilteredOut = true;
                                
                                break;
                            }
                        }

                        object variableValue;

                        if (isVariableFilteredOut)
                        {
                            variableValue = "*****";
                        }
                        else
                        {
                            variableValue = ReadVariable(variableName); 

                            if (variableValue != null)
                            {
                                string variableValueString = variableValue.ToString();
                                
                                bool isLogFullValue = maxCharsToLog < 1;

                                if (!isLogFullValue && variableValueString.Length > maxCharsToLog)
                                {
                                    variableValue = variableValueString.Substring(0, maxCharsToLog) + " ...<VALUE TRUNCATED - Change value of [varSSISOps_MaxVarCharsToLog] to -1 if you want to log full value (Not recommended for performance reasons)>";
                                }
                            }
                        }

                        if (variableValue != null)
                        {
                            sb.AppendLine(variableName.PadRight(30, '.') + "... " + variableValue.ToString());
                        }
                        else
                        {
                            sb.AppendLine(variableName.PadRight(30, '.') + "... ");
                        }
                    }
                    catch (Exception ex)
                    {
                        sb.AppendLine(variableName.PadRight(30, '.') + "... {Error reading variable value: " + ex.Message + "}"); 
                    }
                }

                WriteVariable("User::varSSISOps_VariableValues", sb.ToString()); 
            }

                bool isDisableLogParameterInitialValues;

                // This should only execute if the feature has not been disabled and once during package OnPreExecute.  This should not execute for tasks.
                if (bool.TryParse(ReadVariable("User::varSSISOps_DisableParameterInitialValueLogging").ToString(), out isDisableLogParameterInitialValues) && !isDisableLogParameterInitialValues && string.Compare(ReadVariable("System::SourceID").ToString(), ReadVariable("System::PackageID").ToString(), StringComparison.InvariantCultureIgnoreCase) == 0)
                {
                    string filterVariableNamesCsv = ReadVariable("User::varSSISOps_FilteredVars").ToString();
                    string[] filterVariableNames = filterVariableNamesCsv.Split(',');
                    object filteredParams = ReadVariable("User::varSSISOps_InitialParamsVarsToLog");
                    int maxCharsToLog = Convert.ToInt32(ReadVariable("User::varSSISOps_MaxVarCharsToLog"));
                    string parameterList = filteredParams == null ? string.Empty : filteredParams.ToString();
                    System.Collections.Generic.HashSet<string> parameterNames = new System.Collections.Generic.HashSet<string>(parameterList.Split(new[] { ',' }, StringSplitOptions.RemoveEmptyEntries), StringComparer.OrdinalIgnoreCase);
                    System.Text.StringBuilder parameterNameValues = new System.Text.StringBuilder();

                    foreach (string parameterName in parameterNames)
                    {
                        string fullyQualifiedVariableName = parameterName.Contains("::") ? parameterName : "$Package::" + parameterName;

                        if (!Dts.VariableDispenser.Contains(fullyQualifiedVariableName))
                        {
                            continue;
                        }
                        
                        bool isVariableFilteredOut = false;

                        foreach (string filteredVariableName in filterVariableNames)
                        {
                            if (string.IsNullOrEmpty(filteredVariableName))
                            {
                                continue;
                            }

                            string trimmedFilteredVariableName = filteredVariableName.Trim();

                            if (System.Text.RegularExpressions.Regex.IsMatch(fullyQualifiedVariableName, trimmedFilteredVariableName.Replace("$", "\\$").Replace(":", "\\:").Replace("*", "\\w*"), System.Text.RegularExpressions.RegexOptions.IgnoreCase))
                            {
                                isVariableFilteredOut = true;

                                break;
                            }
                        }

                        string parameterDisplayValue;

                        if (isVariableFilteredOut)
                        {
                            parameterDisplayValue = "*****";
                        }
                        else
                        {
                            object parameterValue = ReadVariable(fullyQualifiedVariableName);
                            parameterDisplayValue = parameterValue == null ? string.Empty : parameterValue.ToString();

                            if (maxCharsToLog > 0 && parameterDisplayValue.Length > maxCharsToLog)
                            {
                                parameterDisplayValue = parameterDisplayValue.Substring(0, maxCharsToLog) + " ...<VALUE TRUNCATED - Change value of [varSSISOps_MaxVarCharsToLog] to -1 if you want to log full value (Not recommended for performance reasons)>";
                            }
                        }

                        parameterNameValues.AppendFormat("{0}... {1}{2}", fullyQualifiedVariableName.TrimStart('$').PadRight(30, '.'), parameterDisplayValue, Environment.NewLine);
                    }

                    // Append all logged parameter name/value pairs to the end of the existing variable values SSIS Package Variable value.
                    if (parameterNameValues.Length > 0)
                    {
                        object variableValuesValue = ReadVariable("User::varSSISOps_VariableValues");
                        string variableValuesDisplayValue = variableValuesValue == null ? string.Empty : variableValuesValue.ToString();

                        WriteVariable("User::varSSISOps_VariableValues", variableValuesDisplayValue + parameterNameValues);
                    }
                }

            System.Text.StringBuilder connectionManagersStringBuilder = new System.Text.StringBuilder();
            bool isLogConnections = !Convert.ToBoolean(ReadVariable("User::varSSISOps_DisableConnLogging"));

            if (isLogConnections)
            {
                string filteredConnectionManagerNamesCsv = ReadVariable("User::varSSISOps_FilteredConns").ToString();
                string[] filteredConnectionManagerNames = filteredConnectionManagerNamesCsv.Split(',');

                foreach (ConnectionManager connectionManager in Dts.Connections)
                {
                    try
                    {
                        bool isConnectionManagerFilteredOut = false;

                        foreach (string filteredConnectionManagerName in filteredConnectionManagerNames)
                        {
                            if (string.IsNullOrEmpty(filteredConnectionManagerName))
                            {
                                continue;
                            }

                            string trimmedFilteredConnectionManagerName = filteredConnectionManagerName.Trim();

                            if (System.Text.RegularExpressions.Regex.IsMatch(connectionManager.Name, trimmedFilteredConnectionManagerName.Replace("*", "\\w*"), System.Text.RegularExpressions.RegexOptions.IgnoreCase))
                            {
                                isConnectionManagerFilteredOut = true;

                                break;
                            }
                        }

                        string connectionString = connectionManager.ConnectionString;
                        string dataSource = string.Empty;

                        if (isConnectionManagerFilteredOut)
                        {
                            connectionString = "*****";
                            dataSource = "*****";
                        }
                        else
                        {
                            try
                            {
                                if (connectionManager.Properties.Contains("ServerName"))
                                {
                                    dataSource = connectionManager.Properties["ServerName"].GetValue(connectionManager).ToString();
                                }
                                else if (connectionManager.Properties.Contains("SqlServerName"))
                                {
                                    dataSource = connectionManager.Properties["SqlServerName"].GetValue(connectionManager).ToString();
                                }
                                else if (connectionManager.Properties.Contains("Host"))
                                {
                                    dataSource = connectionManager.Properties["Host"].GetValue(connectionManager).ToString();
                                }
                                else if (connectionManager.Properties.Contains("ServerHost"))
                                {
                                    dataSource = connectionManager.Properties["ServerHost"].GetValue(connectionManager).ToString();
                                }
                                else if (connectionManager.Properties.Contains("Server"))
                                {
                                    dataSource = connectionManager.Properties["Server"].GetValue(connectionManager).ToString();
                                }
                                else if (connectionManager.CreationName == "FLATFILE" || (connectionManager.CreationName == "FILE" && connectionString.IndexOf(".", StringComparison.InvariantCultureIgnoreCase) > 0))
                                {
                                    dataSource = System.IO.Path.GetFileName(connectionString);
                                }
                            }
                            catch (Exception) { }
                        }

                        connectionManagersStringBuilder.AppendLine(connectionManager.Name.PadRight(30, '.') + "... " + connectionManager.CreationName.PadRight(10, ' ') + "  \t" + dataSource.PadRight(15, ' ') + "  \t" + connectionString);
                    }
                    catch (Exception ex)
                    {
                        connectionManagersStringBuilder.AppendLine(connectionManager.Name.PadRight(30, '.') + "... {Error reading connection: " + ex.Message + "}");
                    }
                }

                WriteVariable("User::varSSISOps_ConnectionValues", connectionManagersStringBuilder.ToString());
            }


            }

            // End BI xPress Code

            Dts.TaskResult = (int)ScriptResults.Success;
        }

#region ScriptResults declaration

        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };

#endregion


        private void WriteVariable(string variableName, object variableValue)
        {
            Variables vars = null;
            bool isUnlocked = false;

            try
            {
                Dts.VariableDispenser.LockForWrite(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    vars[variableName].Value = variableValue;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }
        }
        private object ReadVariable(string variableName)
        {
            Variables vars = null;
            bool isUnlocked = false;
            object result;

            try
            {
                Dts.VariableDispenser.LockForRead(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    result = vars[variableName].Value;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }

            return result;
        }

    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>st_eee85b2fb596449ca73f02e17ba7822c</msb:CodeName>
		<msb:DisplayName>st_eee85b2fb596449ca73f02e17ba7822c</msb:DisplayName>
		<msb:ProjectId>{A9FEA37C-7B09-4E08-9354-967788183EDA}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_eee85b2fb596449ca73f02e17ba7822c.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="st_eee85b2fb596449ca73f02e17ba7822c.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{17232b84-b893-431c-8c89-6f3198863e63}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>st_eee85b2fb596449ca73f02e17ba7822c</RootNamespace>
    <AssemblyName>st_eee85b2fb596449ca73f02e17ba7822c</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_eee85b2fb596449ca73f02e17ba7822c.Properties.Settings.get_Default():st_eee85b2fb596449ca73f02e17ba7822c.Properties.Sett" +
    "ings")]

namespace st_eee85b2fb596449ca73f02e17ba7822c.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_eee85b2fb596449ca73f02e17ba7822c.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_eee85b2fb596449ca73f02e17ba7822c.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_eee85b2fb596449ca73f02e17ba7822c.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace st_eee85b2fb596449ca73f02e17ba7822c.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("st_eee85b2fb596449ca73f02e17ba7822c.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="st_eee85b2fb596449ca73f02e17ba7822c.dll">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
pQBTALIGAAAWAIwGbgEWAFUGbgEWAK8HbgEGAI0FgQUGAJoCygYGAEUG/QYGAAoGyAUaAF0CIgUa
AMsCIgUaAB4CswUGAH8C3QYGAJgEgQUGAF4E0AgGAGsFRwAGAHEFRwAOABsGYAUGAAsBgQUGAPkF
gQUGAL8IgQUGABYGgQUaANwI1AcaABYI1AcGAKAFgQUGAAMIgQUGAGcGgQUGAAEApQAGAA8ApQAK
ABAF5wQWAHoGbgEGAJ0IgQUWAPcHbgEWAJ4HbgEWAAkJbgEGALEERwAWAKEGbgEWAAIBbgEGALkB
gQUGABcBgQUGAOYI3QUAAAAAPgAAAAAAAQABAAEAEACoBYEAOQABAAEAAAAQAAQHYAdJAAEABQAA
ARAAwgdgB30AAwAJAAMBAAAzCAAAZQAEAAwAEQCSBegBEQDyAewBEQDUAPABBgZwAPQBVoAjCPcB
VoDSAfcBUCAAAAAAhgCuBQYAAQBUKQAAAACBAP0A+wEBAPApAAAAAIEA8AABAgMAjCoAAAAAhhi9
BgYABACUKgAAAACDGL0GBgAEAJwqAAAAAJMIQQYGAgQAyCoAAAAAkwjaAQsCBADPKgAAAACTCOYB
EAIEANcqAAAAAJYIcQgWAgUA3ioAAAAAhhi9BgYABQDmKgAAAACRGMMGGwIFAAAAAQBEAQAAAgA5
BAAAAQBEAQAAAQBQBAkAvQYBABEAvQYGABkAvQYKACkAvQYQADEAvQYQADkAvQYQAEEAvQYQAEkA
vQYQAFEAvQYQAFkAvQYQAGEAvQYQAGkAvQYGANEAvQYGAPEAvQYVAAEBvQYGAJEAlgRdAAkB+whh
AAkBAwlmABEBNQBpABEBuQdvABkBvQZ1AHkAvQZ7ACkBpQGCACkBOwFdAAkBjAhdAAkB7wiHACkB
pAONACkBxwCSADEBTAIGAAkBvgGWAIkAvQYGAEEBngWfAAkBawikAEEBLQCrAAkBiAVdAAkBVgSw
AAkBQQi4AAkBzAC+AFEBqQTEAAkBtgTNAAkBnwTRAAkBYgjXAAkBQQjdAIkAjgHkAJkA5ABdAAkB
QQjqAGEBVALyAAkBawj5AHEBNgIDAQwAvQYPAQwArwYhARQAqQgwAQkBywc1AXEAKwg6AYkBdgZA
AZEBywc1AQkBtQhGAZkBmQFMAYkASAhQARQAxwiSAIkAtgTNAAkBQQhZAYkB8wdfAaEBrwZlAbEA
qQhqAbkAOwFdALkAgQRdALkAjwdvAakBywd1AakBeAV6AbEBRwSBAbkAXQFdALkBUQGGAQkBQQiL
AcEBxwiSAIkBfQgBAJEBcgIQAJEBrAeXAcEAeAWeAckBLwSlAcEAwQQGAJEBXAgGAJEBwAAQAMkB
JQSxAXEAvQYGAJEAvQYGANEBKQG1AdEB4gi+AdkAvQbEAfkAvQYGAAgAFADeAQgAGADjASkAcwBW
Ai4ACwAuAi4AEwA3Ai4AGwBWAi4AIwBfAi4AKwCIAi4AMwCIAi4AOwCOAi4AQwBfAi4ASwCdAi4A
UwCIAi4AWwC9AkMAYwDjAUkAcwBWAmEAewDjAWMAawDjARsAkQGqAQMAAQAEAAMAAABFBh8CAAD6
ASQCAAB1CCkCAgAGAAMAAgAHAAUAAQAIAAUAAgAJAAcACQEqAQSAAAABAAAAOxqHWwAAAAAAAIEA
AAAEAAAAAAAAAAAAAADMAXgAAAAAAA0AAAAAAAAAAAAAANUByAQAAAAABAAAAAAAAAAAAAAAzAFg
BQAAAAAEAAAAAAAAAAAAAADMAcYBAAAAAA0AAAAAAAAAAAAAANUBUQAAAAAABAAAAAAAAAAAAAAA
zAGBBQAAAAAAAAAAAQAAAA4HAAAFAAIAAAAAAABJRW51bWVyYWJsZWAxAElFcXVhbGl0eUNvbXBh
cmVyYDEASGFzaFNldGAxAFRvSW50MzIAZ2V0X1VURjgAPE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAG1zY29ybGliAHN0X2VlZTg1YjJmYjU5
NjQ0OWNhNzNmMDJlMTdiYTc4MjJjAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAExvY2tGb3JS
ZWFkAFJlcGxhY2UAZGVmYXVsdEluc3RhbmNlAGdldF9NZXNzYWdlAFJlYWRWYXJpYWJsZQBXcml0
ZVZhcmlhYmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxl
AGdldF9OYW1lAHZhcmlhYmxlTmFtZQBHZXRGaWxlTmFtZQBnZXRfQ3JlYXRpb25OYW1lAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAQXBwZW5kTGluZQBnZXRfTmV3TGluZQBnZXRfTm9k
ZVR5cGUAWG1sTm9kZVR5cGUAQ29tcGFyZQBTeXN0ZW0uQ29yZQBGYWlsdXJlAGdldF9DdWx0dXJl
AHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UA
QXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAZ2V0X09yZGluYWxJZ25vcmVDYXNlAERpc3Bvc2UAVHJ5
UGFyc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUATG9ja0ZvcldyaXRlAENvbXBpbGVyR2VuZXJhdGVk
QXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0
ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJs
eVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25m
aWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRp
b25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAR2V0QXR0cmli
dXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0
dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRy
aWJ1dGUAZ2V0X1ZhbHVlAHNldF9WYWx1ZQB2YXJpYWJsZVZhbHVlAEdldFZhbHVlAHZhbHVlAElu
ZGV4T2YARW5jb2RpbmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBnZXRfQ29ubmVjdGlvblN0
cmluZwBUb1N0cmluZwBTdWJzdHJpbmcASXNNYXRjaABQYXRoAGdldF9MZW5ndGgAVW5sb2NrAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNr
cy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABzdF9l
ZWU4NWIyZmI1OTY0NDljYTczZjAyZTE3YmE3ODIyYy5kbGwAU3lzdGVtLlhtbABNZW1vcnlTdHJl
YW0AZ2V0X0l0ZW0AU3lzdGVtAFRyaW0ARW51bQByZXNvdXJjZU1hbgBUb0Jvb2xlYW4AU2NyaXB0
TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVm
bGVjdGlvbgBFeGNlcHRpb24AU3RyaW5nQ29tcGFyaXNvbgBDdWx0dXJlSW5mbwBDaGFyAFhtbFJl
YWRlcgBYbWxUZXh0UmVhZGVyAFN0cmluZ0J1aWxkZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBDb25u
ZWN0aW9uTWFuYWdlcgBTdHJpbmdDb21wYXJlcgBnZXRfVmFyaWFibGVEaXNwZW5zZXIAQ29ubmVj
dGlvbkVudW1lcmF0b3IARHRzRW51bWVyYXRvcgBHZXRFbnVtZXJhdG9yAC5jdG9yAC5jY3RvcgBT
eXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0u
UmVzb3VyY2VzAHN0X2VlZTg1YjJmYjU5NjQ0OWNhNzNmMDJlMTdiYTc4MjJjLlByb3BlcnRpZXMu
UmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBzdF9lZWU4NWIyZmI1OTY0NDljYTcz
ZjAyZTE3YmE3ODIyYy5Qcm9wZXJ0aWVzAGdldF9Qcm9wZXJ0aWVzAER0c1Byb3BlcnRpZXMAR2V0
VmFyaWFibGVzAEdldEJ5dGVzAFNldHRpbmdzAENvbnRhaW5zAFN5c3RlbS5UZXh0LlJlZ3VsYXJF
eHByZXNzaW9ucwBnZXRfQ29ubmVjdGlvbnMAU3RyaW5nU3BsaXRPcHRpb25zAFJlZ2V4T3B0aW9u
cwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBDb25jYXQAQXBwZW5kRm9ybWF0AE9iamVj
dABSZXNldABQYWRSaWdodABTcGxpdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABUb0xvd2Vy
SW52YXJpYW50AEVudmlyb25tZW50AGdldF9DdXJyZW50AFRyaW1TdGFydABDb252ZXJ0AE1vdmVO
ZXh0AFN5c3RlbS5UZXh0AFJlZ2V4AGdldF9Bc3NlbWJseQBvcF9FcXVhbGl0eQBJc051bGxPckVt
cHR5AER0c1Byb3BlcnR5AAAAAAAndgBhAHIAUwBTAEkAUwBPAHAAcwBfAFQAYQBzAGsATABpAHMA
dAAAK3YAYQByAFMAUwBJAFMATwBwAHMAXwBTAG8AdQByAGMAZQBUAHkAcABlAAAPVQBOAEsATgBP
AFcATgAAM3YAYQByAFMAUwBJAFMATwBwAHMAXwBQAGEAcgBlAG4AdABTAG8AdQByAGMAZQBJAEQA
AAd0AHMAawAAIVMAeQBzAHQAZQBtADoAOgBTAG8AdQByAGMAZQBJAEQAAAVpAGQAAAd0AHkAcAAA
A3AAACNTAHkAcwB0AGUAbQA6ADoAUABhAGMAawBhAGcAZQBJAEQAAD9VAHMAZQByADoAOgB2AGEA
cgBTAFMASQBTAE8AcABzAF8AVgBhAHIAaQBhAGIAbABlAFYAYQBsAHUAZQBzAABFVQBzAGUAcgA6
ADoAdgBhAHIAUwBTAEkAUwBPAHAAcwBfAEQAaQBzAGEAYgBsAGUAVgBhAHIATABvAGcAZwBpAG4A
ZwAAO1UAcwBlAHIAOgA6AHYAYQByAFMAUwBJAFMATwBwAHMAXwBGAGkAbAB0AGUAcgBlAGQAVgBh
AHIAcwAAQ1UAcwBlAHIAOgA6AHYAYQByAFMAUwBJAFMATwBwAHMAXwBNAGEAeABWAGEAcgBDAGgA
YQByAHMAVABvAEwAbwBnAAAFOgA6AAANVQBzAGUAcgA6ADoAAAMqAAAHXAB3ACoAAAsqACoAKgAq
ACoAAIEnIAAuAC4ALgA8AFYAQQBMAFUARQAgAFQAUgBVAE4AQwBBAFQARQBEACAALQAgAEMAaABh
AG4AZwBlACAAdgBhAGwAdQBlACAAbwBmACAAWwB2AGEAcgBTAFMASQBTAE8AcABzAF8ATQBhAHgA
VgBhAHIAQwBoAGEAcgBzAFQAbwBMAG8AZwBdACAAdABvACAALQAxACAAaQBmACAAeQBvAHUAIAB3
AGEAbgB0ACAAdABvACAAbABvAGcAIABmAHUAbABsACAAdgBhAGwAdQBlACAAKABOAG8AdAAgAHIA
ZQBjAG8AbQBtAGUAbgBkAGUAZAAgAGYAbwByACAAcABlAHIAZgBvAHIAbQBhAG4AYwBlACAAcgBl
AGEAcwBvAG4AcwApAD4AAQkuAC4ALgAgAABHLgAuAC4AIAB7AEUAcgByAG8AcgAgAHIAZQBhAGQA
aQBuAGcAIAB2AGEAcgBpAGEAYgBsAGUAIAB2AGEAbAB1AGUAOgAgAAADfQAAaVUAcwBlAHIAOgA6
AHYAYQByAFMAUwBJAFMATwBwAHMAXwBEAGkAcwBhAGIAbABlAFAAYQByAGEAbQBlAHQAZQByAEkA
bgBpAHQAaQBhAGwAVgBhAGwAdQBlAEwAbwBnAGcAaQBuAGcAAE9VAHMAZQByADoAOgB2AGEAcgBT
AFMASQBTAE8AcABzAF8ASQBuAGkAdABpAGEAbABQAGEAcgBhAG0AcwBWAGEAcgBzAFQAbwBMAG8A
ZwAAFSQAUABhAGMAawBhAGcAZQA6ADoAAAMkAAAFXAAkAAADOgAABVwAOgAAG3sAMAB9AC4ALgAu
ACAAewAxAH0AewAyAH0AAEdVAHMAZQByADoAOgB2AGEAcgBTAFMASQBTAE8AcABzAF8ARABpAHMA
YQBiAGwAZQBDAG8AbgBuAEwAbwBnAGcAaQBuAGcAAD1VAHMAZQByADoAOgB2AGEAcgBTAFMASQBT
AE8AcABzAF8ARgBpAGwAdABlAHIAZQBkAEMAbwBuAG4AcwAAFVMAZQByAHYAZQByAE4AYQBtAGUA
ABtTAHEAbABTAGUAcgB2AGUAcgBOAGEAbQBlAAAJSABvAHMAdAAAFVMAZQByAHYAZQByAEgAbwBz
AHQAAA1TAGUAcgB2AGUAcgAAEUYATABBAFQARgBJAEwARQAACUYASQBMAEUAAAMuAAAHIAAgAAkA
AD8uAC4ALgAgAHsARQByAHIAbwByACAAcgBlAGEAZABpAG4AZwAgAGMAbwBuAG4AZQBjAHQAaQBv
AG4AOgAgAABDVQBzAGUAcgA6ADoAdgBhAHIAUwBTAEkAUwBPAHAAcwBfAEMAbwBuAG4AZQBjAHQA
aQBvAG4AVgBhAGwAdQBlAHMAAHFzAHQAXwBlAGUAZQA4ADUAYgAyAGYAYgA1ADkANgA0ADQAOQBj
AGEANwAzAGYAMAAyAGUAMQA3AGIAYQA3ADgAMgAyAGMALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4A
UgBlAHMAbwB1AHIAYwBlAHMAAAAAXoNFTREyHkmIDKZ2MkJNOQAEIAEBCAMgAAEFIAEBEREEIAEB
DgUgAQERdUEHLQ4SPQIRQRJFDgISRR0OCB0OCA4OAhwdDggODg4STR0OHAgSRRURVQEODg4CDg4O
HBwOHQ4SWRJdAg4ODg4STQMgAA4EAAECDgIGDgUAABKAiQUgAR0FDgUgAQEdBQYgAQESgJEEIAAR
QQUAAgIODgQgAQ4OAyAAAggAAwgODhGAnQQAAQIcBiABHQ4dAwQAAQgcByACCA4RgJ0FAAIODg4F
IAIODg4IAAMCDg4RgK0DIAAIBSACDggIBSACDggDBgADDg4ODgUgARJFDgcABA4ODg4OBgACAg4Q
AgkgAh0OHQMRgLUFAAASgLkFFRJRAQ4RIAIBFRKAvQETABUSgMEBEwAIIAAVEVUBEwAFFRFVAQ4E
IAATAAQgAQIOBSAAEoDFBSAAEoDJBSABDh0DAwAADgggBBJFDhwcHAUAAg4cHAUgABKA0QQgABJZ
BCAAEl0FIAASgNUEIAECHAYgARKA2RwEIAEcHAQAAQ4OBQABDh0OBQcCEmECBiABARASYQYgARKA
5RwEIAEBHAYHAxJhAhwDIAAcCAABEoDpEYDtBSAAEoDxByACAQ4SgPEIt3pcVhk04IkIiYRdzYCA
zJEEAAAAAAQBAAAAAwYSbQMGEnEDBhIQAgYIAwYRFAUgAgEOHAQgARwOBAAAEm0EAAAScQUAAQES
cQQAABIQAwAAAQQIABJtBAgAEnEECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlv
blRocm93cwEIAQACAAAAAAAoAQAjc3RfZWVlODViMmZiNTk2NDQ5Y2E3M2YwMmUxN2JhNzgyMmMA
AAUBAAAAAA4BAAlNaWNyb3NvZnQAAB8BABpDb3B5cmlnaHQgQCBNaWNyb3NvZnQgMjAxOAAASQEA
Gi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVU
IEZyYW1ld29yayA0LjUAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNl
UmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1Ymxp
Y0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3Vy
Y2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAHRFAAAAAAAAAAAAAI5FAAAAIAAAAAAAAAAAAAAA
AAAAAAAAAAAAAACARQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAg
ABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAA+
BAAAAAAAAAAAAAA+BDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEAh1s7GgAAAQCHWzsaPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
ngMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAegMAAAEAMAAwADAAMAAwADQAYgAw
AAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAADQACgABAEMAbwBtAHAAYQBuAHkATgBhAG0A
ZQAAAAAATQBpAGMAcgBvAHMAbwBmAHQAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABp
AG8AbgAAAAAAcwB0AF8AZQBlAGUAOAA1AGIAMgBmAGIANQA5ADYANAA0ADkAYwBhADcAMwBmADAA
MgBlADEANwBiAGEANwA4ADIAMgBjAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAx
AC4AMAAuADYANwAxADUALgAyADMANAAzADEAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEA
bQBlAAAAcwB0AF8AZQBlAGUAOAA1AGIAMgBmAGIANQA5ADYANAA0ADkAYwBhADcAMwBmADAAMgBl
ADEANwBiAGEANwA4ADIAMgBjAC4AZABsAGwAAABaABsAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkA
ZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABNAGkAYwByAG8AcwBvAGYAdAAgADIAMAAx
ADgAAAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEA
TwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAHMAdABfAGUAZQBlADgANQBiADIAZgBi
ADUAOQA2ADQANAA5AGMAYQA3ADMAZgAwADIAZQAxADcAYgBhADcAOAAyADIAYwAuAGQAbABsAAAA
aAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABzAHQAXwBlAGUAZQA4ADUAYgAyAGYAYgA1
ADkANgA0ADQAOQBjAGEANwAzAGYAMAAyAGUAMQA3AGIAYQA3ADgAMgAyAGMAAABCAA8AAQBQAHIA
bwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYANwAxADUALgAyADMANAAzADEAAAAA
AEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYANwAxADUA
LgAyADMANAAzADEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAoDUAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPreExecute]\SSISOpsEhObj_Package_OnPreExecute"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{40AE3E0F-B35B-4C2E-9579-3DD15931CBAB}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_Package_OnPreExecute"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{FD4092C7-1531-4C59-8065-369CAD340586}"
              SQLTask:SqlStatementSource="EXEC [bix].[usp_SSISOps_Audit_OnPreExecute_67] @Scope='Package',@ExecutionID=?,@SourceID=?,@SourceName=?,@InteractiveMode=?,@UserName=?,@MachineName=?,@LogCustomValues=0,@LayoutXML=?,@TaskListXML=?,@DFLayoutXML=?,@Variables=?,@Connections=?,@GroupNames=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="System::SourceName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="System::InteractiveMode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="System::UserName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="5"
                SQLTask:DtsVariableName="System::MachineName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="6"
                SQLTask:DtsVariableName="User::varSSISOps_PkgLayout"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="7"
                SQLTask:DtsVariableName="User::varSSISOps_TaskList"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="8"
                SQLTask:DtsVariableName="User::varSSISOps_DfLayout"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="9"
                SQLTask:DtsVariableName="User::varSSISOps_VariableValues"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="10"
                SQLTask:DtsVariableName="User::varSSISOps_ConnectionValues"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="11"
                SQLTask:DtsVariableName="User::varSSISOps_GroupNames"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPreExecute]\SSISOpsEhObj_Task_OnPreExecute"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{E7FC916B-5094-492C-B740-9D4DC8A817BC}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_Task_OnPreExecute"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{FD4092C7-1531-4C59-8065-369CAD340586}"
              SQLTask:SqlStatementSource="EXEC [bix].[usp_SSISOps_Audit_OnPreExecute_67] @Scope='Task',@ExecutionID=?,@SourceID=?,@ParentSourceID=?,@SourceName=?,@SourceType=?,@LogCustomValues=0" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::varSSISOps_ParentSourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="System::SourceName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="User::varSSISOps_SourceType"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnPreExecute].PrecedenceConstraints[{494DA0A7-3175-46EB-ADBE-0713DFA90848\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{494DA0A7-3175-46EB-ADBE-0713DFA90848}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceID]==@[System::PackageID] &amp;&amp; @[System::SourceName]==@[System::PackageName] &amp;&amp; SUBSTRING(@[System::SourceName], 1, 12)!=&quot;SSISOpsEhObj&quot; &amp;&amp; @[User::varSSISOps_DisableBIxAuditing]==false"
          DTS:From="Package.EventHandlers[OnPreExecute]\SSISOpsEhObj_OnPreExecute_Start"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{494DA0A7-3175-46EB-ADBE-0713DFA90848}"
          DTS:To="Package.EventHandlers[OnPreExecute]\SSISOpsEhObj_Package_OnPreExecute"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnPreExecute].PrecedenceConstraints[{4D025126-CB1B-498E-A3BE-15244B456FE1\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{4D025126-CB1B-498E-A3BE-15244B456FE1}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceID]!=@[System::PackageID] &amp;&amp; @[System::SourceName]!=@[System::PackageName] &amp;&amp; SUBSTRING(@[System::SourceName], 1, 12)!=&quot;SSISOpsEhObj&quot; &amp;&amp; @[User::varSSISOps_DisableBIxAuditing]==false"
          DTS:From="Package.EventHandlers[OnPreExecute]\SSISOpsEhObj_OnPreExecute_Start"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{4D025126-CB1B-498E-A3BE-15244B456FE1}"
          DTS:To="Package.EventHandlers[OnPreExecute]\SSISOpsEhObj_Task_OnPreExecute"
          DTS:Value="2" />
      </DTS:PrecedenceConstraints>
    </DTS:EventHandler>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnVariableValueChanged]"
      DTS:CreationName="OnVariableValueChanged"
      DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
      DTS:DTSID="{54862CC6-4BE1-46EF-96F1-36ECC377A059}"
      DTS:EventID="4456480"
      DTS:EventName="OnVariableValueChanged"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{689B7C21-0612-4AAB-94D5-3EA560478121}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{50B34B42-9D06-492D-8BFD-C973D0662650}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_CurValue">
          <DTS:VariableValue
            DTS:DataSubType="ManagedSerializable"
            DTS:DataType="13">
            <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
              <SOAP-ENV:Body>
                <xsd:anyType
                  id="ref-1"></xsd:anyType>
              </SOAP-ENV:Body>
            </SOAP-ENV:Envelope>
          </DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. Set this variable to list of variables you want to mask during logging process. You can use comma separated list you can use wildcard &quot; * &quot; for pattern matching names are case insensitive. This option is used to mask variable values during logging process. This option is helpful when you have sensitive data (e.g. varFTP_Password) or variable value is extremly large to display (e.g. varXML_Document). When masking is enabled, &quot;****&quot; is logged in the BIxPress Audit Database rather than actual value of variable. Note: You can configure list of variables you want to mask outside the package by configuring &quot;varSSISOps_FilteredVars&quot;. There are 3 places where you have to set this value (OnPreExecute, OnPostExecute, OnVariableValueChanged)."
          DTS:DTSID="{EE26E620-3237-45AB-AF72-B1CD4DECA1F4}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOps_FilteredVars">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnVariableValueChanged]\SSISOpsEhObj_OnVariableValueChanged_Start"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{3CB94BC1-7761-45A2-B3CF-D1425A4FC217}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_OnVariableValueChanged_Start"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[User::varSSISOps_DisableBIxAuditing]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <ScriptProject
              Name="st_b474fc298f1b43f7982b2a9cd8ddc9c0"
              VSTAMajorVersion="14"
              VSTAMinorVersion="0"
              Language="CSharp">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("st_b474fc298f1b43f7982b2a9cd8ddc9c0")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Microsoft")]
[assembly: AssemblyProduct("st_b474fc298f1b43f7982b2a9cd8ddc9c0")]
[assembly: AssemblyCopyright("Copyright @ Microsoft 2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_b474fc298f1b43f7982b2a9cd8ddc9c0.Properties.Settings.get_Default():st_b474fc298f1b43f7982b2a9cd8ddc9c0.Properties.Sett" +
    "ings")]

namespace st_b474fc298f1b43f7982b2a9cd8ddc9c0.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Namespaces

using System;
using System.Data;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using Microsoft.SqlServer.Dts.Runtime;

#endregion

namespace st_b474fc298f1b43f7982b2a9cd8ddc9c0
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // Begin BI xPress Code
            try
            {
                // Set the "variable value has changed" flag for subsequent use in the OnPostExecute event handler.
                WriteVariable("User::varSSISOps_IsAnyVariableValueChanged", true);
            }
            catch (Exception)
            {
                Dts.Events.FireWarning(0, "VariableValuesChanged", "Unable to set the User::varSSISOps_IsAnyVariableValueChanged variable's value to true.", string.Empty, 0);
            }

            try
            {
                string variableName = ReadVariable("System::VariableName").ToString();
                string filteredVariableNamesCsv = ReadVariable("User::varSSISOps_FilteredVars").ToString();
                string[] filteredVariableNames = filteredVariableNamesCsv.Split(",".ToCharArray(), StringSplitOptions.RemoveEmptyEntries);

                bool isVariableFilteredOut = false;
                string fullyQualifiedVariableName = !string.IsNullOrEmpty(variableName) && variableName.IndexOf("::", StringComparison.OrdinalIgnoreCase) < 0 ? "User::" + variableName : variableName;

                foreach (string filteredVariableName in filteredVariableNames)
                {
                    if (string.IsNullOrEmpty(filteredVariableName))
                    {
                        continue;
                    }

                    string trimmedFilteredVariableName = filteredVariableName.Trim();

                    if (System.Text.RegularExpressions.Regex.IsMatch(fullyQualifiedVariableName, trimmedFilteredVariableName.Replace("*", "\\w*"), System.Text.RegularExpressions.RegexOptions.IgnoreCase))
                    {
                        isVariableFilteredOut = true;

                        break;
                    }
                }

                if (isVariableFilteredOut)
                {
                    Dts.TaskResult = (int)ScriptResults.Success;

                    WriteVariable("User::varSSISOps_CurValue", "*****");

                    return;
                }

                object variableValue = ReadVariable("System::VariableValue");

                if (!DBNull.Value.Equals(variableValue) && variableValue != null)
                {
                    string variableValueString = variableValue.ToString();
                    int maxCharsToLog = Convert.ToInt32(ReadVariable("User::varSSISOps_MaxVarCharsToLog"));
                    bool isLogFullValue = maxCharsToLog < 1;

                    if (isLogFullValue || variableValueString.Length <= maxCharsToLog)
                    {
                        WriteVariable("User::varSSISOps_CurValue", variableValueString);
                    }
                    else
                    {
                        WriteVariable("User::varSSISOps_CurValue", variableValueString.Substring(0, maxCharsToLog) + " ...<VALUE TRUNCATED - Change value of [varSSISOps_MaxVarCharsToLog] to -1 if you want to log full value (Not recommended for performance reason)>");
                    }
                }
                else
                {
                    WriteVariable("User::varSSISOps_CurValue", string.Empty);
                }
            }
            catch (Exception)
            {
                Dts.Events.FireWarning(0, "VariableValueChanged", "Can not log value for [" + ReadVariable("System::VariableName") + "]", "", 0);
            }

            Dts.TaskResult = (int)ScriptResults.Success;


            // End BI xPress Code
        }

#region ScriptResults declaration

        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };

#endregion


        private void WriteVariable(string variableName, object variableValue)
        {
            Variables vars = null;
            bool isUnlocked = false;

            try
            {
                Dts.VariableDispenser.LockForWrite(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    vars[variableName].Value = variableValue;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }
        }
        private object ReadVariable(string variableName)
        {
            Variables vars = null;
            bool isUnlocked = false;
            object result;

            try
            {
                Dts.VariableDispenser.LockForRead(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    result = vars[variableName].Value;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }

            return result;
        }

    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>st_b474fc298f1b43f7982b2a9cd8ddc9c0</msb:CodeName>
		<msb:DisplayName>st_b474fc298f1b43f7982b2a9cd8ddc9c0</msb:DisplayName>
		<msb:ProjectId>{7484EEB1-5AF3-4352-8CEF-E572E111BEFA}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_b474fc298f1b43f7982b2a9cd8ddc9c0.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="st_b474fc298f1b43f7982b2a9cd8ddc9c0.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{a24a2962-b02a-4f2d-b552-918f48fd7c6f}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>st_b474fc298f1b43f7982b2a9cd8ddc9c0</RootNamespace>
    <AssemblyName>st_b474fc298f1b43f7982b2a9cd8ddc9c0</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_b474fc298f1b43f7982b2a9cd8ddc9c0.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_b474fc298f1b43f7982b2a9cd8ddc9c0.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_b474fc298f1b43f7982b2a9cd8ddc9c0.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace st_b474fc298f1b43f7982b2a9cd8ddc9c0.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("st_b474fc298f1b43f7982b2a9cd8ddc9c0.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="st_b474fc298f1b43f7982b2a9cd8ddc9c0.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAH8lA1sAAAAAAAAAAOAAIiALATAAABgAAAAIAAAAAAAAljcA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAEQ3AABPAAAAAEAAAJwEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAnBcAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAJwEAAAAQAAAAAYAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAB4
NwAAAAAAAEgAAAACAAUABCQAAIgSAAABAAAAAAAAAIw2AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBgDRAQAAAQAAEQJyAQAAcBeMGgAAASgCAAAG3iQmAigQ
AAAKbxEAAAoWclcAAHBygwAAcH4SAAAKFm8TAAAK3gAAAnIyAQBwKAMAAAZvFAAACgoCclwBAHAo
AwAABm8UAAAKcpgBAHAoFQAAChdvFgAAChYLBigXAAAKLQ8GcpwBAHAbbxgAAAoWMgMGKwtyogEA
cAYoGQAACgwTBBYTBSs9EQQRBZoTBhEGKBcAAAotJxEGbxoAAAoTBwgRB3KwAQBwcrQBAHBvGwAA
ChcoHAAACiwEFwsrDhEFF1gTBREFEQSOaTK7BywhAigQAAAKFm8dAAAKAnK8AQBwcvABAHAoAgAA
Bt3PAAAAAnL8AQBwKAMAAAYNfh4AAAoJbx8AAAotXwksXAlvFAAAChMIAnIoAgBwKAMAAAYoIAAA
ChMJEQkX/gQtCxEIbyEAAAoRCTAPAnK8AQBwEQgoAgAABisxAnK8AQBwEQgWEQlvIgAACnJsAgBw
KBkAAAooAgAABisQAnK8AQBwfhIAAAooAgAABt45JgIoEAAACm8RAAAKFnKTAwBwcr0DAHACcjIB
AHAoAwAABnLtAwBwKCMAAApy8QMAcBZvEwAACt4AAigQAAAKFm8dAAAKKgAAAEE0AAAAAAAAAAAA
ABMAAAATAAAAJAAAABAAAAEAAAAAOAAAAFMBAACLAQAAOQAAABAAAAEbMAIAZQAAAAIAABEUChYL
AigQAAAKbyQAAAoDbyUAAAoCKBAAAApvJAAAChIAbyYAAAoGA28nAAAKBG8oAAAK3gwGLAgGbykA
AAoXC9zeICYCKBAAAApvJAAACm8qAAAK/hoGLAkHLQYGbykAAArcKgAAAAEoAAACACcADzYADAAA
AAAAAAQAQEQAExAAAAECAAQAU1cADQAAAAAbMAIAZgAAAAMAABEUChYLAigQAAAKbyQAAAoDbysA
AAoCKBAAAApvJAAAChIAbyYAAAoGA28nAAAKbywAAAoM3gwGLAgGbykAAAoXC9zeICYCKBAAAApv
JAAACm8qAAAK/hoGLAkHLQYGbykAAArcCCoAAAEoAAACACcADzYADAAAAAAAAAQAQEQAExAAAAEC
AAQAU1cADQAAAAAeAigtAAAKKh4CKC4AAAoqrn4BAAAELR5y8wMAcNADAAACKC8AAApvMAAACnMx
AAAKgAEAAAR+AQAABCoafgIAAAQqHgKAAgAABCoafgMAAAQqHgIoMgAACioucwoAAAaAAwAABCoA
AEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAALwEAAAjfgAAKAUAANgGAAAjU3Ry
aW5ncwAAAAAADAAAaAQAACNVUwBoEAAAEAAAACNHVUlEAAAAeBAAABACAAAjQmxvYgAAAAAAAAAC
AAABVx2iAQkDAAAA+gEzABYAAAEAAAAoAAAABQAAAAYAAAALAAAABAAAADIAAAACAAAAEAAAAAMA
AAACAAAAAwAAAAQAAAABAAAABAAAAAEAAAABAAAAAAANBAEAAAAAAAYAbQI2BQYA/AI2BQYAuQEj
BQ8AqgUAAAYA5gGfBAYAUAKfBAYAMQKfBAYA4wKfBAYAjQKfBAYApgKfBAYA/QGfBAYAGAJKAwoA
wQK8AwoAKwG8AwYAdAZFBAYAsQRFBA4A6wXWAAYAUQRFBAYAnAEjBQYA3ARWBQYAzASKBBIAXwH3
AxIAzQH3AxIARwF1BAYAgQE2BQYAYgRFBAoA5QO8AwoA7AS8AwYAcgNFBAYAJAZFBAYAuwRFBBIA
qgYFBhIANwYFBgYANQRFBAYAogZFBA4ABAXWAA4AnADWAAYA9gBFBAYApQBFBAYAwAafBAAAAAAt
AAAAAAABAAEAAQAQAGoEAQA5AAEAAQAAABAAXQW5BT0AAQAFAAABEAD1BbkFYQADAAkAAwEAAFQG
AABJAAQADAARAFYE7wARABsB8wARAHoA9wAGBlUA+wBWgEQG/gBWgPsA/gBQIAAAAACGAHAEBgAB
AGQiAAAAAIEAlwACAQEAACMAAAAAgQCKAAgBAwCcIwAAAACGGBYFBgAEAKQjAAAAAIMYFgUGAAQA
rCMAAAAAkwjYBA0BBADYIwAAAACTCAMBEgEEAN8jAAAAAJMIDwEXAQQA5yMAAAAAlgiHBh0BBQDu
IwAAAACGGBYFBgAFAPYjAAAAAJEYHAUiAQUAAAABAMkAAAACAC4DAAABAMkAAAABADwDCQAWBQEA
EQAWBQYAGQAWBQoAKQAWBRAAMQAWBRAAOQAWBRAAQQAWBRAASQAWBRAAUQAWBRAAWQAWBRAAYQAW
BRAAaQAWBQYAmQAWBQYAuQAWBRUAyQAWBQYAcQBMBikA2QBiBi4A6QDRBjMA4QBkAzYAeQBwAz8A
6QCwBkMA6QCBBkgA6QDJBlEA6QBCA1YA6QBtBl0A6QBMBD8A6QByAGMAAQGDA2kA2QCTBgEAEQE2
A3IAeQD+BXcAGQElAHwA6QCLA4EA6QB5A4UA6QBtBosA2QAABZgAIQF0ARAAIQHoBZ4AiQA8BKUA
KQEkA6wAiQCWAwYAIQF7BgYAIQFmABAAKQEaA7gAcQAWBQYAeQAWBQYAMQG3ALwAMQG8BsUAoQAW
BcsAwQAWBQYACAAUAOUACAAYAOoAKQBzAF0BLgALADUBLgATAD4BLgAbAF0BLgAjAGYBLgArAI8B
LgAzAI8BLgA7AJUBLgBDAGYBLgBLAKQBLgBTAI8BLgBbAMQBQwBjAOoASQBzAF0BYQB7AOoAYwBr
AOoAGwCSALEAAwABAAQAAwAAANwEJgEAACMBKwEAAIsGMAECAAYAAwACAAcABQABAAgABQACAAkA
BwAEgAAAAQAAADsah1sAAAAAAAABAAAABAAAAAAAAAAAAAAA0wBdAAAAAAANAAAAAAAAAAAAAADc
AJ0DAAAAAA0AAAAAAAAAAAAAANwANgAAAAAABAAAAAAAAAAAAAAA0wBFBAAAAAAAAAAAAQAAAGcF
AAAFAAIAAAAAAABzdF9iNDc0ZmMyOThmMWI0M2Y3OTgyYjJhOWNkOGRkYzljMABUb0ludDMyADxN
b2R1bGU+AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAG1zY29ybGliAExv
Y2tGb3JSZWFkAFJlcGxhY2UAZGVmYXVsdEluc3RhbmNlAFJlYWRWYXJpYWJsZQBXcml0ZVZhcmlh
YmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAHZhcmlhYmxlTmFtZQBNaWNy
b3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRf
Q3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxp
Y2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAExvY2tGb3JXcml0ZQBDb21w
aWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVn
Z2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRy
aWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRl
AEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmli
dXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmli
dXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0
dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRy
aWJ1dGUAZ2V0X1ZhbHVlAHNldF9WYWx1ZQB2YXJpYWJsZVZhbHVlAHZhbHVlAEluZGV4T2YAU3lz
dGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBGaXJlV2FybmluZwBUb1N0cmluZwBTdWJzdHJpbmcASXNN
YXRjaABnZXRfTGVuZ3RoAFVubG9jawBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWlj
cm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABT
eXN0ZW0uQ29tcG9uZW50TW9kZWwAc3RfYjQ3NGZjMjk4ZjFiNDNmNzk4MmIyYTljZDhkZGM5YzAu
ZGxsAERCTnVsbABnZXRfSXRlbQBTeXN0ZW0AVHJpbQBFbnVtAHJlc291cmNlTWFuAEJvb2xlYW4A
U2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0
ZW0uUmVmbGVjdGlvbgBFeGNlcHRpb24AU3RyaW5nQ29tcGFyaXNvbgBDdWx0dXJlSW5mbwBnZXRf
UmVzb3VyY2VNYW5hZ2VyAEV2ZW50c09iamVjdFdyYXBwZXIAZ2V0X1ZhcmlhYmxlRGlzcGVuc2Vy
AC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJT
ZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAHN0X2I0NzRmYzI5OGYxYjQzZjc5ODJiMmE5Y2Q4ZGRj
OWMwLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBzdF9iNDc0
ZmMyOThmMWI0M2Y3OTgyYjJhOWNkOGRkYzljMC5Qcm9wZXJ0aWVzAEdldFZhcmlhYmxlcwBTZXR0
aW5ncwBFcXVhbHMAU3lzdGVtLlRleHQuUmVndWxhckV4cHJlc3Npb25zAFN0cmluZ1NwbGl0T3B0
aW9ucwBSZWdleE9wdGlvbnMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAZ2V0X0V2ZW50
cwBDb25jYXQAT2JqZWN0AFJlc2V0AFNwbGl0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AENv
bnZlcnQAUmVnZXgAVG9DaGFyQXJyYXkAZ2V0X0Fzc2VtYmx5AElzTnVsbE9yRW1wdHkAAABVVQBz
AGUAcgA6ADoAdgBhAHIAUwBTAEkAUwBPAHAAcwBfAEkAcwBBAG4AeQBWAGEAcgBpAGEAYgBsAGUA
VgBhAGwAdQBlAEMAaABhAG4AZwBlAGQAACtWAGEAcgBpAGEAYgBsAGUAVgBhAGwAdQBlAHMAQwBo
AGEAbgBnAGUAZAAAgK1VAG4AYQBiAGwAZQAgAHQAbwAgAHMAZQB0ACAAdABoAGUAIABVAHMAZQBy
ADoAOgB2AGEAcgBTAFMASQBTAE8AcABzAF8ASQBzAEEAbgB5AFYAYQByAGkAYQBiAGwAZQBWAGEA
bAB1AGUAQwBoAGEAbgBnAGUAZAAgAHYAYQByAGkAYQBiAGwAZQAnAHMAIAB2AGEAbAB1AGUAIAB0
AG8AIAB0AHIAdQBlAC4AASlTAHkAcwB0AGUAbQA6ADoAVgBhAHIAaQBhAGIAbABlAE4AYQBtAGUA
ADtVAHMAZQByADoAOgB2AGEAcgBTAFMASQBTAE8AcABzAF8ARgBpAGwAdABlAHIAZQBkAFYAYQBy
AHMAAAMsAAAFOgA6AAANVQBzAGUAcgA6ADoAAAMqAAAHXAB3ACoAADNVAHMAZQByADoAOgB2AGEA
cgBTAFMASQBTAE8AcABzAF8AQwB1AHIAVgBhAGwAdQBlAAALKgAqACoAKgAqAAArUwB5AHMAdABl
AG0AOgA6AFYAYQByAGkAYQBiAGwAZQBWAGEAbAB1AGUAAENVAHMAZQByADoAOgB2AGEAcgBTAFMA
SQBTAE8AcABzAF8ATQBhAHgAVgBhAHIAQwBoAGEAcgBzAFQAbwBMAG8AZwAAgSUgAC4ALgAuADwA
VgBBAEwAVQBFACAAVABSAFUATgBDAEEAVABFAEQAIAAtACAAQwBoAGEAbgBnAGUAIAB2AGEAbAB1
AGUAIABvAGYAIABbAHYAYQByAFMAUwBJAFMATwBwAHMAXwBNAGEAeABWAGEAcgBDAGgAYQByAHMA
VABvAEwAbwBnAF0AIAB0AG8AIAAtADEAIABpAGYAIAB5AG8AdQAgAHcAYQBuAHQAIAB0AG8AIABs
AG8AZwAgAGYAdQBsAGwAIAB2AGEAbAB1AGUAIAAoAE4AbwB0ACAAcgBlAGMAbwBtAG0AZQBuAGQA
ZQBkACAAZgBvAHIAIABwAGUAcgBmAG8AcgBtAGEAbgBjAGUAIAByAGUAYQBzAG8AbgApAD4AASlW
AGEAcgBpAGEAYgBsAGUAVgBhAGwAdQBlAEMAaABhAG4AZwBlAGQAAC9DAGEAbgAgAG4AbwB0ACAA
bABvAGcAIAB2AGEAbAB1AGUAIABmAG8AcgAgAFsAAANdAAABAHFzAHQAXwBiADQANwA0AGYAYwAy
ADkAOABmADEAYgA0ADMAZgA3ADkAOAAyAGIAMgBhADkAYwBkADgAZABkAGMAOQBjADAALgBQAHIA
bwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAALd9li1nOMNEvDPU8yZtHgkA
BCABAQgDIAABBSABARERBCABAQ4FIAEBEVkNBwoOAg4cHQ4IDg4OCAQgABJtBCAAEnECBg4IIAUB
CA4ODggDIAAOBCAAHQMIIAIdDh0DEXkEAAECDgYgAggOEX0FAAIODg4FIAIODg4IAAMCDg4RgIUE
BhKAiQQgAQIcBAABCBwDIAAIBSACDggIBgADDhwcHAUHAhJFAgUgABKAkQYgAQEQEkUGIAESgJUc
BCABARwGBwMSRQIcAyAAHAgAARKAmRGAnQUgABKAoQcgAgEOEoChCLd6XFYZNOCJCImEXc2AgMyR
BAAAAAAEAQAAAAMGElEDBhJVAwYSEAIGCAMGERQFIAIBDhwEIAEcDgQAABJRBAAAElUFAAEBElUE
AAASEAMAAAEECAASUQQIABJVBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25U
aHJvd3MBCAEAAgAAAAAAKAEAI3N0X2I0NzRmYzI5OGYxYjQzZjc5ODJiMmE5Y2Q4ZGRjOWMwAAAF
AQAAAAAOAQAJTWljcm9zb2Z0AAAfAQAaQ29weXJpZ2h0IEAgTWljcm9zb2Z0IDIwMTgAAEkBABou
TkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBG
cmFtZXdvcmsgNC41AAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VS
ZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGlj
S2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJj
ZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAbDcAAAAAAAAAAAAAhjcAAAAgAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAHg3AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAPgQAAAAAAAAAAAAAPgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAIdbOxoAAAEAh1s7Gj8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBJ4DAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAHoDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAA0AAoAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAE0AaQBjAHIAbwBzAG8AZgB0AAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIA
aQBwAHQAaQBvAG4AAAAAAHMAdABfAGIANAA3ADQAZgBjADIAOQA4AGYAMQBiADQAMwBmADcAOQA4
ADIAYgAyAGEAOQBjAGQAOABkAGQAYwA5AGMAMAAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8A
bgAAAAAAMQAuADAALgA2ADcAMQA1AC4AMgAzADQAMwAxAAAAAABwACgAAQBJAG4AdABlAHIAbgBh
AGwATgBhAG0AZQAAAHMAdABfAGIANAA3ADQAZgBjADIAOQA4AGYAMQBiADQAMwBmADcAOQA4ADIA
YgAyAGEAOQBjAGQAOABkAGQAYwA5AGMAMAAuAGQAbABsAAAAWgAbAAEATABlAGcAYQBsAEMAbwBw
AHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAATQBpAGMAcgBvAHMAbwBmAHQA
IAAyADAAMQA4AAAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAA
AHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABzAHQAXwBiADQANwA0AGYA
YwAyADkAOABmADEAYgA0ADMAZgA3ADkAOAAyAGIAMgBhADkAYwBkADgAZABkAGMAOQBjADAALgBk
AGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAcwB0AF8AYgA0ADcANABmAGMA
MgA5ADgAZgAxAGIANAAzAGYANwA5ADgAMgBiADIAYQA5AGMAZAA4AGQAZABjADkAYwAwAAAAQgAP
AAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADcAMQA1AC4AMgAzADQA
MwAxAAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2
ADcAMQA1AC4AMgAzADQAMwAxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAJg3AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnVariableValueChanged]\SSISOpsEhObj_Task_OnVariableValueChanged"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{F33C4340-FF7A-4BAC-8385-E79802C3EF5C}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_Task_OnVariableValueChanged"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{FD4092C7-1531-4C59-8065-369CAD340586}"
              SQLTask:SqlStatementSource="EXEC [bix].[usp_SSISOps_Audit_OnVariableValueChanged_67] @ExecutionID=?,@SourceID=?,@VariableName=?,@VariableValue=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="System::VariableName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::varSSISOps_CurValue"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnVariableValueChanged].PrecedenceConstraints[{FC616CE5-34DC-4926-B3CF-5D5A6DAE615C\}]"
          DTS:CreationName=""
          DTS:DTSID="{FC616CE5-34DC-4926-B3CF-5D5A6DAE615C}"
          DTS:From="Package.EventHandlers[OnVariableValueChanged]\SSISOpsEhObj_OnVariableValueChanged_Start"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{FC616CE5-34DC-4926-B3CF-5D5A6DAE615C}"
          DTS:To="Package.EventHandlers[OnVariableValueChanged]\SSISOpsEhObj_Task_OnVariableValueChanged"
          DTS:Value="2" />
      </DTS:PrecedenceConstraints>
    </DTS:EventHandler>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnWarning]"
      DTS:CreationName="OnWarning"
      DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. SSISOps : DON'T CHANGE PREFIX. "
      DTS:DTSID="{D4D0D535-0E2F-4CE1-BEBE-7A612D3E33BA}"
      DTS:EventID="1414744396"
      DTS:EventName="OnWarning"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{BC35D8C3-FDFD-47A3-9CE5-ECD65EC167E4}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
          DTS:DTSID="{A7E5CE51-9E31-460F-B967-BCD9A93358E7}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="varSSISOpsNF_CHECK">
          <DTS:VariableValue
            DTS:DataType="8">{3B00A5E8-DA1E-408E-AC58-1F9F4DD2BDF7}</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnWarning]\SSISOpsEhObj_OnWarning_Start"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{B50FEF46-F8B4-4786-BCEA-C2636EFC92EB}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_OnWarning_Start"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[User::varSSISOps_DisableBIxAuditing]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <ScriptProject
              Name="st_cbfd715759c3480988c1c2c1f9ec79f9"
              VSTAMajorVersion="14"
              VSTAMinorVersion="0"
              Language="CSharp">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("st_cbfd715759c3480988c1c2c1f9ec79f9")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Microsoft")]
[assembly: AssemblyProduct("st_cbfd715759c3480988c1c2c1f9ec79f9")]
[assembly: AssemblyCopyright("Copyright @ Microsoft 2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="st_cbfd715759c3480988c1c2c1f9ec79f9.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{7cbd9b8e-162a-4dc8-a411-b09cdb5ebd81}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>st_cbfd715759c3480988c1c2c1f9ec79f9</RootNamespace>
    <AssemblyName>st_cbfd715759c3480988c1c2c1f9ec79f9</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Namespaces

using System;
using System.Data;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using Microsoft.SqlServer.Dts.Runtime;

#endregion

namespace st_cbfd715759c3480988c1c2c1f9ec79f9
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // Begin BI xPress Code

            // End BI xPress Code

            Dts.TaskResult = (int)ScriptResults.Success;
        }

#region ScriptResults declaration

        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };

#endregion


        private void WriteVariable(string variableName, object variableValue)
        {
            Variables vars = null;
            bool isUnlocked = false;

            try
            {
                Dts.VariableDispenser.LockForWrite(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    vars[variableName].Value = variableValue;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }
        }
        private object ReadVariable(string variableName)
        {
            Variables vars = null;
            bool isUnlocked = false;
            object result;

            try
            {
                Dts.VariableDispenser.LockForRead(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    result = vars[variableName].Value;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }

            return result;
        }

    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>st_cbfd715759c3480988c1c2c1f9ec79f9</msb:CodeName>
		<msb:DisplayName>st_cbfd715759c3480988c1c2c1f9ec79f9</msb:DisplayName>
		<msb:ProjectId>{E59F33C9-428B-4414-BC94-84C833F9B09D}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_cbfd715759c3480988c1c2c1f9ec79f9.csproj"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_cbfd715759c3480988c1c2c1f9ec79f9.Properties.Settings.get_Default():st_cbfd715759c3480988c1c2c1f9ec79f9.Properties.Sett" +
    "ings")]

namespace st_cbfd715759c3480988c1c2c1f9ec79f9.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_cbfd715759c3480988c1c2c1f9ec79f9.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_cbfd715759c3480988c1c2c1f9ec79f9.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_cbfd715759c3480988c1c2c1f9ec79f9.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace st_cbfd715759c3480988c1c2c1f9ec79f9.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("st_cbfd715759c3480988c1c2c1f9ec79f9.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="st_cbfd715759c3480988c1c2c1f9ec79f9.dll">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
gQDrAzIA4QAUAzgAgQBMAwYA2QCgBQYA2QBeABAA4QAKA0QAcQCTBAYAeQCTBAYA6QCnAEgA6QDB
BU8AoQCTBFQAwQCTBAYACAAUAG0ACAAYAHIAKQBzAOUALgALAL0ALgATAMYALgAbAOUALgAjAO4A
LgArABcBLgAzABcBLgA7AB0BLgBDAO4ALgBLACwBLgBTABcBLgBbAEwBQwBjAHIASQBzAOUAYQB7
AHIAYwBrAHIAIAA9AAMAAQAEAAMAAABtBK4AAAATAbMAAACqBbgAAgAGAAMAAgAHAAUAAQAIAAUA
AgAJAAcABIAAAAEAAAA7GohbAAAAAAAAAQAAAAQAAAAAAAAAAAAAAFsAVQAAAAAADQAAAAAAAAAA
AAAAZABTAwAAAAANAAAAAAAAAAAAAABkAC4AAAAAAAQAAAAAAAAAAAAAAFsA9AMAAAAAAAAAAAEA
AADkBAAABQACAAAAAAAAc3RfY2JmZDcxNTc1OWMzNDgwOTg4YzFjMmMxZjllYzc5ZjkAPE1vZHVs
ZT4ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIATG9ja0Zv
clJlYWQAZGVmYXVsdEluc3RhbmNlAFJlYWRWYXJpYWJsZQBXcml0ZVZhcmlhYmxlAFJ1bnRpbWVU
eXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAHZhcmlhYmxlTmFtZQBNaWNyb3NvZnQuU3FsU2Vy
dmVyLkR0cy5SdW50aW1lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNv
dXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGlu
Z3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAExvY2tGb3JXcml0ZQBDb21waWxlckdlbmVyYXRl
ZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1
dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1i
bHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29u
ZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0
aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5
Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3Nl
bWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1Zh
bHVlAHNldF9WYWx1ZQB2YXJpYWJsZVZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25p
bmcAVW5sb2NrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2Vy
dmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25l
bnRNb2RlbABzdF9jYmZkNzE1NzU5YzM0ODA5ODhjMWMyYzFmOWVjNzlmOS5kbGwAZ2V0X0l0ZW0A
U3lzdGVtAEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBT
eXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBFeGNlcHRpb24AQ3VsdHVyZUlu
Zm8AZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfVmFyaWFibGVEaXNwZW5zZXIALmN0b3IALmNjdG9y
AFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3Rl
bS5SZXNvdXJjZXMAc3RfY2JmZDcxNTc1OWMzNDgwOTg4YzFjMmMxZjllYzc5ZjkuUHJvcGVydGll
cy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAHN0X2NiZmQ3MTU3NTljMzQ4MDk4
OGMxYzJjMWY5ZWM3OWY5LlByb3BlcnRpZXMAR2V0VmFyaWFibGVzAFNldHRpbmdzAFN1Y2Nlc3MA
Z2V0X0R0cwBTY3JpcHRSZXN1bHRzAE9iamVjdABSZXNldABnZXRfRGVmYXVsdABzZXRfVGFza1Jl
c3VsdABnZXRfQXNzZW1ibHkAAAAAcXMAdABfAGMAYgBmAGQANwAxADUANwA1ADkAYwAzADQAOAAw
ADkAOAA4AGMAMQBjADIAYwAxAGYAOQBlAGMANwA5AGYAOQAuAFAAcgBvAHAAZQByAHQAaQBlAHMA
LgBSAGUAcwBvAHUAcgBjAGUAcwAAAOM7Cghz4+pBiqhjbgI1vlQABCABAQgDIAABBSABARERBCAB
AQ4FIAEBEVkEIAASaQUHAhJBAgQgABJtBiABARASQQUgARJxHAQgAQEcBgcDEkECHAMgABwGAAES
dRF5BCAAEn0GIAIBDhJ9CLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGElEDBhJVAwYSEAIG
CAMGERQFIAIBDhwEIAEcDgQAABJRBAAAElUFAAEBElUEAAASEAMAAAEECAASUQQIABJVBAgAEhAI
AQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI3N0X2Ni
ZmQ3MTU3NTljMzQ4MDk4OGMxYzJjMWY5ZWM3OWY5AAAFAQAAAAAOAQAJTWljcm9zb2Z0AAAfAQAa
Q29weXJpZ2h0IEAgTWljcm9zb2Z0IDIwMTgAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQu
NQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41AAC0AAAAzsrvvgEA
AACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9u
PTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4
OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0
AAAAUC8AAAAAAAAAAAAAai8AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFwvAAAAAAAAAAAAAAAA
X0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAAD4EAAAAAAAAAAAAAD4ENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQCIWzsaAAABAIhbOxo/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsASeAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAB6AwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAANAAKAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAABNAGkAYwByAG8AcwBvAGYAdAAAAHAAJAABAEYAaQBsAGUARABlAHMA
YwByAGkAcAB0AGkAbwBuAAAAAABzAHQAXwBjAGIAZgBkADcAMQA1ADcANQA5AGMAMwA0ADgAMAA5
ADgAOABjADEAYwAyAGMAMQBmADkAZQBjADcAOQBmADkAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMA
aQBvAG4AAAAAADEALgAwAC4ANgA3ADEANQAuADIAMwA0ADMAMgAAAAAAcAAoAAEASQBuAHQAZQBy
AG4AYQBsAE4AYQBtAGUAAABzAHQAXwBjAGIAZgBkADcAMQA1ADcANQA5AGMAMwA0ADgAMAA5ADgA
OABjADEAYwAyAGMAMQBmADkAZQBjADcAOQBmADkALgBkAGwAbAAAAFoAGwABAEwAZQBnAGEAbABD
AG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgAE0AaQBjAHIAbwBzAG8A
ZgB0ACAAMgAwADEAOAAAAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAA
AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAcwB0AF8AYwBiAGYA
ZAA3ADEANQA3ADUAOQBjADMANAA4ADAAOQA4ADgAYwAxAGMAMgBjADEAZgA5AGUAYwA3ADkAZgA5
AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAHMAdABfAGMAYgBmAGQA
NwAxADUANwA1ADkAYwAzADQAOAAwADkAOAA4AGMAMQBjADIAYwAxAGYAOQBlAGMANwA5AGYAOQAA
AEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgA3ADEANQAuADIA
MwA0ADMAMgAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAw
AC4ANgA3ADEANQAuADIAMwA0ADMAMgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAAB8PwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnWarning]\SSISOpsEhObj_Package_OnWarning"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{F455F498-49FA-47D7-BCCD-D40593911956}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_Package_OnWarning"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{FD4092C7-1531-4C59-8065-369CAD340586}"
              SQLTask:SqlStatementSource="EXEC [bix].[usp_SSISOps_Audit_OnAlert_67] @Scope='Package',@EventType='W',@ExecutionID=?,@SourceID=?,@SourceName=?,@SourceType='UNKNOWN',@MessageCode=?,@MessageDescription=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="System::SourceName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="System::ErrorCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="System::ErrorDescription"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnWarning]\SSISOpsEhObj_Task_OnWarning"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{35687186-F8C8-49F7-A8A9-3B333C5A1C9E}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsEhObj_Task_OnWarning"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{FD4092C7-1531-4C59-8065-369CAD340586}"
              SQLTask:SqlStatementSource="EXEC [bix].[usp_SSISOps_Audit_OnAlert_67] @Scope='Task',@EventType='W',@ExecutionID=?,@SourceID=?,@SourceName=?,@SourceType='UNKNOWN',@MessageCode=?,@MessageDescription=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::SourceID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="System::SourceName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="System::ErrorCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="System::ErrorDescription"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnWarning]\SSISOpsNFObj_UpdateAlertList"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="SSISOpsNF : DON'T CHANGE PREFIX. "
          DTS:Disabled="True"
          DTS:DisableEventHandlers="True"
          DTS:DTSID="{49621AC7-300D-4019-BF19-3EA58A58F3A4}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SSISOpsNFObj_UpdateAlertList">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="st_abee879955134610a38fe4cb7c62c04f"
              VSTAMajorVersion="14"
              VSTAMinorVersion="0"
              Language="CSharp">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_abee879955134610a38fe4cb7c62c04f.Properties.Settings.get_Default():st_abee879955134610a38fe4cb7c62c04f.Properties.Sett" +
    "ings")]

namespace st_abee879955134610a38fe4cb7c62c04f.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[/*
Copyright © 2015 Pragmatic Works Inc.
#####################################################################################################################
LEGAL NOTICE
#####################################################################################################################
THE FOLLOWING SOURCE CODE IS PRODUCED BY PRAGMATIC WORKS INC.
YOU MUST HAVE A VALID LICENSE OF "BI xPRESS" (PRODUCT OF PRAGMATIC WORKS) TO USE/MODIFY THE FOLLOWING SOURCE CODE.

YOU CAN NOT PUBLISH ANY PORTION OF THIS SOURCE CODE WITHOUT WRITTEN PERMISSION OF PRAGMATIC WORKS INC.
##################################################################################################################### 
*/
#region Namespaces

using System;
using System.Data;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using Microsoft.SqlServer.Dts.Runtime;
using System.Net;
using System.Net.Mail;
using System.Collections;

#endregion

namespace st_abee879955134610a38fe4cb7c62c04f
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // Begin BI xPress Code
            UpdateAlertList();
            // End BI xPress Code

            Dts.TaskResult = (int)ScriptResults.Success;
        }

#region ScriptResults declaration

        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };

#endregion

        private const string NotificationFrameworkAlertListVariableName = "User::varSSISOpsNF_AlertList";
        private const string NotificationFrameworkAlertListAllVariableName = "User::varSSISOpsNF_AlertList_All";
        private const string NotificationFrameworkCounter = "User::varSSISOpsNF_Notification_Counter";
        private const string NotificationFrameworkSubComponentName = "BI xPress Notification Framework Send Alert";

        private void UpdateAlertList()
        {
            System.Collections.Hashtable oRuntimeSettings = GetRuntimeSettings();

            string sFilteredAlerts = "|" + oRuntimeSettings["FILTERED_ALERTS"].ToString() + "|";

            string errorCodeValue = ReadVariable("System::ErrorCode").ToString();

            if (sFilteredAlerts.IndexOf("|" + errorCodeValue.ToString() + "|") >= 0)
                return; // Filter This

            string errorDescription = ReadVariable("System::ErrorDescription").ToString();
            string sourceName = ReadVariable("System::SourceName").ToString();
            string sourceId = ReadVariable("System::SourceID").ToString();

            bool isErrorScope = false;

            try
            {
                if (Dts.VariableDispenser.Contains("System::Cancel"))
                    isErrorScope = true;
                else
                    isErrorScope = false;
            }
            catch (Exception)
            {
                isErrorScope = false;
            }

            AlertType alertType = isErrorScope ? AlertType.ErrorAlert : AlertType.WarningAlert;

            int errorCode;

            if (string.IsNullOrEmpty(errorCodeValue) || !int.TryParse(errorCodeValue, out errorCode))
                errorCode = 0;

            AddAlertInfo(errorDescription, errorCode, sourceName, sourceId, alertType);
        }

        private void AddAlertInfo(string alertDescription, int alertCode, string sourceName, string sourceId, AlertType alertType)
        {
            if (string.IsNullOrEmpty(alertDescription))
                alertDescription = "<NO ALERT DESCRIPTION GIVEN>";

            if (string.IsNullOrEmpty(sourceName))
                sourceName = "<NO ALERT SOURCE NAME GIVEN>";

            System.Text.StringBuilder alertListBuilder = new System.Text.StringBuilder();
            System.Text.StringBuilder alertListAllBuilder = new System.Text.StringBuilder();

            AlertInfo alertInfo = new AlertInfo(alertDescription, alertCode, sourceName, sourceId, alertType);

            System.Xml.Serialization.XmlSerializer xmlSerializer = new System.Xml.Serialization.XmlSerializer(typeof(AlertInfo), new Type[] { typeof(AlertType) });

            // Build a flat list of XML AlertInfo elements that don't have to be validated each time we add new node(s).  This will save on processing time but will increase code complexity in the OnPostExecute event handler.
            using (System.IO.StringWriter stringWriter = new System.IO.StringWriter())
            {
                xmlSerializer.Serialize(stringWriter, alertInfo);

                System.Xml.XmlDocument alertInfoDocument = new System.Xml.XmlDocument();

                alertInfoDocument.LoadXml(stringWriter.GetStringBuilder().ToString());

                foreach (System.Xml.XmlNode documentNode in alertInfoDocument.ChildNodes)
                {
                    if (documentNode is System.Xml.XmlDeclaration || documentNode is System.Xml.XmlComment || documentNode is System.Xml.XmlAttribute || string.IsNullOrEmpty(documentNode.OuterXml))
                        continue;

                    string outerXml = documentNode.OuterXml;

                    outerXml = outerXml.Replace("xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"", string.Empty).Replace("xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"", string.Empty);

                    alertListBuilder.Append(outerXml);
                    alertListAllBuilder.Append(outerXml);
                }
            }

            string updatedAlertList = ReadVariable(NotificationFrameworkAlertListVariableName) as string;
            string existingAlertList;

            if (!string.IsNullOrEmpty(updatedAlertList))
                existingAlertList = updatedAlertList + alertListBuilder.ToString();
            else
                existingAlertList = alertListBuilder.ToString();

            WriteVariable(NotificationFrameworkAlertListVariableName, existingAlertList);

            string updatedAlertListAll = ReadVariable(NotificationFrameworkAlertListAllVariableName) as string;
            string existingAlertListAll;

            if (!string.IsNullOrEmpty(updatedAlertListAll))
                existingAlertListAll = updatedAlertListAll + alertListAllBuilder.ToString();
            else
                existingAlertListAll = alertListAllBuilder.ToString();
            
            WriteVariable(NotificationFrameworkAlertListAllVariableName, existingAlertListAll);
        }
        private void SetSetting(string SettingName, object Value, System.Collections.Hashtable runtimeSettings)
        {
            SettingName = SettingName.ToUpper(System.Globalization.CultureInfo.InvariantCulture).Trim();

            if (!runtimeSettings.ContainsKey(SettingName))
                throw new Exception(SettingName + " setting doesn't exist in runtime setting list.");

            runtimeSettings[SettingName] = Value;
        }

        private object GetSetting(string settingName, System.Collections.Hashtable runtimeSettings)
        {
            settingName = settingName.ToUpper(System.Globalization.CultureInfo.InvariantCulture).Trim();

            if (runtimeSettings.ContainsKey(settingName))
                return runtimeSettings[settingName];

            // If key not found then set default 
            switch (settingName)
            {
                case "MAX_NOTIFICATIONS":
                    return 1;
                case "ENABLE_ROWCOUNT_THRESHOLD":
                    return false;
                case "ENABLE_TIME_THRESHOLD":
                    return false;
                case "PRIORITY_MODE":
                    //// DELAYED (After Package) or URGENT (After Task) 
                    return "URGENT";
                case "EMAIL_FORMAT":
                    //// TEXT or HTML 
                    return "TEXT";
                case "SMTP_PORT":
                    //// Default 25 
                    return 25;
                case "SMTP_USESSL":
                    //// Default False
                    return false;
                case "SMTP_UID":
                    return "";
                case "SMTP_PWD":
                    return "";
                case "SMS_EMAILLIST":
                    ////Must be pipe seperated e.g. 66633422@tmobile.net|11223445@tmobile.net .... 
                    return "";
                case "FILTERED_ALERTS":
                    ////Must be pipe seperated e.g. -2344556|-11223445 .... 
                    return "";
                case "NOTIFY_ONERROR":
                    return true;
                case "NOTIFY_ONWARNING":
                    return false;
                case "NOTIFY_ONSUCCESS":
                    return false;
                case "NOTIFY_ONCOMPLETE":
                    return false;
                case "SMS_MAXLENGTH":
                    return 160;
                case "NF_CHECK":
                    return "";
                case "CC_EMAILLIST":
                    return "";
                case "BCC_EMAILLIST":
                    return "";
                case "NOTIFY_USING_EMAIL":
                    return true;
                case "NOTIFY_USING_SMS":
                    return true;
                case "NOTIFY_USING_EVENTLOG":
                    return false;
                case "NOTIFY_USING_LOGFILE":
                    return false;
                case "LOG_FOLDER_PATH":
                    return "C:\\SSIS\\Log";
                case "DELETE_LOG_OLDER_THAN_DAYS":
                    return 5;
                case "USE_CUSTOM_EMAIL_TEMPLATE":
                    return false;
                case "CUSTOM_EMAIL_TEMPLATE_FILEPATH":
                    return "C:\\SSIS\\Config\\NF_EmailTemplate.htm";
                default:
                    return null;
            }
        }

        [Serializable]
        public enum AlertType
        {
            ErrorAlert = 1,
            WarningAlert = 2,
            TimeThresholdAlert = 3,
            RowCountThresholdAlert = 4
        }

        // NOTE : Do not use double quotes {"} and semicolon {;} in the value field. E.g. MAX_NOTIFICATIONS=3;PRIORITY_MODE=URGENT;SMTP_UID=emailuser;SMTP_PWD=xx;@@4e; 
        // In above example SMTP_PWD=xx;@@4e this will cause problem in parsing because password is using {;}. System will consider password xx instead of xx;@@4e. 
        public System.Collections.Hashtable GetRuntimeSettings()
        {
            object otherConfigSettingsVariableValue = ReadVariable("User::varSSISOpsNF_OtherConfigSettings");
            string otherConfigSettings = otherConfigSettingsVariableValue != null ? otherConfigSettingsVariableValue.ToString() : null;

            System.Collections.Hashtable runtimeSettings = new System.Collections.Hashtable();

            // Set Default values
            runtimeSettings.Add("MAX_NOTIFICATIONS", 1);
            runtimeSettings.Add("ENABLE_ROWCOUNT_THRESHOLD", false);
            runtimeSettings.Add("ENABLE_TIME_THRESHOLD", false);
            runtimeSettings.Add("PRIORITY_MODE", "DELAYED");
            runtimeSettings.Add("EMAIL_FORMAT", "HTML");
            runtimeSettings.Add("SMTP_PORT", 25);
            runtimeSettings.Add("SMTP_USESSL", false);
            runtimeSettings.Add("SMTP_UID", string.Empty);
            runtimeSettings.Add("SMTP_PWD", string.Empty);
            runtimeSettings.Add("SMS_EMAILLIST", string.Empty);
            runtimeSettings.Add("FILTERED_ALERTS", string.Empty);
            runtimeSettings.Add("NOTIFY_ONERROR", true);
            runtimeSettings.Add("NOTIFY_ONWARNING", false);
            runtimeSettings.Add("NOTIFY_ONSUCCESS", false);
            runtimeSettings.Add("NOTIFY_ONCOMPLETE", false);
            runtimeSettings.Add("SMS_MAXLENGTH", 160);
            runtimeSettings.Add("CC_EMAILLIST", string.Empty);
            runtimeSettings.Add("BCC_EMAILLIST", string.Empty);
            runtimeSettings.Add("NOTIFY_USING_EMAIL", true);
            runtimeSettings.Add("NOTIFY_USING_SMS", true);
            runtimeSettings.Add("NOTIFY_USING_EVENTLOG", false);
            runtimeSettings.Add("NOTIFY_USING_LOGFILE", false);
            runtimeSettings.Add("LOG_FOLDER_PATH", "C:\\SSIS\\Log");
            runtimeSettings.Add("DELETE_LOG_OLDER_THAN_DAYS", 5);
            runtimeSettings.Add("USE_CUSTOM_EMAIL_TEMPLATE", false);
            runtimeSettings.Add("CUSTOM_EMAIL_TEMPLATE_FILEPATH", "C:\\SSIS\\Config\\NF_EmailTemplate.htm");

            if (!string.IsNullOrEmpty(otherConfigSettings))
            {
                // Parse settings (Setting1=value1;Setting2=value2;Setting3=value3 ...... SettingN=valueN;)

                const string PAIR_SEP = ";";
                const string NAMEVAL_SEP = "=";

                string[] arrNameValue = otherConfigSettings.Split(PAIR_SEP.ToCharArray());

                foreach (string sPair in arrNameValue)
                {
                    string[] arrTemp = sPair.Split(NAMEVAL_SEP.ToCharArray(), 2, StringSplitOptions.RemoveEmptyEntries);

                    try
                    {
                        if (arrTemp.Length >= 2)
                        {
                            string settingName = arrTemp[0];
                            string settingValue = arrTemp[1];

                            switch (settingName.ToUpper().Trim())
                            {
                                case "MAX_NOTIFICATIONS":
                                    runtimeSettings["MAX_NOTIFICATIONS"] = Convert.ToInt32(settingValue);
                                    break;
                                case "ENABLE_ROWCOUNT_THRESHOLD":
                                    runtimeSettings["ENABLE_ROWCOUNT_THRESHOLD"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "ENABLE_TIME_THRESHOLD":
                                    runtimeSettings["ENABLE_TIME_THRESHOLD"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "PRIORITY_MODE":
                                    // DELAYED (After Package) or URGENT (After Task) 
                                    runtimeSettings["PRIORITY_MODE"] = (string)settingValue;
                                    break;
                                case "EMAIL_FORMAT":
                                    // TEXT or HTML 
                                    runtimeSettings["EMAIL_FORMAT"] = (string)settingValue;
                                    break;
                                case "SMTP_PORT":
                                    // Default 25 
                                    runtimeSettings["SMTP_PORT"] = Convert.ToInt32(settingValue);
                                    break;
                                case "SMTP_USESSL":
                                    // Default false
                                    runtimeSettings["SMTP_USESSL"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "SMTP_UID":
                                    runtimeSettings["SMTP_UID"] = (string)settingValue;
                                    break;
                                case "SMTP_PWD":
                                    runtimeSettings["SMTP_PWD"] = (string)settingValue;
                                    break;
                                case "SMS_EMAILLIST":
                                    // Must be pipe seperated e.g. 66633422@tmobile.net|11223445@tmobile.net .... 
                                    runtimeSettings["SMS_EMAILLIST"] = (string)settingValue;
                                    break;
                                case "FILTERED_ALERTS":
                                    ////Must be pipe seperated e.g. -111|-222 .... 
                                    runtimeSettings["FILTERED_ALERTS"] = (string)settingValue;
                                    break;
                                case "NOTIFY_ONERROR":
                                    runtimeSettings["NOTIFY_ONERROR"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_ONWARNING":
                                    runtimeSettings["NOTIFY_ONWARNING"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_ONSUCCESS":
                                    runtimeSettings["NOTIFY_ONSUCCESS"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_ONCOMPLETE":
                                    runtimeSettings["NOTIFY_ONCOMPLETE"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "SMS_MAXLENGTH":
                                    runtimeSettings["SMS_MAXLENGTH"] = Convert.ToInt32(settingValue);
                                    break;
                                case "CC_EMAILLIST":
                                    runtimeSettings["CC_EMAILLIST"] = (string)settingValue;
                                    break;
                                case "BCC_EMAILLIST":
                                    runtimeSettings["BCC_EMAILLIST"] = (string)settingValue;
                                    break;
                                case "NOTIFY_USING_EMAIL":
                                    runtimeSettings["NOTIFY_USING_EMAIL"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_USING_SMS":
                                    runtimeSettings["NOTIFY_USING_SMS"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_USING_EVENTLOG":
                                    runtimeSettings["NOTIFY_USING_EVENTLOG"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "NOTIFY_USING_LOGFILE":
                                    runtimeSettings["NOTIFY_USING_LOGFILE"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "LOG_FOLDER_PATH":
                                    runtimeSettings["LOG_FOLDER_PATH"] = (string)settingValue;
                                    break;
                                case "DELETE_LOG_OLDER_THAN_DAYS":
                                    runtimeSettings["DELETE_LOG_OLDER_THAN_DAYS"] = Convert.ToInt32(settingValue);
                                    break;
                                case "USE_CUSTOM_EMAIL_TEMPLATE":
                                    runtimeSettings["USE_CUSTOM_EMAIL_TEMPLATE"] = Convert.ToBoolean(settingValue);
                                    break;
                                case "CUSTOM_EMAIL_TEMPLATE_FILEPATH":
                                    runtimeSettings["CUSTOM_EMAIL_TEMPLATE_FILEPATH"] = (string)settingValue;
                                    break;
                            }
                        }
                    }
                    catch (Exception ex)
                    {
                        Dts.Events.FireError(0, "BI xPress Notification Framework Event Handler", ex.Message, string.Empty, 0);
                    }
                }
            }

            SetNF(runtimeSettings);

            WriteVariable(NotificationFrameworkCounter, 0);

            return runtimeSettings;
        }

        public void SetNF(Hashtable runtimeSettings)
        {
            runtimeSettings.Add(((Char)78).ToString() + ((Char)70).ToString() + ((Char)95).ToString() + ((Char)67).ToString() + ((Char)72).ToString() + ((Char)69).ToString() + ((Char)67).ToString() + ((Char)75).ToString(), ReadVariable("User::varSSISOpsNF_" + ((Char)67).ToString() + ((Char)72).ToString() + ((Char)69).ToString() + ((Char)67).ToString() + ((Char)75).ToString()));
        }

        [Serializable]
        public class AlertInfo
        {
            /// <summary>
            /// Retained for serialization purposes.
            /// </summary>
            public AlertInfo()
            {
            }

            public AlertInfo(string alertDescription, int alertCode, string sourceName, string sourceId, AlertType alertType)
                : this(alertDescription, alertCode, sourceName, sourceId, alertType, DateTime.Now)
            {
            }

            public AlertInfo(string alertDescription, int alertCode, string sourceName, string sourceId, AlertType alertType, DateTime timeStamp)
            {
                AlertCode = alertCode;
                AlertDescription = alertDescription;
                AlertType = alertType;
                SourceName = sourceName;
                SourceId = sourceId;
                AlertTimeStamp = timeStamp;
            }

            public int AlertCode { get; set; }
            public string AlertDescription { get; set; }
            public DateTime AlertTimeStamp { get; set; }
            public AlertType AlertType { get; set; }
            public string SourceId { get; set; }
            public string SourceName { get; set; }
        }

        private void WriteVariable(string variableName, object variableValue)
        {
            Variables vars = null;
            bool isUnlocked = false;

            try
            {
                Dts.VariableDispenser.LockForWrite(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    vars[variableName].Value = variableValue;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }
        }
        private object ReadVariable(string variableName)
        {
            Variables vars = null;
            bool isUnlocked = false;
            object result;

            try
            {
                Dts.VariableDispenser.LockForRead(variableName);
                Dts.VariableDispenser.GetVariables(ref vars);

                try
                {
                    result = vars[variableName].Value;
                }
                finally
                {
                    if (vars != null)
                    {
                        vars.Unlock();
                        isUnlocked = true;
                    }
                }
            }
            catch (Exception)
            {
                Dts.VariableDispenser.Reset();

                throw;
            }
            finally
            {
                if (vars != null && !isUnlocked)
                    vars.Unlock();
            }

            return result;
        }

    }
}]]></ProjectItem>
              <ProjectItem
                Name="st_abee879955134610a38fe4cb7c62c04f.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{fd32f672-880d-4e77-93a3-f76b90fec538}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>st_abee879955134610a38fe4cb7c62c04f</RootNamespace>
    <AssemblyName>st_abee879955134610a38fe4cb7c62c04f</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>st_abee879955134610a38fe4cb7c62c04f</msb:CodeName>
		<msb:DisplayName>st_abee879955134610a38fe4cb7c62c04f</msb:DisplayName>
		<msb:ProjectId>{C71EE7F3-22A2-4719-9898-F93EE740C186}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_abee879955134610a38fe4cb7c62c04f.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("st_abee879955134610a38fe4cb7c62c04f")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Microsoft")]
[assembly: AssemblyProduct("st_abee879955134610a38fe4cb7c62c04f")]
[assembly: AssemblyCopyright("Copyright @ Microsoft 2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_abee879955134610a38fe4cb7c62c04f.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_abee879955134610a38fe4cb7c62c04f.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="st_abee879955134610a38fe4cb7c62c04f.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace st_abee879955134610a38fe4cb7c62c04f.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("st_abee879955134610a38fe4cb7c62c04f.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="st_abee879955134610a38fe4cb7c62c04f.dll">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
2ggQAGEA2ggQAGkA2ggGANEA2ggGAOEA2ggGAAEB2ggVAHEALAobABEBcwoBAHkA4QYuALkA5gUz
ABkBTQo3ABkBxAU+ABEBXQhDACEB6wlJABkBWQtOACkBnQNTAIkA2ggGADEB7gFyAJEA2gh7AJkA
2ggGAJEAlgWGAEkB2ggGAJkAHAiOAEkBzAYQAKkAfQmTAFEBzAiZAKEAmQqeAKkA1AYzABkBYQui
ABkBWQGlAIkAUgGrAKEACwuxALEAlQMGABkBTQq1APEATAO7ABkBQQjAABkB+gYzAHkANAvGAIEA
2ggQAHkA6gbLABkBTQvVAHkA2ggGAHkAoADLABkBKAvsABkBYQrxABkBYQr4ABkBQQgzAIEBAQAD
AYEBEAdOABEBQgoIAYEAnwEzAIkBtggOAZEB5gUzABkBTQobASEBuwMQACEBuwknAcEA4QYuAZkB
eAU1AcEAIgYGACEBWwoGACEBlAAQAJkBbgWeAHEA2ggGALkA2ggGADEBQAtBAekA2ghHAQkB2ggG
ABkBGgpUARkBFwZZAdkAIAtdAQ4ABAB0AQ4ACACtAQ4ADADuAQ4AEAA9AggAJACUAggAKACZAggA
MACZAggANACeAggAOACjAggAPACoAikAewB7Ay4ACwBTAy4AEwBcAy4AGwB7Ay4AIwCEAy4AKwCt
Ay4AMwCtAy4AOwCzAy4AQwCEAy4ASwDCAy4AUwCtAy4AWwDiA0MAYwCZAkkAewB7A2MAcwCZAqMA
awCZAuEAawCZAgECawCZAiECawCZAkECawCZAmECawCZAoECawCZAqECawCZAsACawCZAuACawCZ
AgADawCZAiADawCZAkADawCZAmADawCZAoADawCZAqADawCZAsADawCZAuADawCZAgAEawCZAiAE
awCZAiEAWgDRANsAFwEhAToBTwEDAAEABAADAAgABAAAADEIMgMAAFkDNwMAAGsKPAMAAIMBQQMA
AKwHRQMAAP4HSQMAAAgDTgMAAIIARQMAABMCRQMCAAwAAwACAA0ABQABAA4ABQACAA8ABwACABYA
CQABABcACQACABgACwABABkACwACABoADQABABsADQACABwADwABAB0ADwACAB4AEQABAB8AEQAC
ACAAEwABACEAEwAEgAAAAQAAADsaiFsAAAAAAACgBQAABAAAAAAAAAAAAAAAYgFoAAAAAAANAAAA
AAAAAAAAAABrASkGAAAAAAQAAAAAAAAAAAAAAGIBwQYAAAAADQAAAAAAAAAAAAAAawFBAAAAAAAE
AAAAAAAAAAAAAABiAfMGAAAAAAAAAAABAAAAKwkAAAYAAgAHAAIACAACAAAAAAAAVG9JbnQzMgA8
TW9kdWxlPgA8UHJpdmF0ZUltcGxlbWVudGF0aW9uRGV0YWlscz4AU2V0TkYAU3lzdGVtLklPAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAG1zY29ybGliAGdldF9Tb3VyY2VJ
ZABzZXRfU291cmNlSWQAc291cmNlSWQATG9ja0ZvclJlYWQAQWRkADxTb3VyY2VJZD5rX19CYWNr
aW5nRmllbGQAPEFsZXJ0Q29kZT5rX19CYWNraW5nRmllbGQAPFNvdXJjZU5hbWU+a19fQmFja2lu
Z0ZpZWxkADxBbGVydFR5cGU+a19fQmFja2luZ0ZpZWxkADxBbGVydERlc2NyaXB0aW9uPmtfX0Jh
Y2tpbmdGaWVsZAA8QWxlcnRUaW1lU3RhbXA+a19fQmFja2luZ0ZpZWxkAEFwcGVuZABSZXBsYWNl
AGRlZmF1bHRJbnN0YW5jZQBnZXRfQWxlcnRDb2RlAHNldF9BbGVydENvZGUAYWxlcnRDb2RlAFht
bE5vZGUAZ2V0X01lc3NhZ2UAUmVhZFZhcmlhYmxlAFdyaXRlVmFyaWFibGUASURpc3Bvc2FibGUA
SGFzaHRhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAGdldF9Tb3VyY2VO
YW1lAHNldF9Tb3VyY2VOYW1lAHNvdXJjZU5hbWUATm90aWZpY2F0aW9uRnJhbWV3b3JrQWxlcnRM
aXN0QWxsVmFyaWFibGVOYW1lAE5vdGlmaWNhdGlvbkZyYW1ld29ya0FsZXJ0TGlzdFZhcmlhYmxl
TmFtZQB2YXJpYWJsZU5hbWUAU2V0dGluZ05hbWUAc2V0dGluZ05hbWUATm90aWZpY2F0aW9uRnJh
bWV3b3JrU3ViQ29tcG9uZW50TmFtZQBEYXRlVGltZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5S
dW50aW1lAGdldF9BbGVydFR5cGUAc2V0X0FsZXJ0VHlwZQBhbGVydFR5cGUARmFpbHVyZQBnZXRf
Q3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAZ2V0X0ludmFyaWFudEN1bHR1cmUA
VlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAERpc3Bv
c2UAVHJ5UGFyc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUATG9ja0ZvcldyaXRlAENvbXBpbGVyR2Vu
ZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0
dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBB
c3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAWG1sQXR0
cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9u
QXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0
QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQ
b2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxp
dHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHNldF9WYWx1ZQB2YXJpYWJsZVZhbHVlAHZhbHVlAFNlcmlh
bGl6ZQBzdF9hYmVlODc5OTU1MTM0NjEwYTM4ZmU0Y2I3YzYyYzA0ZgBJbmRleE9mAFN5c3RlbS5S
dW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcAR2V0U2V0dGluZwBTZXRTZXR0aW5nAENvbXB1dGVT
dHJpbmdIYXNoAGdldF9MZW5ndGgAVW5sb2NrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFz
awBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1v
ZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABzdF9hYmVlODc5OTU1MTM0NjEwYTM4ZmU0Y2I3YzYy
YzA0Zi5kbGwAU3lzdGVtLlhtbABMb2FkWG1sAGdldF9PdXRlclhtbABnZXRfSXRlbQBzZXRfSXRl
bQBTeXN0ZW0AVHJpbQBFbnVtAHJlc291cmNlTWFuAFRvQm9vbGVhbgBTY3JpcHRNYWluAFhtbERl
Y2xhcmF0aW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3Rl
bS5YbWwuU2VyaWFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBFeGNlcHRpb24AZ2V0X0FsZXJ0
RGVzY3JpcHRpb24Ac2V0X0FsZXJ0RGVzY3JpcHRpb24AYWxlcnREZXNjcmlwdGlvbgBDdWx0dXJl
SW5mbwBBZGRBbGVydEluZm8AZ2V0X0FsZXJ0VGltZVN0YW1wAHNldF9BbGVydFRpbWVTdGFtcAB0
aW1lU3RhbXAAQ2hhcgBHZXRTdHJpbmdCdWlsZGVyAGdldF9SZXNvdXJjZU1hbmFnZXIAVG9VcHBl
cgBFdmVudHNPYmplY3RXcmFwcGVyAGdldF9WYXJpYWJsZURpc3BlbnNlcgBTdHJpbmdXcml0ZXIA
VGV4dFdyaXRlcgBOb3RpZmljYXRpb25GcmFtZXdvcmtDb3VudGVyAFhtbFNlcmlhbGl6ZXIARmly
ZUVycm9yAElFbnVtZXJhdG9yAEdldEVudW1lcmF0b3IALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFn
bm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMA
c3RfYWJlZTg3OTk1NTEzNDYxMGEzOGZlNGNiN2M2MmMwNGYuUHJvcGVydGllcy5SZXNvdXJjZXMu
cmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAGdldF9DaGlsZE5vZGVzAHN0X2FiZWU4Nzk5NTUxMzQ2
MTBhMzhmZTRjYjdjNjJjMDRmLlByb3BlcnRpZXMAR2V0VmFyaWFibGVzAEdldFJ1bnRpbWVTZXR0
aW5ncwBydW50aW1lU2V0dGluZ3MAQ29udGFpbnMAU3lzdGVtLkNvbGxlY3Rpb25zAFN0cmluZ1Nw
bGl0T3B0aW9ucwBnZXRfQ2hhcnMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAZ2V0X0V2
ZW50cwBDb25jYXQAT2JqZWN0AFJlc2V0AFNwbGl0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0
AFhtbENvbW1lbnQAWG1sRG9jdW1lbnQAZ2V0X0N1cnJlbnQAVGltZVRocmVzaG9sZEFsZXJ0AFJv
d0NvdW50VGhyZXNob2xkQWxlcnQAV2FybmluZ0FsZXJ0AEVycm9yQWxlcnQAQ29udmVydABYbWxO
b2RlTGlzdABVcGRhdGVBbGVydExpc3QATW92ZU5leHQAU3lzdGVtLlRleHQAZ2V0X05vdwBUb0No
YXJBcnJheQBDb250YWluc0tleQBnZXRfQXNzZW1ibHkAb3BfRXF1YWxpdHkASXNOdWxsT3JFbXB0
eQAAAAN8AAAfRgBJAEwAVABFAFIARQBEAF8AQQBMAEUAUgBUAFMAACNTAHkAcwB0AGUAbQA6ADoA
RQByAHIAbwByAEMAbwBkAGUAADFTAHkAcwB0AGUAbQA6ADoARQByAHIAbwByAEQAZQBzAGMAcgBp
AHAAdABpAG8AbgAAJVMAeQBzAHQAZQBtADoAOgBTAG8AdQByAGMAZQBOAGEAbQBlAAAhUwB5AHMA
dABlAG0AOgA6AFMAbwB1AHIAYwBlAEkARAAAHVMAeQBzAHQAZQBtADoAOgBDAGEAbgBjAGUAbAAA
OTwATgBPACAAQQBMAEUAUgBUACAARABFAFMAQwBSAEkAUABUAEkATwBOACAARwBJAFYARQBOAD4A
ADk8AE4ATwAgAEEATABFAFIAVAAgAFMATwBVAFIAQwBFACAATgBBAE0ARQAgAEcASQBWAEUATgA+
AABZeABtAGwAbgBzADoAeABzAGQAPQAiAGgAdAB0AHAAOgAvAC8AdwB3AHcALgB3ADMALgBvAHIA
ZwAvADIAMAAwADEALwBYAE0ATABTAGMAaABlAG0AYQAiAABreABtAGwAbgBzADoAeABzAGkAPQAi
AGgAdAB0AHAAOgAvAC8AdwB3AHcALgB3ADMALgBvAHIAZwAvADIAMAAwADEALwBYAE0ATABTAGMA
aABlAG0AYQAtAGkAbgBzAHQAYQBuAGMAZQAiAAE5VQBzAGUAcgA6ADoAdgBhAHIAUwBTAEkAUwBP
AHAAcwBOAEYAXwBBAGwAZQByAHQATABpAHMAdAAAQVUAcwBlAHIAOgA6AHYAYQByAFMAUwBJAFMA
TwBwAHMATgBGAF8AQQBsAGUAcgB0AEwAaQBzAHQAXwBBAGwAbAAAXyAAcwBlAHQAdABpAG4AZwAg
AGQAbwBlAHMAbgAnAHQAIABlAHgAaQBzAHQAIABpAG4AIAByAHUAbgB0AGkAbQBlACAAcwBlAHQA
dABpAG4AZwAgAGwAaQBzAHQALgABI00AQQBYAF8ATgBPAFQASQBGAEkAQwBBAFQASQBPAE4AUwAA
M0UATgBBAEIATABFAF8AUgBPAFcAQwBPAFUATgBUAF8AVABIAFIARQBTAEgATwBMAEQAACtFAE4A
QQBCAEwARQBfAFQASQBNAEUAXwBUAEgAUgBFAFMASABPAEwARAAAG1AAUgBJAE8AUgBJAFQAWQBf
AE0ATwBEAEUAABlFAE0AQQBJAEwAXwBGAE8AUgBNAEEAVAAAE1MATQBUAFAAXwBQAE8AUgBUAAAX
UwBNAFQAUABfAFUAUwBFAFMAUwBMAAARUwBNAFQAUABfAFUASQBEAAARUwBNAFQAUABfAFAAVwBE
AAAbUwBNAFMAXwBFAE0AQQBJAEwATABJAFMAVAAAHU4ATwBUAEkARgBZAF8ATwBOAEUAUgBSAE8A
UgAAIU4ATwBUAEkARgBZAF8ATwBOAFcAQQBSAE4ASQBOAEcAACFOAE8AVABJAEYAWQBfAE8ATgBT
AFUAQwBDAEUAUwBTAAAjTgBPAFQASQBGAFkAXwBPAE4AQwBPAE0AUABMAEUAVABFAAAbUwBNAFMA
XwBNAEEAWABMAEUATgBHAFQASAAAEU4ARgBfAEMASABFAEMASwAAGUMAQwBfAEUATQBBAEkATABM
AEkAUwBUAAAbQgBDAEMAXwBFAE0AQQBJAEwATABJAFMAVAAAJU4ATwBUAEkARgBZAF8AVQBTAEkA
TgBHAF8ARQBNAEEASQBMAAAhTgBPAFQASQBGAFkAXwBVAFMASQBOAEcAXwBTAE0AUwAAK04ATwBU
AEkARgBZAF8AVQBTAEkATgBHAF8ARQBWAEUATgBUAEwATwBHAAApTgBPAFQASQBGAFkAXwBVAFMA
SQBOAEcAXwBMAE8ARwBGAEkATABFAAAfTABPAEcAXwBGAE8ATABEAEUAUgBfAFAAQQBUAEgAADVE
AEUATABFAFQARQBfAEwATwBHAF8ATwBMAEQARQBSAF8AVABIAEEATgBfAEQAQQBZAFMAADNVAFMA
RQBfAEMAVQBTAFQATwBNAF8ARQBNAEEASQBMAF8AVABFAE0AUABMAEEAVABFAAA9QwBVAFMAVABP
AE0AXwBFAE0AQQBJAEwAXwBUAEUATQBQAEwAQQBUAEUAXwBGAEkATABFAFAAQQBUAEgAAA1VAFIA
RwBFAE4AVAAACVQARQBYAFQAAAEAF0MAOgBcAFMAUwBJAFMAXABMAG8AZwAAR0MAOgBcAFMAUwBJ
AFMAXABDAG8AbgBmAGkAZwBcAE4ARgBfAEUAbQBhAGkAbABUAGUAbQBwAGwAYQB0AGUALgBoAHQA
bQAATVUAcwBlAHIAOgA6AHYAYQByAFMAUwBJAFMATwBwAHMATgBGAF8ATwB0AGgAZQByAEMAbwBu
AGYAaQBnAFMAZQB0AHQAaQBuAGcAcwAAD0QARQBMAEEAWQBFAEQAAAlIAFQATQBMAAADOwAAAz0A
AF1CAEkAIAB4AFAAcgBlAHMAcwAgAE4AbwB0AGkAZgBpAGMAYQB0AGkAbwBuACAARgByAGEAbQBl
AHcAbwByAGsAIABFAHYAZQBuAHQAIABIAGEAbgBkAGwAZQByAABPVQBzAGUAcgA6ADoAdgBhAHIA
UwBTAEkAUwBPAHAAcwBOAEYAXwBOAG8AdABpAGYAaQBjAGEAdABpAG8AbgBfAEMAbwB1AG4AdABl
AHIAACdVAHMAZQByADoAOgB2AGEAcgBTAFMASQBTAE8AcABzAE4ARgBfAABxcwB0AF8AYQBiAGUA
ZQA4ADcAOQA5ADUANQAxADMANAA2ADEAMABhADMAOABmAGUANABjAGIANwBjADYAMgBjADAANABm
AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAA5nRXh1bDwk6AWpGU
2W12ygAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERfQUgABKAiQwHCBI9Dg4ODgIRHAgEIAEcHAMg
AA4GAAMODg4OBCABCA4FIAASgJEEIAECDgQAAQIOBgACAg4QCBcHDRJFEkUSIBJJDg4ODhJNElES
VQ4SWQgAARKAmRGAnQogAgESgJkdEoCZByACARKAoRwEIAASRQUgABKAqQQgABJRAyAAHAIGDgUg
Ag4ODgUgARJFDgMgAAIFAAIODg4EAAASeQUgAQ4SeQQgAQIcBSACARwcAwcBCQUAAgIODhAHChwO
Ej0dDggdDg4OCRJBBCAAHQMGIAEdDh0DCiADHQ4dAwgRgL0EAAEIDgUgABKAxQggBQIIDg4OCAMH
AQMFAAEOHQ4FBwISYQIGIAEBEBJhBiABEoDNHAQgAQEcBgcDEmECHAUgABKA0QcgAgEOEoDRBAcC
CQgEIAEDCAMgAAgEAAARbQi3elxWGTTgiQiJhF3NgIDMkThVAHMAZQByADoAOgB2AGEAcgBTAFMA
SQBTAE8AcABzAE4ARgBfAEEAbABlAHIAdABMAGkAcwB0AEBVAHMAZQByADoAOgB2AGEAcgBTAFMA
SQBTAE8AcABzAE4ARgBfAEEAbABlAHIAdABMAGkAcwB0AF8AQQBsAGwATlUAcwBlAHIAOgA6AHYA
YQByAFMAUwBJAFMATwBwAHMATgBGAF8ATgBvAHQAaQBmAGkAYwBhAHQAaQBvAG4AXwBDAG8AdQBu
AHQAZQByAFZCAEkAIAB4AFAAcgBlAHMAcwAgAE4AbwB0AGkAZgBpAGMAYQB0AGkAbwBuACAARgBy
AGEAbQBlAHcAbwByAGsAIABTAGUAbgBkACAAQQBsAGUAcgB0AAQAAAAABAEAAAAEAgAAAAQDAAAA
BAQAAAADBhJ1AwYSeQMGEhACBggDBhEYAwYRHAMGEW0JIAUBDggODhEcByADAQ4cEj0GIAIcDhI9
BCAAEj0FIAEBEj0FIAIBDhwEIAEcDgQAABJ1BQABARJ5BAAAEhADAAABBAABCQ4LIAYBDggODhEc
EW0EIAARbQUgAQERbQQgABEcBSABAREcBAgAEnUECAASeQQIABIQAygACAMoAA4EKAARbQQoABEc
CAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNzdF9h
YmVlODc5OTU1MTM0NjEwYTM4ZmU0Y2I3YzYyYzA0ZgAABQEAAAAADgEACU1pY3Jvc29mdAAAHwEA
GkNvcHlyaWdodCBAIE1pY3Jvc29mdCAyMDE4AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0
LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNbQAAADOyu++AQAA
AJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249
NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5
I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQA
AACcVwAAAAAAAAAAAAC2VwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqFcAAAAAAAAAAAAAAABf
Q29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAA
AAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAA+BAAAAAAAAAAA
AAA+BDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEAiFs7
GgAAAQCIWzsaPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUA
SQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEngMAAAEAUwB0
AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAegMAAAEAMAAwADAAMAAwADQAYgAwAAAAGgABAAEA
QwBvAG0AbQBlAG4AdABzAAAAAAAAADQACgABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAATQBp
AGMAcgBvAHMAbwBmAHQAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
cwB0AF8AYQBiAGUAZQA4ADcAOQA5ADUANQAxADMANAA2ADEAMABhADMAOABmAGUANABjAGIANwBj
ADYAMgBjADAANABmAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYA
NwAxADUALgAyADMANAAzADIAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAcwB0
AF8AYQBiAGUAZQA4ADcAOQA5ADUANQAxADMANAA2ADEAMABhADMAOABmAGUANABjAGIANwBjADYA
MgBjADAANABmAC4AZABsAGwAAABaABsAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABD
AG8AcAB5AHIAaQBnAGgAdAAgAEAAIABNAGkAYwByAG8AcwBvAGYAdAAgADIAMAAxADgAAAAAACoA
AQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBp
AG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAHMAdABfAGEAYgBlAGUAOAA3ADkAOQA1ADUAMQAzADQA
NgAxADAAYQAzADgAZgBlADQAYwBiADcAYwA2ADIAYwAwADQAZgAuAGQAbABsAAAAaAAkAAEAUABy
AG8AZAB1AGMAdABOAGEAbQBlAAAAAABzAHQAXwBhAGIAZQBlADgANwA5ADkANQA1ADEAMwA0ADYA
MQAwAGEAMwA4AGYAZQA0AGMAYgA3AGMANgAyAGMAMAA0AGYAAABCAA8AAQBQAHIAbwBkAHUAYwB0
AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYANwAxADUALgAyADMANAAzADIAAAAAAEYADwABAEEA
cwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYANwAxADUALgAyADMANAAz
ADIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAMAAAAyDcAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnWarning].PrecedenceConstraints[{3BCFAC4A-EEE6-4BDB-B4F6-728260168189\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{3BCFAC4A-EEE6-4BDB-B4F6-728260168189}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceID]==@[System::PackageID] &amp;&amp; @[System::SourceName]==@[System::PackageName] &amp;&amp; SUBSTRING(@[System::SourceName], 1, 12)!=&quot;SSISOpsEhObj&quot; &amp;&amp; @[User::varSSISOps_DisableBIxAuditing]==false"
          DTS:From="Package.EventHandlers[OnWarning]\SSISOpsEhObj_OnWarning_Start"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{3BCFAC4A-EEE6-4BDB-B4F6-728260168189}"
          DTS:To="Package.EventHandlers[OnWarning]\SSISOpsEhObj_Package_OnWarning"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnWarning].PrecedenceConstraints[{8D92F498-CBAF-43A9-B0A2-EFE51A8198BB\}]"
          DTS:CreationName=""
          DTS:Description="SSISOps : DON'T CHANGE PREFIX. "
          DTS:DTSID="{8D92F498-CBAF-43A9-B0A2-EFE51A8198BB}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceID]!=@[System::PackageID] &amp;&amp; @[System::SourceName]!=@[System::PackageName] &amp;&amp; SUBSTRING(@[System::SourceName], 1, 12)!=&quot;SSISOpsEhObj&quot; &amp;&amp; @[User::varSSISOps_DisableBIxAuditing]==false"
          DTS:From="Package.EventHandlers[OnWarning]\SSISOpsEhObj_OnWarning_Start"
          DTS:LogicalAnd="True"
          DTS:ObjectName="{8D92F498-CBAF-43A9-B0A2-EFE51A8198BB}"
          DTS:To="Package.EventHandlers[OnWarning]\SSISOpsEhObj_Task_OnWarning"
          DTS:Value="2" />
      </DTS:PrecedenceConstraints>
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph" xmlns:mssge="clr-namespace:Microsoft.SqlServer.Graph.Extended;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
        <NodeLayout
          Size="217,42"
          Id="Package\Completion (Audit)\Mark Job As Complete in Job"
          TopLeft="16,23" />
        <NodeLayout
          Size="256,42"
          Id="Package\Completion (Audit)\Mark Job as Complete in JobInstance"
          TopLeft="253,23" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="518,123"
          Size="518,166"
          Id="Package\Completion (Audit)"
          TopLeft="433.714288468264,1910.65882751043" />
        <NodeLayout
          Size="223,42"
          Id="Package\Determine IF Init vs Incr Load"
          TopLeft="592.7142856413,886.645100369339" />
        <NodeLayout
          Size="286,42"
          Id="Package\Get LastRecordsProcessedDate For Package"
          TopLeft="567.428581023703,808.200003646402" />
        <NodeLayout
          Size="161,42"
          Id="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load"
          TopLeft="5.5,5.5" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="363,103"
          Size="363,146"
          Id="Package\Incremental Load from EDW_STAGE  to Subcontracting"
          TopLeft="851.42857136775,1011.49215992" />
        <NodeLayout
          Size="336,42"
          Id="Package\Initial Load from EDW_STAGE  to ItemPlanning\Detect index and prepare drop and create index script"
          TopLeft="15.5,212.5" />
        <NodeLayout
          Size="160,42"
          Id="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load"
          TopLeft="129,418.5" />
        <NodeLayout
          Size="134,42"
          Id="Package\Initial Load from EDW_STAGE  to ItemPlanning\Drop Index"
          TopLeft="57.3571431782781,310.664705856614" />
        <NodeLayout
          Size="226,42"
          Id="Package\Initial Load from EDW_STAGE  to ItemPlanning\ExSQL Delete Duplicated Rows"
          TopLeft="90.5000000000001,517.5" />
        <NodeLayout
          Size="152,42"
          Id="Package\Initial Load from EDW_STAGE  to ItemPlanning\Recreate Index"
          TopLeft="124.5,619.5" />
        <NodeLayout
          Size="153,42"
          Id="Package\Initial Load from EDW_STAGE  to ItemPlanning\Truncate Target Table Beforehand\Truncate_Items"
          TopLeft="55.9285720489463,24.2647060753977" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="302,122"
          Size="302,165"
          Id="Package\Initial Load from EDW_STAGE  to ItemPlanning\Truncate Target Table Beforehand"
          TopLeft="37.2142856753602,20.9000001458561" />
        <EdgeLayout
          Id="Package\Initial Load from EDW_STAGE  to ItemPlanning.PrecedenceConstraints[Constraint]"
          TopLeft="126.595238255806,254.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,56.1647058566141"
              Start="0,0"
              End="0,48.6647058566141">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,48.6647058566141" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,16.332352928307,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Initial Load from EDW_STAGE  to ItemPlanning.PrecedenceConstraints[Constraint 1]"
          TopLeft="124.357143178278,352.664705856614">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="59.3095234883886,65.835294143386"
              Start="0,0"
              End="59.3095234883886,58.335294143386">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.1100757287442" />
                  <mssgle:CubicBezierSegment
                    Point1="0,35.1100757287442"
                    Point2="0,39.1100757287442"
                    Point3="4,39.1100757287442" />
                  <mssgle:LineSegment
                    End="55.3095234883886,39.1100757287442" />
                  <mssgle:CubicBezierSegment
                    Point1="55.3095234883886,39.1100757287442"
                    Point2="59.3095234883886,39.1100757287442"
                    Point3="59.3095234883886,43.1100757287442" />
                  <mssgle:LineSegment
                    End="59.3095234883886,58.335294143386" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Initial Load from EDW_STAGE  to ItemPlanning.PrecedenceConstraints[Constraint 2]"
          TopLeft="236.25,254.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,164"
              Start="0,0"
              End="0,156.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,156.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,70.25,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Initial Load from EDW_STAGE  to ItemPlanning.PrecedenceConstraints[Constraint 3]"
          TopLeft="206.25,460.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,57"
              Start="0,0"
              End="0,49.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,49.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Initial Load from EDW_STAGE  to ItemPlanning.PrecedenceConstraints[Constraint 4]"
          TopLeft="202,559.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,18.25,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Initial Load from EDW_STAGE  to ItemPlanning.PrecedenceConstraints[Constraint 5]"
          TopLeft="185.85714283768,185.900000145856">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,26.5999998541439"
              Start="0,0"
              End="0,19.0999998541439">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.0999998541439" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="377,717"
          Size="377,760"
          Id="Package\Initial Load from EDW_STAGE  to ItemPlanning"
          TopLeft="218.92857136775,1009.49215992" />
        <NodeLayout
          Size="223,42"
          Id="Package\Initialization\Validate Connection Managers"
          TopLeft="66,29" />
        <ContainerLayout
          HeaderHeight="43.2"
          IsExpanded="True"
          PanelSize="318,162"
          Size="318,205"
          Id="Package\Initialization"
          TopLeft="632.42857143587,213.056864463911" />
        <NodeLayout
          Size="385,42"
          Id="Package\Initialization  Audit\Execute cmd shell and retrieve environment variable information"
          TopLeft="5.50000000000006,413.5" />
        <NodeLayout
          Size="161,42"
          Id="Package\Initialization  Audit\Log Environment"
          TopLeft="120.5,515.5" />
        <NodeLayout
          Size="273,42"
          Id="Package\Initialization  Audit\Log Processed  Table JobInstanceSource"
          TopLeft="61.5000000000001,311.5" />
        <NodeLayout
          Size="162,42"
          Id="Package\Initialization  Audit\Populate ETLUser"
          TopLeft="116,5.5" />
        <NodeLayout
          Size="155,42"
          Id="Package\Initialization  Audit\Populate Joblog"
          TopLeft="120.5,107.5" />
        <NodeLayout
          Size="208,42"
          Id="Package\Initialization  Audit\Populate new Job Instance"
          TopLeft="94,209.5" />
        <EdgeLayout
          Id="Package\Initialization  Audit.PrecedenceConstraints[Constraint]"
          TopLeft="197.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Initialization  Audit.PrecedenceConstraints[Constraint 1]"
          TopLeft="198,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Initialization  Audit.PrecedenceConstraints[Constraint 2]"
          TopLeft="198,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Initialization  Audit.PrecedenceConstraints[Constraint 3]"
          TopLeft="198,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Initialization  Audit.PrecedenceConstraints[Constraint 4]"
          TopLeft="199.5,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="False"
          PanelSize="396,612"
          Size="396,43"
          Id="Package\Initialization  Audit"
          TopLeft="576.92857136775,561.65882751043" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="774.92857136775,604.65882751043">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-64.499990344047,203.541176135972"
              Start="0,0"
              End="-64.499990344047,196.041176135972">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,97.770588067986" />
                  <mssgle:CubicBezierSegment
                    Point1="0,97.770588067986"
                    Point2="0,101.770588067986"
                    Point3="-4,101.770588067986" />
                  <mssgle:LineSegment
                    End="-60.499990344047,101.770588067986" />
                  <mssgle:CubicBezierSegment
                    Point1="-60.499990344047,101.770588067986"
                    Point2="-64.499990344047,101.770588067986"
                    Point3="-64.499990344047,105.770588067986" />
                  <mssgle:LineSegment
                    End="-64.499990344047,196.041176135972" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="791.42857143587,418.056864463911">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-16.50000006812,143.601963046519"
              Start="0,0"
              End="-16.50000006812,136.101963046519">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,67.8009815232595" />
                  <mssgle:CubicBezierSegment
                    Point1="0,67.8009815232595"
                    Point2="0,71.8009815232595"
                    Point3="-4,71.8009815232595" />
                  <mssgle:LineSegment
                    End="-12.50000006812,71.8009815232595" />
                  <mssgle:CubicBezierSegment
                    Point1="-12.50000006812,71.8009815232595"
                    Point2="-16.50000006812,71.8009815232595"
                    Point3="-16.50000006812,75.8009815232595" />
                  <mssgle:LineSegment
                    End="-16.50000006812,136.101963046519" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="668.380952307967,928.645100369339">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-260.952380940217,80.8470595506609"
              Start="0,0"
              End="-260.952380940217,73.3470595506609">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.6843856064114" />
                  <mssgle:CubicBezierSegment
                    Point1="0,28.6843856064114"
                    Point2="0,32.6843856064114"
                    Point3="-4,32.6843856064114" />
                  <mssgle:LineSegment
                    End="-256.952380940217,32.6843856064114" />
                  <mssgle:CubicBezierSegment
                    Point1="-256.952380940217,32.6843856064114"
                    Point2="-260.952380940217,32.6843856064114"
                    Point3="-260.952380940217,36.6843856064114" />
                  <mssgle:LineSegment
                    End="-260.952380940217,73.3470595506609" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-138.476190470108,37.6843856064114,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="740.180952307967,928.245100369339">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="292.847619059783,83.2470595506609"
              Start="0,0"
              End="292.847619059783,75.7470595506609">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.6543272774202" />
                  <mssgle:CubicBezierSegment
                    Point1="0,29.6543272774202"
                    Point2="0,33.6543272774202"
                    Point3="4,33.6543272774202" />
                  <mssgle:LineSegment
                    End="288.847619059783,33.6543272774202" />
                  <mssgle:CubicBezierSegment
                    Point1="288.847619059783,33.6543272774202"
                    Point2="292.847619059783,33.6543272774202"
                    Point3="292.847619059783,37.6543272774202" />
                  <mssgle:LineSegment
                    End="292.847619059783,75.7470595506609" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="138.423809529892,38.6543272774202,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="707.321433332502,850.200003646402">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,36.4450967229369"
              Start="0,0"
              End="0,28.9450967229369">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.9450967229369" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="407.42857136775,1769.49215992">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="200.285717100514,141.16666759043"
              Start="0,0"
              End="200.285717100514,133.66666759043">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,80.4391845402341" />
                  <mssgle:CubicBezierSegment
                    Point1="0,80.4391845402341"
                    Point2="0,84.4391845402341"
                    Point3="4,84.4391845402341" />
                  <mssgle:LineSegment
                    End="196.285717100514,84.4391845402341" />
                  <mssgle:CubicBezierSegment
                    Point1="196.285717100514,84.4391845402341"
                    Point2="200.285717100514,84.4391845402341"
                    Point3="200.285717100514,88.4391845402341" />
                  <mssgle:LineSegment
                    End="200.285717100514,133.66666759043" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="1033.02857136775,1157.89215992">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-255.047616232819,752.76666759043"
              Start="0,0"
              End="-255.047616232819,745.26666759043">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,446.270277475629" />
                  <mssgle:CubicBezierSegment
                    Point1="0,446.270277475629"
                    Point2="0,450.270277475629"
                    Point3="-4,450.270277475629" />
                  <mssgle:LineSegment
                    End="-251.047616232819,450.270277475629" />
                  <mssgle:CubicBezierSegment
                    Point1="-251.047616232819,450.270277475629"
                    Point2="-255.047616232819,450.270277475629"
                    Point3="-255.047616232819,454.270277475629" />
                  <mssgle:LineSegment
                    End="-255.047616232819,745.26666759043" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="Only run Initial Load if Target Table&#xA;has 0 rows. "
          ParentId="Package"
          Size="284,51"
          Id="b5f67b14-d7b2-450d-8161-382deb896830"
          TopLeft="308.314286492795,853.588237327523">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.25"
              Color="#FFFFFFFF">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="PACKAGE: InternalInboundERPLNItemSubcontractingIncr&#xA;PURPOSE: LOADING DATA FROM ttcibd001100USLV-BIDBDEV EDW_STAGE TO  LN.ITEMS Table USLV-BIDBDEV EDW_STAGE&#xA;Source: EDW_STAGE (USLV-BIDBDev) Destination: EDW_STAGE (USLV-BIDBDev)&#xA;Frequency: Nightly and On Demand Volume&#xA;Solution Name: InboundERPLNEDWSTAGEProductLoad&#xA;Master Package Name: InternalInboundERPLNEDWSTAGEProductLoadMaster Package Name: InternalInboundERPLNItemsIncr&#xA;"
          ParentId="Package"
          Size="658,119"
          Id="d98952a7-e4e2-4d80-b731-11f572abdb23"
          TopLeft="909.000012874604,74.105884618">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.25"
              Color="#FFFFFFFF">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnError]\SSISOpsEhObj_OnError_Start"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnError]\SSISOpsEhObj_Package_OnError"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnError]\SSISOpsEhObj_Task_OnError"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnError]\SSISOpsNFObj_UpdateAlertList"
          TopLeft="NaN,NaN" />
        <EdgeLayout
          Id="Package.EventHandlers[OnError].PrecedenceConstraints[{028FBDA7-7FD0-493C-95C6-F1007DFFB48D\}]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="{x:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <x:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.EventHandlers[OnError].PrecedenceConstraints[{E17F5CE7-AAA9-4FDB-BD46-6561FB8BF67D\}]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="{x:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <x:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_14C0747143F3468E85B149B3D7799974_1"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_14C0747143F3468E85B149B3D7799974_2"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_14C0747143F3468E85B149B3D7799974_3"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_47812213D9C7424D9EBEF3F6B6D1B048_1"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_47812213D9C7424D9EBEF3F6B6D1B048_2"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_SSISOpsScript"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_Start"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_Task_BuildVariablesUsingExpressionsQuery"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_OnPostExecute_Task_LogVariablesUsingExpressions"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_Package_OnPostExecute"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_Package_OnPostExecute_LogConnectionManagers"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPostExecute]\SSISOpsEhObj_Task_OnPostExecute"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPostExecute]\SSISOpsNFObj_SendAlert"
          TopLeft="NaN,NaN" />
        <EdgeLayout
          Id="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{03EDA4F3-0A0F-4F4E-8C19-B3D7C3D16E54\}]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="{x:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <x:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{0A56F804-DC58-46CB-AEEA-E892B747C05B\}]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="{x:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <x:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{1453022C-55AB-4E36-9F17-3918C5277754\}]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="{x:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <x:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{450EB9D0-86A6-49E6-8444-8DD858AC691E\}]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="{x:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <x:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{55781AB0-12F0-4FD1-8006-102C6534F501\}]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="{x:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <x:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{60DE18D9-FA20-4BA3-99EC-13BBAF39E73F\}]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="{x:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <x:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{619FDF33-351F-4F0C-9AF9-52F4AD70A0AA\}]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="{x:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <x:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{69FB44B6-A735-42A4-972A-778641D49CA7\}]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="{x:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <x:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{9D32D021-943C-46D7-BF80-07F7FF73D0BE\}]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="{x:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <x:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{CF3C5CDF-9EB5-4D16-8CEE-6FD431C510F5\}]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="{x:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <x:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[{D5688F82-B648-47B5-A093-EBC8CECD59D4\}]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="{x:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <x:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnPreExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPreExecute]\SSISOpsEhObj_OnPreExecute_Start"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPreExecute]\SSISOpsEhObj_Package_OnPreExecute"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnPreExecute]\SSISOpsEhObj_Task_OnPreExecute"
          TopLeft="NaN,NaN" />
        <EdgeLayout
          Id="Package.EventHandlers[OnPreExecute].PrecedenceConstraints[{494DA0A7-3175-46EB-ADBE-0713DFA90848\}]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="{x:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <x:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.EventHandlers[OnPreExecute].PrecedenceConstraints[{4D025126-CB1B-498E-A3BE-15244B456FE1\}]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="{x:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <x:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnVariableValueChanged]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnVariableValueChanged]\SSISOpsEhObj_OnVariableValueChanged_Start"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnVariableValueChanged]\SSISOpsEhObj_Task_OnVariableValueChanged"
          TopLeft="NaN,NaN" />
        <EdgeLayout
          Id="Package.EventHandlers[OnVariableValueChanged].PrecedenceConstraints[{FC616CE5-34DC-4926-B3CF-5D5A6DAE615C\}]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="{x:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <x:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnWarning]">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnWarning]\SSISOpsEhObj_OnWarning_Start"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnWarning]\SSISOpsEhObj_Package_OnWarning"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnWarning]\SSISOpsEhObj_Task_OnWarning"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnWarning]\SSISOpsNFObj_UpdateAlertList"
          TopLeft="NaN,NaN" />
        <EdgeLayout
          Id="Package.EventHandlers[OnWarning].PrecedenceConstraints[{3BCFAC4A-EEE6-4BDB-B4F6-728260168189\}]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="{x:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <x:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.EventHandlers[OnWarning].PrecedenceConstraints[{8D92F498-CBAF-43A9-B0A2-EFE51A8198BB\}]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="{x:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <x:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <TaskHost
    design-time-name="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="150,42"
          Id="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source"
          TopLeft="113,5.5" />
        <NodeLayout
          Size="227,42"
          Id="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Concatenate Rejected Columns"
          TopLeft="74.5000000000001,617.5" />
        <NodeLayout
          Size="346,42"
          Id="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Insert Redirected or Rejected Rows to Exception Table"
          TopLeft="15.0000000000001,1025.5" />
        <NodeLayout
          Size="172,42"
          Id="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\SRC OLE DB Source"
          TopLeft="102,107.5" />
        <NodeLayout
          Size="262,42"
          Id="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Get Total Inserted Records Row Count"
          TopLeft="57,209.5" />
        <NodeLayout
          Size="209,42"
          Id="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Error Output Description"
          TopLeft="83.5000000000001,515.5" />
        <NodeLayout
          Size="210,42"
          Id="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\DEST TF Upsert Destination"
          TopLeft="83.0000000000001,311.5" />
        <NodeLayout
          Size="249,42"
          Id="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\RowCount - Get TotalRejectedRows"
          TopLeft="63.5000000000001,821.5" />
        <NodeLayout
          Size="198,42"
          Id="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Add JobInstance Column"
          TopLeft="89.0000000000001,719.5" />
        <NodeLayout
          Size="181,42"
          Id="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\TF Upsert Destination"
          TopLeft="97.5000000000001,413.5" />
        <NodeLayout
          Size="365,42"
          Id="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\DEST Insert Redirected or Rejected Rows to Exception Table"
          TopLeft="5.50000000000011,923.5" />
        <EdgeLayout
          Id="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load.Paths[Row Count Output 31]"
          TopLeft="188,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load.Paths[Row Count Output 3]"
          TopLeft="188,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load.Paths[Row Count Output 21]"
          TopLeft="188,965.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load.Paths[Row Count Output 2]"
          TopLeft="188,863.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load.Paths[Row Count Output 1]"
          TopLeft="188,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load.Paths[Output 0]"
          TopLeft="188,659.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load.Paths[OLE DB Source Output]"
          TopLeft="188,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load.Paths[Error Output]"
          TopLeft="188,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-28.33638671875,20.533203125,56.6727734375,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load.Paths[Error Description Output]"
          TopLeft="188,557.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load.Paths[Derived Column Output]"
          TopLeft="188,761.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\OLE DB Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Incremental Load from EDW_STAGE  to Subcontracting\Incremental Load\Insert Redirected or Rejected Rows to Exception Table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssge="clr-namespace:Microsoft.SqlServer.Graph.Extended;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
        <NodeLayout
          Size="176.8,41.6"
          Id="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Destination"
          TopLeft="454,558.5" />
        <NodeLayout
          Size="220,41.6"
          Id="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\SRC OLE DB Source"
          TopLeft="432.5,150.5" />
        <NodeLayout
          Size="216,41.6"
          Id="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\Get Records Total RowCount"
          TopLeft="434.5,252.5" />
        <NodeLayout
          Size="150.4,41.6"
          Id="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source"
          TopLeft="467.5,48.5" />
        <NodeLayout
          Size="169.6,41.6"
          Id="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\Get AuditDateTime"
          TopLeft="457.5,354.5" />
        <NodeLayout
          Size="201.6,41.6"
          Id="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\DEST OLE DB Destination"
          TopLeft="441.5,456.5" />
        <EdgeLayout
          Id="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load.Paths[Row Count Output 21]"
          TopLeft="542.5,192.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load.Paths[Row Count Output 2]"
          TopLeft="542.5,498.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load.Paths[Row Count Output 1]"
          TopLeft="542.5,294.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load.Paths[OLE DB Source Output]"
          TopLeft="542.5,90.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load.Paths[Derived Column Output]"
          TopLeft="542.5,396.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="l"
          ParentId="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load"
          Size="32,37.6"
          Id="4e97024d-d04c-4c3a-ba03-6d0fc9ce64d2"
          TopLeft="691.5,561">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Color="#FF000000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Initial Load from EDW_STAGE  to ItemPlanning\DFT_Initial_Load\OLE DB Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>